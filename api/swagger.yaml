---
swagger: "2.0"
info:
  description: "An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2024. Licensed\
    \ under the AGPL and commercial licences."
  version: "v5.1.0"
  title: "Open Bank Project API"
  contact:
    name: "TESOBE GmbH. / Open Bank Project"
    url: "https://openbankproject.com"
    email: "contact@tesobe.com"
host: "apisandbox.openbankproject.com"
basePath: "/"
schemes:
- "http"
- "https"
security:
- directLogin: []
  gatewayLogin: []
paths:
  /obp/v5.1.0/account/check/scheme/iban:
    post:
      tags:
      - "Account"
      summary: "Validate and check IBAN"
      description: "<p>Validate and check IBAN for errors</p><p>Authentication is\
        \ Optional</p>"
      operationId: "ibanChecker"
      parameters:
      - in: "body"
        name: "body"
        description: "IbanAddress object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/IbanAddress"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/IbanCheckerJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/accounts/public:
    get:
      tags:
      - "Account-Public"
      - "Account"
      - "PublicData"
      summary: "Get Public Accounts at all Banks"
      description: "<p>Get public accounts at all banks (Anonymous access).<br />Returns\
        \ accounts that contain at least one public view (a view where is_public is\
        \ true)<br />For each account the API returns the ID and the available views.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "publicAccountsAllBanks"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BasicAccountsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorCannotGetAccounts"
  /obp/v5.1.0/adapter:
    get:
      tags:
      - "API"
      summary: "Get Adapter Info"
      description: "<p>Get basic information about the Adapter.</p><p>Authentication\
        \ is Optional</p><p>Authentication is Mandatory</p>"
      operationId: "getAdapterInfo"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AdapterInfoJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/api-collections/API_COLLECTION_ID/api-collection-endpoints:
    get:
      tags:
      - "Api-Collection"
      summary: "Get Api Collection Endpoints"
      description: "<p>Get Api Collection Endpoints By API_COLLECTION_ID.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getApiCollectionEndpoints"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionEndpointsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/api-collections/featured:
    get:
      tags:
      - "Api-Collection"
      summary: "Get Featured Api Collections"
      description: "<p>Get Featured Api Collections.</p><p>Authentication is Optional</p>"
      operationId: "getFeaturedApiCollections"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/api-collections/sharable/API_COLLECTION_ID:
    get:
      tags:
      - "Api-Collection"
      summary: "Get Sharable Api Collection By Id"
      description: "<p>Get Sharable Api Collection By Id.<br />Authentication is Optional</p>"
      operationId: "getSharableApiCollectionById"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/api/glossary:
    get:
      tags:
      - "Documentation"
      summary: "Get Glossary of the API"
      description: "<p>Get API Glossary</p><p>Returns the glossary of the API</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getApiGlossary"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/GlossaryItemsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/api/versions:
    get:
      tags:
      - "Documentation"
      - "API"
      summary: "Get scanned API Versions"
      description: "<p>Get all the scanned API Versions.</p><p>Authentication is Optional</p>"
      operationId: "getScannedApiVersions"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks:
    get:
      tags:
      - "Bank"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Banks"
      description: "<p>Get banks on this API instance<br />Returns a list of banks\
        \ supported on this server:</p><ul><li>ID used as parameter in URLs</li><li>Short\
        \ and full name of bank</li><li>Logo URL</li><li>Website</li></ul><p>Authentication\
        \ is Optional</p>"
      operationId: "getBanks"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BanksJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
    post:
      tags:
      - "Bank"
      summary: "Create Bank"
      description: "<p>Create a new bank (Authenticated access).</p><p>The user creating\
        \ this will be automatically assigned the Role CanCreateEntitlementAtOneBank.<br\
        \ />Thus the User can manage the bank they create and assign Roles to other\
        \ Users.</p><p>Only SANDBOX mode<br />The settlement accounts are created\
        \ specified by the bank in the POST body.<br />Name and account id are created\
        \ in accordance to the next rules:<br />- Incoming account (name: Default\
        \ incoming settlement account, Account ID: OBP_DEFAULT_INCOMING_ACCOUNT_ID,\
        \ currency: EUR)<br />- Outgoing account (name: Default outgoing settlement\
        \ account, Account ID: OBP_DEFAULT_OUTGOING_ACCOUNT_ID, currency: EUR)</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createBank"
      parameters:
      - in: "body"
        name: "body"
        description: "PostBankJson500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostBankJson500"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BankJson500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    put:
      tags:
      - "Bank"
      summary: "Update Bank"
      description: "<p>Update an existing bank (Authenticated access).</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateBank"
      parameters:
      - in: "body"
        name: "body"
        description: "PostBankJson500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostBankJson500"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BankJson500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}:
    get:
      tags:
      - "Bank"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Bank"
      description: "<p>Get the bank specified by BANK_ID<br />Returns information\
        \ about a single bank specified by BANK_ID including:</p><ul><li>Bank code\
        \ and full name of bank</li><li>Logo URL</li><li>Website</li></ul><p>Authentication\
        \ is Optional</p>"
      operationId: "getBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BankJson500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks/{BANK_ID}/{CUSTOMER_ID}/attributes/CUSTOMER_ATTRIBUTE_ID:
    delete:
      tags:
      - "Customer"
      summary: "Delete Customer Attribute"
      description: "<p>Delete Customer Attribute</p><p>CustomerAttributes are used\
        \ to enhance the OBP Customer object with Bank specific entities.</p><p>Delete\
        \ a Customer Attribute by its id.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteCustomerAttribute"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/account-applications:
    get:
      tags:
      - "Account-Application"
      - "Account"
      summary: "Get Account Applications"
      description: "<p>Get the Account Applications.</p><p>Authentication is Mandatory</p>"
      operationId: "getAccountApplications"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountApplicationsJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Account-Application"
      - "Account"
      summary: "Create Account Application"
      description: "<p>Create Account Application</p><p>Authentication is Mandatory</p>"
      operationId: "createAccountApplication"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountApplicationJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountApplicationJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountApplicationResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}:
    get:
      tags:
      - "Account-Application"
      - "Account"
      summary: "Get Account Application by Id"
      description: "<p>Get the Account Application.</p><p>Authentication is Mandatory</p>"
      operationId: "getAccountApplication"
      parameters:
      - name: "ACCOUNT_APPLICATION_ID"
        in: "path"
        description: "the account application id "
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTAPPLICATIONID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountApplicationResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Account-Application"
      - "Account"
      summary: "Update Account Application Status"
      description: "<p>Update an Account Application status</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "updateAccountApplicationStatus"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountApplicationUpdateStatusJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountApplicationUpdateStatusJson"
        x-exportParamName: "Body"
      - name: "ACCOUNT_APPLICATION_ID"
        in: "path"
        description: "the account application id "
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTAPPLICATIONID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountApplicationResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/account-web-hooks:
    post:
      tags:
      - "Webhook"
      - "Bank"
      summary: "Create an Account Webhook"
      description: "<p>Create an Account Webhook</p><p>Webhooks are used to call external\
        \ URLs when certain events happen.</p><p>Account Webhooks focus on events\
        \ around accounts.</p><p>For instance, a webhook could be used to notify an\
        \ external service if a balance changes on an account.</p><p>This functionality\
        \ is work in progress! Please note that only implemented trigger is: OnBalanceChange</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createAccountWebhook"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountWebhookPostJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountWebhookPostJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountWebhookJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
    put:
      tags:
      - "Webhook"
      - "Bank"
      summary: "Enable/Disable an Account Webhook"
      description: "<p>Enable/Disable an Account Webhook</p><p>Webhooks are used to\
        \ call external URLs when certain events happen.</p><p>Account Webhooks focus\
        \ on events around accounts.</p><p>For instance, a webhook could be used to\
        \ notify an external service if a balance changes on an account.</p><p>This\
        \ functionality is work in progress! Please note that only implemented trigger\
        \ is: OnBalanceChange</p><p>Authentication is Mandatory</p>"
      operationId: "enableDisableAccountWebhook"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountWebhookPutJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountWebhookPutJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountWebhookJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks/{BANK_ID}/accounts:
    get:
      tags:
      - "Account"
      - "PrivateData"
      - "PublicData"
      summary: "Get Accounts at Bank"
      description: "<p>Returns the list of accounts at BANK_ID that the user has access\
        \ to.<br />For each account the API returns the account ID and the views available\
        \ to the user..<br />Each account must have at least one private View.</p><p>optional\
        \ request parameters for filter with attributes<br />URL params example: /banks/some-bank-id/accounts?manager=John&amp;count=8</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getPrivateAccountsAtOneBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BasicAccountsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Account"
      summary: "Create Account (POST)"
      description: "<p>Create Account at bank specified by BANK_ID.</p><p>The User\
        \ can create an Account for themself  - or -  the User that has the USER_ID\
        \ specified in the POST body.</p><p>If the POST body USER_ID <em>is</em> specified,\
        \ the logged in user must have the Role CanCreateAccount. Once created, the\
        \ Account will be owned by the User specified by USER_ID.</p><p>If the POST\
        \ body USER_ID is <em>not</em> specified, the account will be owned by the\
        \ logged in User.</p><p>The 'product_code' field SHOULD be a product_code\
        \ from Product.<br />If the product_code matches a product_code from Product,\
        \ account attributes will be created that match the Product Attributes.</p><p>Note:\
        \ The Amount MUST be zero.</p><p>Authentication is Mandatory</p>"
      operationId: "addAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateAccountRequestJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateAccountRequestJsonV310"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CreateAccountResponseJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/accounts-held:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "View-Custom"
      - "PSD2"
      summary: "Get Accounts Held"
      description: "<p>Get Accounts held by the current User if even the User has\
        \ not been assigned the owner View yet.</p><p>Can be used to onboard the account\
        \ to the API - since all other account and transaction endpoints require views\
        \ to be assigned.</p><p>optional request parameters:</p><ul><li>account_type_filter:\
        \ one or many accountType value, split by comma</li><li>account_type_filter_operation:\
        \ the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole\
        \ url example:<br />/banks/BANK_ID/accounts-held?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAccountsHeld"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CoreAccountsHeldJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}:
    post:
      tags:
      - "Account"
      summary: "Update Account Label"
      description: "<p>Update the label for the account. The label is how the account\
        \ is known to the account owner e.g. 'My savings account'</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateAccountLabel"
      parameters:
      - in: "body"
        name: "body"
        description: "UpdateAccountJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UpdateAccountJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    put:
      tags:
      - "Account"
      - "Onboarding"
      summary: "Create Account (PUT)"
      description: "<p>Create Account at bank specified by BANK_ID with Id specified\
        \ by ACCOUNT_ID.</p><p>The User can create an Account for themself  - or -\
        \  the User that has the USER_ID specified in the POST body.</p><p>If the\
        \ PUT body USER_ID <em>is</em> specified, the logged in user must have the\
        \ Role canCreateAccount. Once created, the Account will be owned by the User\
        \ specified by USER_ID.</p><p>If the PUT body USER_ID is <em>not</em> specified,\
        \ the account will be owned by the logged in User.</p><p>The 'product_code'\
        \ field SHOULD be a product_code from Product.<br />If the 'product_code'\
        \ matches a product_code from Product, account attributes will be created\
        \ that match the Product Attributes.</p><p>Note: The Amount MUST be zero.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateAccountRequestJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateAccountRequestJsonV500"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CreateAccountResponseJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account:
    get:
      tags:
      - "Account"
      summary: "Get Account by Id (Full)"
      description: "<p>Information returned about an account specified by ACCOUNT_ID\
        \ as moderated by the view (VIEW_ID):</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>IBAN</li><li>Available\
        \ views (sorted by short_name)</li></ul><p>More details about the data moderation\
        \ by the view <a href=\"#1_2_1-getViewsForBankAccount\">here</a>.</p><p>PSD2\
        \ Context: PSD2 requires customers to have access to their account information\
        \ via third party applications.<br />This call provides balance and other\
        \ account information via delegated authentication using OAuth.</p><p>Authentication\
        \ is required if the 'is_public' field in view (VIEW_ID) is not set to <code>true</code>.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getPrivateAccountByIdFull"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ModeratedAccountJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders:
    get:
      tags:
      - "Account"
      summary: "Get Checkbook orders"
      description: "<pre><code>  Get all checkbook orders</code></pre><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCheckbookOrders"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckbookOrdersJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties:
    get:
      tags:
      - "Counterparty"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      - "Account"
      summary: "Get Counterparties (Explicit)"
      description: "<p>Get the Counterparties (Explicit) for the account / view.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getExplictCounterpartiesForAccount"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartiesJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Create Counterparty (Explicit)"
      description: "<p>Create Counterparty (Explicit) for an Account.</p><p>In OBP,\
        \ there are two types of Counterparty.</p><ul><li><p>Explicit Counterparties\
        \ (those here) which we create explicitly and are used in COUNTERPARTY Transaction\
        \ Requests</p></li><li><p>Implicit Counterparties (AKA Other Accounts) which\
        \ are generated automatically from the other sides of Transactions.</p></li></ul><p>Explicit\
        \ Counterparties are created for the account / view<br />They are how the\
        \ user of the view (e.g. account owner) refers to the other side of the transaction</p><p>name\
        \ : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>description\
        \ : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>currency\
        \ : counterparty account currency (e.g. EUR, GBP, USD, ...)</p><p>bank_routing_scheme\
        \ : eg: bankId or bankCode or any other strings</p><p>bank_routing_address\
        \ : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p><p>account_routing_scheme\
        \ : eg: AccountId or AccountNumber or any other strings</p><p>account_routing_address\
        \ : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p><p>other_account_secondary_routing_scheme\
        \ : eg: IBAN or any other strings</p><p>other_account_secondary_routing_address\
        \ : if it is an IBAN, it should be unique for each counterparty.</p><p>other_branch_routing_scheme\
        \ : eg: branchId or any other strings or you can leave it empty, not useful\
        \ in sandbox mode.</p><p>other_branch_routing_address : eg: <code>branch-id-123</code>\
        \ or you can leave it empty, not useful in sandbox mode.</p><p>is_beneficiary\
        \ : must be set to <code>true</code> in order to send payments to this counterparty</p><p>bespoke:\
        \ It supports a list of key-value, you can add it to the counterparty.</p><p>bespoke.key\
        \ : any info-key you want to add to this counterparty</p><p>bespoke.value\
        \ : any info-value you want to add to this counterparty</p><p>The view specified\
        \ by VIEW_ID must have the canAddCounterparty permission</p><p>A minimal example\
        \ for TransactionRequestType == COUNTERPARTY<br />{<br />&quot;name&quot;:\
        \ &quot;Tesobe1&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br\
        \ />&quot;currency&quot;: &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;:\
        \ &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br\
        \ />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;:\
        \ &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;is_beneficiary&quot;:\
        \ true,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br\
        \ />&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br\
        \ />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;:\
        \ &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>A minimal example\
        \ for TransactionRequestType == SEPA</p><p>{<br />&quot;name&quot;: &quot;Tesobe2&quot;,<br\
        \ />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;currency&quot;:\
        \ &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br\
        \ />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;:\
        \ &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br\
        \ />&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044\
        \ 0532 0130 00&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_branch_routing_scheme&quot;:\
        \ &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br\
        \ />&quot;bespoke&quot;: []<br />}</p><p>Authentication is Mandatory</p>"
      operationId: "createCounterparty"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCounterpartyJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCounterpartyJson400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartyWithMetadataJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}:
    get:
      tags:
      - "Counterparty"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      - "Counterparty-Metadata"
      summary: "Get Counterparty by Id (Explicit)"
      description: "<p>Information returned about the Counterparty specified by COUNTERPARTY_ID:</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getExplictCounterpartyById"
      parameters:
      - name: "COUNTERPARTY_ID"
        in: "path"
        description: "the counterparty id"
        required: true
        type: "string"
        x-exportParamName: "COUNTERPARTYID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartyWithMetadataJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Delete Counterparty (Explicit)"
      description: "<p>Delete Counterparty (Explicit) for an Account.<br />and also\
        \ delete the Metadata for its counterparty.</p><p>need the view permission\
        \ <code>can_delete_counterparty</code><br />Authentication is Mandatory</p>"
      operationId: "deleteExplicitCounterparty"
      parameters:
      - name: "COUNTERPARTY_ID"
        in: "path"
        description: "the counterparty id"
        required: true
        type: "string"
        x-exportParamName: "COUNTERPARTYID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders:
    get:
      tags:
      - "Card"
      summary: "Get status of Credit Card order "
      description: "<pre><code>  Get status of Credit Card orders</code></pre><p>Get\
        \ all orders</p><p>Authentication is Mandatory</p>"
      operationId: "getStatusOfCreditCardOrder"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CreditCardOrderStatusResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/direct-debit:
    post:
      tags:
      - "Direct-Debit"
      - "Account"
      summary: "Create Direct Debit"
      description: "<p>Create direct debit for an account.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "createDirectDebit"
      parameters:
      - in: "body"
        name: "body"
        description: "PostDirectDebitJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostDirectDebitJsonV400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/DirectDebitJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/funds-available:
    get:
      tags:
      - "Account"
      - "Confirmation of Funds Service (PIIS)"
      - "PSD2"
      summary: "Check Available Funds"
      description: "<p>Check Available Funds<br />Mandatory URL parameters:</p><ul><li>amount=NUMBER</li><li>currency=STRING</li></ul><p>Authentication\
        \ is Mandatory</p>"
      operationId: "checkFundsAvailable"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckFundsAvailableJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/metadata/tags:
    get:
      tags:
      - "Account-Metadata"
      - "Account"
      summary: "Get tags on account"
      description: "<p>Returns the account ACCOUNT_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\"\
        >view</a> (VIEW_ID).<br />Authentication is Mandatory</p><p>Authentication\
        \ is required as the tag is linked with the user.</p>"
      operationId: "getTagsForViewOnAccount"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountTagsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Account-Metadata"
      - "Account"
      summary: "Create a tag on account"
      description: "<p>Posts a tag about an account ACCOUNT_ID on a <a href=\"#1_2_1-getViewsForBankAccount\"\
        >view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>Authentication\
        \ is required as the tag is linked with the user.</p>"
      operationId: "addTagForViewOnAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "PostAccountTagJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostAccountTagJSON"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountTagJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/metadata/tags/{TAG_ID}:
    delete:
      tags:
      - "Account-Metadata"
      - "Account"
      summary: "Delete a tag on account"
      description: "<p>Deletes the tag TAG_ID about the account ACCOUNT_ID made on\
        \ <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication\
        \ is Mandatory</p><p>Authentication is required as the tag is linked with\
        \ the user.</p>"
      operationId: "deleteTagForViewOnAccount"
      parameters:
      - name: "TAG_ID"
        in: "path"
        description: "The tag id"
        required: true
        type: "string"
        x-exportParamName: "TAGID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorNoViewPermission"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts:
    get:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Get Other Accounts of one Account"
      description: "<p>Returns data about all the other accounts that have shared\
        \ at least one transaction with the ACCOUNT_ID at BANK_ID.<br />Authentication\
        \ is Optional</p><p>Authentication is required if the view VIEW_ID is not\
        \ public.</p>"
      operationId: "getOtherAccountsForBankAccount"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OtherAccountsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}:
    get:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Get Other Account by Id"
      description: "<p>Returns data about the Other Account that has shared at least\
        \ one transaction with ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication\
        \ is required if the view is not public.</p>"
      operationId: "getOtherAccountByIdForBankAccount"
      parameters:
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OtherAccountJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata:
    get:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Get Other Account Metadata"
      description: "<p>Get metadata of one other account.<br />Returns only the metadata\
        \ about one other bank account (OTHER_ACCOUNT_ID) that had shared at least\
        \ one transaction with ACCOUNT_ID at BANK_ID.</p><p>Authentication via OAuth\
        \ is required if the view is not public.</p><p>Authentication is Mandatory</p>"
      operationId: "getOtherAccountMetadata"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OtherAccountMetadataJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location:
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add Corporate Location to Counterparty"
      description: "<p>Add the geolocation of the counterparty's registered address</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCounterpartyCorporateLocation"
      parameters:
      - in: "body"
        name: "body"
        description: "CorporateLocationJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CorporateLocationJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update Counterparty Corporate Location"
      description: "<p>Update the geolocation of the counterparty's registered address</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCounterpartyCorporateLocation"
      parameters:
      - in: "body"
        name: "body"
        description: "CorporateLocationJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CorporateLocationJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete Counterparty Corporate Location"
      description: "<p>Delete corporate location of other bank account. Delete the\
        \ geolocation of the counterparty's registered address</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCounterpartyCorporateLocation"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url:
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add image url to other bank account"
      description: "<p>Add a url that points to the logo of the counterparty</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCounterpartyImageUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "ImageUrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ImageUrlJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update Counterparty Image Url"
      description: "<p>Update the url that points to the logo of the counterparty</p><p>Authentication\
        \ is Optional</p>"
      operationId: "updateCounterpartyImageUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "ImageUrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ImageUrlJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete Counterparty Image URL"
      description: "<p>Delete image url of other bank account</p><p>Authentication\
        \ is Optional</p>"
      operationId: "deleteCounterpartyImageUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info:
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add Counterparty More Info"
      description: "<p>Add a description of the counter party from the perpestive\
        \ of the account e.g. My dentist</p><p>Authentication is Mandatory</p>"
      operationId: "addCounterpartyMoreInfo"
      parameters:
      - in: "body"
        name: "body"
        description: "MoreInfoJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/MoreInfoJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update Counterparty More Info"
      description: "<p>Update the more info description of the counter party from\
        \ the perpestive of the account e.g. My dentist</p><p>Authentication is Mandatory</p>"
      operationId: "updateCounterpartyMoreInfo"
      parameters:
      - in: "body"
        name: "body"
        description: "MoreInfoJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/MoreInfoJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete more info of other bank account"
      description: "<p>Authentication is Mandatory</p>"
      operationId: "deleteCounterpartyMoreInfo"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url:
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add Open Corporates URL to Counterparty"
      description: "<p>Add open corporates url to other bank account</p><p>Authentication\
        \ is Optional</p>"
      operationId: "addCounterpartyOpenCorporatesUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "OpenCorporateUrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/OpenCorporateUrlJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update Open Corporates Url of Counterparty"
      description: "<p>Update open corporate url of other bank account</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCounterpartyOpenCorporatesUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "OpenCorporateUrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/OpenCorporateUrlJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete Counterparty Open Corporates URL"
      description: "<p>Delete open corporate url of other bank account</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCounterpartyOpenCorporatesUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location:
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add physical location to other bank account"
      description: "<p>Add geocoordinates of the counterparty's main location</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCounterpartyPhysicalLocation"
      parameters:
      - in: "body"
        name: "body"
        description: "PhysicalLocationJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PhysicalLocationJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update Counterparty Physical Location"
      description: "<p>Update geocoordinates of the counterparty's main location</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCounterpartyPhysicalLocation"
      parameters:
      - in: "body"
        name: "body"
        description: "PhysicalLocationJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PhysicalLocationJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete Counterparty Physical Location"
      description: "<p>Delete physical location of other bank account</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCounterpartyPhysicalLocation"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url:
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add url to other bank account"
      description: "<p>A url which represents the counterparty (home page url etc.)</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCounterpartyUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "UrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UrlJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update url of other bank account"
      description: "<p>A url which represents the counterparty (home page url etc.)</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCounterpartyUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "UrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UrlJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete url of other bank account"
      description: "<p>Authentication is Mandatory</p>"
      operationId: "deleteCounterpartyUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias:
    get:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Get Other Account Private Alias"
      description: "<p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication\
        \ is Optional<br />Authentication is required if the view is not public.</p>"
      operationId: "getOtherAccountPrivateAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AliasJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Create Other Account Private Alias"
      description: "<p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication\
        \ is Optional<br />Authentication is required if the view is not public.</p>"
      operationId: "addOtherAccountPrivateAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "AliasJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AliasJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update Counterparty Private Alias"
      description: "<p>Updates the private alias of the counterparty (AKA other account)\
        \ OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is\
        \ required if the view is not public.</p>"
      operationId: "updateCounterpartyPrivateAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "AliasJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AliasJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete Counterparty Private Alias"
      description: "<p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication\
        \ is Optional<br />Authentication is required if the view is not public.</p>"
      operationId: "deleteCounterpartyPrivateAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias:
    get:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Get public alias of other bank account"
      description: "<p>Returns the public alias of the other account OTHER_ACCOUNT_ID.<br\
        \ />Authentication is Optional<br />Authentication is Mandatory if the view\
        \ is not public.</p>"
      operationId: "getCounterpartyPublicAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AliasJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    post:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Add public alias to other bank account"
      description: "<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication\
        \ is Optional<br />Authentication is required if the view is not public.</p><p>Note:\
        \ Public aliases are automatically generated for new 'other accounts / counterparties',\
        \ so this call should only be used if<br />the public alias was deleted.</p><p>The\
        \ VIEW_ID parameter should be a view the caller is permitted to access to\
        \ and that has permission to create public aliases.</p>"
      operationId: "addCounterpartyPublicAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "AliasJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AliasJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    put:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Update public alias of other bank account"
      description: "<p>Updates the public alias of the other account / counterparty\
        \ OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is\
        \ required if the view is not public.</p>"
      operationId: "updateCounterpartyPublicAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "AliasJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AliasJSON"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    delete:
      tags:
      - "Counterparty-Metadata"
      - "Counterparty"
      summary: "Delete Counterparty Public Alias"
      description: "<p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication\
        \ is Optional<br />Authentication is required if the view is not public.</p>"
      operationId: "deleteCounterpartyPublicAlias"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "OTHER_ACCOUNT_ID"
        in: "path"
        description: "The other account id"
        required: true
        type: "string"
        x-exportParamName: "OTHERACCOUNTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/standing-order:
    post:
      tags:
      - "Standing-Order"
      - "Account"
      summary: "Create Standing Order"
      description: "<p>Create standing order for an account.</p><p>when -&gt; frequency\
        \ = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}<br />when -&gt; detail\
        \ = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}</p><p>Authentication is Mandatory</p>"
      operationId: "createStandingOrder"
      parameters:
      - in: "body"
        name: "body"
        description: "PostStandingOrderJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostStandingOrderJsonV400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/StandingOrderJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types:
    get:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Get Transaction Request Types for Account"
      description: "<p>Returns the Transaction Request Types that the account specified\
        \ by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are\
        \ the ways this API Server can create a Transaction via a Transaction Request<br\
        \ />(as opposed to Transaction Types which include external types too e.g.\
        \ for Transactions created by core banking etc.)</p><p>A Transaction Request\
        \ Type internally determines:</p><ul><li>the required Transaction Request\
        \ 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,</li><li>the\
        \ type of security challenge that may be be raised before the Transaction\
        \ Request proceeds, and</li><li>the threshold of that challenge.</li></ul><p>For\
        \ instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency\
        \ units, the user must supply a positive integer to complete the Transaction\
        \ Request and create a Transaction.</p><p>This approach aims to provide only\
        \ one endpoint for initiating transactions, and one that handles challenges,\
        \ whilst still allowing flexibility with the payload and internal logic.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getTransactionRequestTypes"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestTypesJsonV140"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/ACCOUNT/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (ACCOUNT)"
      description: "<p>When using ACCOUNT, the payee is set in the request body.</p><p>Money\
        \ goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate\
        \ a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction\
        \ request</code> may or may not result in a <code>transaction</code>. However,\
        \ a <code>transaction</code> only has one possible state: completed.</p><p>A\
        \ <code>Transaction Request</code> can have one of several states: INITIATED,\
        \ NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled\
        \ on items in a bank statement that represent the movement of money.</p><p><code>Transaction\
        \ Requests</code> are requests to move money which may or may not succeed\
        \ and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction\
        \ Request</code> might create a security challenge that needs to be answered\
        \ before the <code>Transaction Request</code> proceeds.<br />In case 1 person\
        \ needs to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs\
        \ to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt;\
        \ NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound\
        \ to a user i.e. in case of right answer and the user is different than expected\
        \ one the challenge will fail.</p><p>Rule for calculating number of security\
        \ challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyJsonV200 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyJsonV200"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/ACCOUNT_OTP/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (ACCOUNT_OTP)"
      description: "<p>When using ACCOUNT, the payee is set in the request body.</p><p>Money\
        \ goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate\
        \ a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction\
        \ request</code> may or may not result in a <code>transaction</code>. However,\
        \ a <code>transaction</code> only has one possible state: completed.</p><p>A\
        \ <code>Transaction Request</code> can have one of several states: INITIATED,\
        \ NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled\
        \ on items in a bank statement that represent the movement of money.</p><p><code>Transaction\
        \ Requests</code> are requests to move money which may or may not succeed\
        \ and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction\
        \ Request</code> might create a security challenge that needs to be answered\
        \ before the <code>Transaction Request</code> proceeds.<br />In case 1 person\
        \ needs to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs\
        \ to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt;\
        \ NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound\
        \ to a user i.e. in case of right answer and the user is different than expected\
        \ one the challenge will fail.</p><p>Rule for calculating number of security\
        \ challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestAccountOtp"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyJsonV200 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyJsonV200"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (COUNTERPARTY)"
      description: "<p>Special instructions for COUNTERPARTY:</p><p>When using a COUNTERPARTY\
        \ to create a Transaction Request, specificy the counterparty_id in the body\
        \ of the request.<br />The routing details of the counterparty will be forwarded\
        \ for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In\
        \ OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>.\
        \ However, a <code>transaction</code> only has one possible state: completed.</p><p>A\
        \ <code>Transaction Request</code> can have one of several states: INITIATED,\
        \ NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled\
        \ on items in a bank statement that represent the movement of money.</p><p><code>Transaction\
        \ Requests</code> are requests to move money which may or may not succeed\
        \ and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction\
        \ Request</code> might create a security challenge that needs to be answered\
        \ before the <code>Transaction Request</code> proceeds.<br />In case 1 person\
        \ needs to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs\
        \ to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt;\
        \ NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound\
        \ to a user i.e. in case of right answer and the user is different than expected\
        \ one the challenge will fail.</p><p>Rule for calculating number of security\
        \ challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestCounterparty"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyCounterpartyJSON object that needs to\
          \ be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyCounterpartyJSON"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/FREE_FORM/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      summary: "Create Transaction Request (FREE_FORM)"
      description: "<p>Initiate a Payment via creating a Transaction Request.</p><p>In\
        \ OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>.\
        \ However, a <code>transaction</code> only has one possible state: completed.</p><p>A\
        \ <code>Transaction Request</code> can have one of several states: INITIATED,\
        \ NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled\
        \ on items in a bank statement that represent the movement of money.</p><p><code>Transaction\
        \ Requests</code> are requests to move money which may or may not succeed\
        \ and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction\
        \ Request</code> might create a security challenge that needs to be answered\
        \ before the <code>Transaction Request</code> proceeds.<br />In case 1 person\
        \ needs to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs\
        \ to answer security challenge we have next flow of state of an <code>transaction\
        \ request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt;\
        \ NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound\
        \ to a user i.e. in case of right answer and the user is different than expected\
        \ one the challenge will fail.</p><p>Rule for calculating number of security\
        \ challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestFreeForm"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyFreeFormJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyFreeFormJSON"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/REFUND/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (REFUND)"
      description: "<p>Either the <code>from</code> or the <code>to</code> field must\
        \ be filled. Those fields refers to the information about the party that will\
        \ be refunded.</p><p>In case the <code>from</code> object is used, it means\
        \ that the refund comes from the part that sent you a transaction.<br />In\
        \ the <code>from</code> object, you have two choices :<br />- Use <code>bank_id</code>\
        \ and <code>account_id</code> fields if the other account is registered on\
        \ the OBP-API<br />- Use the <code>counterparty_id</code> field in case the\
        \ counterparty account is out of the OBP-API</p><p>In case the <code>to</code>\
        \ object is used, it means you send a request to a counterparty to ask for\
        \ a refund on a previous transaction you sent.<br />(This case is not managed\
        \ by the OBP-API and require an external adapter)</p><p>Initiate a Payment\
        \ via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code>\
        \ may or may not result in a <code>transaction</code>. However, a <code>transaction</code>\
        \ only has one possible state: completed.</p><p>A <code>Transaction Request</code>\
        \ can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code>\
        \ are modeled on items in a bank statement that represent the movement of\
        \ money.</p><p><code>Transaction Requests</code> are requests to move money\
        \ which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A\
        \ <code>Transaction Request</code> might create a security challenge that\
        \ needs to be answered before the <code>Transaction Request</code> proceeds.<br\
        \ />In case 1 person needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br\
        \ />In case n persons needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING\
        \ =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security\
        \ challenge is bound to a user i.e. in case of right answer and the user is\
        \ different than expected one the challenge will fail.</p><p>Rule for calculating\
        \ number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestRefund"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyRefundJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyRefundJsonV400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SANDBOX_TAN/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (SANDBOX_TAN)"
      description: "<p>When using SANDBOX_TAN, the payee is set in the request body.</p><p>Money\
        \ goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate\
        \ a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction\
        \ request</code> may or may not result in a <code>transaction</code>. However,\
        \ a <code>transaction</code> only has one possible state: completed.</p><p>A\
        \ <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code>\
        \ are modeled on items in a bank statement that represent the movement of\
        \ money.</p><p><code>Transaction Requests</code> are requests to move money\
        \ which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A\
        \ <code>Transaction Request</code> might create a security challenge that\
        \ needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction\
        \ Requests contain charge information giving the client the opportunity to\
        \ proceed or not (as long as the challenge level is appropriate).</p><p>Transaction\
        \ Requests can have one of several Transaction Request Types which expect\
        \ different bodies. The escaped body is returned in the details key of the\
        \ GET response.<br />This provides some commonality and one URL for many different\
        \ payment or transfer types with enough flexibility to validate them differently.</p><p>The\
        \ payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified\
        \ in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly\
        \ set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all\
        \ supported types.</p><p>In sandbox mode, if the amount is less than 1000\
        \ EUR (any currency, unless it is set differently on this server), the transaction\
        \ request will create a transaction without a challenge, else the Transaction\
        \ Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p>{<br />&quot;XAF&quot;:{<br />&quot;XAF&quot;:1.0,<br\
        \ />&quot;HKD&quot;:0.0135503,<br />&quot;AUD&quot;:0.00228226,<br />&quot;KRW&quot;:1.87975,<br\
        \ />&quot;JOD&quot;:0.00127784,<br />&quot;GBP&quot;:0.00131092,<br />&quot;MXN&quot;:0.0396,<br\
        \ />&quot;AED&quot;:0.00601555,<br />&quot;INR&quot;:0.110241,<br />&quot;XBT&quot;:2.9074795E-8,<br\
        \ />&quot;JPY&quot;:0.185328,<br />&quot;USD&quot;:0.00163773,<br />&quot;ILS&quot;:0.00641333,<br\
        \ />&quot;EUR&quot;:0.00152449<br />},<br />&quot;HKD&quot;:{<br />&quot;XAF&quot;:73.8049,<br\
        \ />&quot;HKD&quot;:1.0,<br />&quot;AUD&quot;:0.178137,<br />&quot;KRW&quot;:143.424,<br\
        \ />&quot;JOD&quot;:0.0903452,<br />&quot;GBP&quot;:0.0985443,<br />&quot;MXN&quot;:2.8067,<br\
        \ />&quot;AED&quot;:0.467977,<br />&quot;INR&quot;:9.09325,<br />&quot;XBT&quot;:2.164242461E-6,<br\
        \ />&quot;JPY&quot;:14.0867,<br />&quot;USD&quot;:0.127427,<br />&quot;ILS&quot;:0.460862,<br\
        \ />&quot;EUR&quot;:0.112495<br />},<br />&quot;AUD&quot;:{<br />&quot;XAF&quot;:438.162,<br\
        \ />&quot;HKD&quot;:5.61346,<br />&quot;AUD&quot;:1.0,<br />&quot;KRW&quot;:895.304,<br\
        \ />&quot;JOD&quot;:0.556152,<br />&quot;GBP&quot;:0.609788,<br />&quot;MXN&quot;:16.0826,<br\
        \ />&quot;AED&quot;:2.88368,<br />&quot;INR&quot;:50.4238,<br />&quot;XBT&quot;:1.2284055924E-5,<br\
        \ />&quot;JPY&quot;:87.0936,<br />&quot;USD&quot;:0.785256,<br />&quot;ILS&quot;:2.83558,<br\
        \ />&quot;EUR&quot;:0.667969<br />},<br />&quot;KRW&quot;:{<br />&quot;XAF&quot;:0.531986,<br\
        \ />&quot;HKD&quot;:0.00697233,<br />&quot;AUD&quot;:0.00111694,<br />&quot;KRW&quot;:1.0,<br\
        \ />&quot;JOD&quot;:6.30634E-4,<br />&quot;GBP&quot;:6.97389E-4,<br />&quot;MXN&quot;:0.0183,<br\
        \ />&quot;AED&quot;:0.00320019,<br />&quot;INR&quot;:0.0586469,<br />&quot;XBT&quot;:1.4234725E-8,<br\
        \ />&quot;JPY&quot;:0.0985917,<br />&quot;USD&quot;:8.7125E-4,<br />&quot;ILS&quot;:0.00316552,<br\
        \ />&quot;EUR&quot;:8.11008E-4<br />},<br />&quot;JOD&quot;:{<br />&quot;XAF&quot;:782.572,<br\
        \ />&quot;HKD&quot;:11.0687,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1585.68,<br\
        \ />&quot;JOD&quot;:1.0,<br />&quot;GBP&quot;:1.06757,<br />&quot;MXN&quot;:30.8336,<br\
        \ />&quot;AED&quot;:5.18231,<br />&quot;INR&quot;:90.1236,<br />&quot;XBT&quot;:2.3803244006E-5,<br\
        \ />&quot;JPY&quot;:156.304,<br />&quot;USD&quot;:1.41112,<br />&quot;ILS&quot;:5.02018,<br\
        \ />&quot;EUR&quot;:0.237707<br />},<br />&quot;GBP&quot;:{<br />&quot;XAF&quot;:762.826,<br\
        \ />&quot;HKD&quot;:10.1468,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1433.92,<br\
        \ />&quot;JOD&quot;:0.936707,<br />&quot;GBP&quot;:1.0,<br />&quot;MXN&quot;:29.242,<br\
        \ />&quot;AED&quot;:4.58882,<br />&quot;INR&quot;:84.095,<br />&quot;XBT&quot;:2.2756409956E-5,<br\
        \ />&quot;JPY&quot;:141.373,<br />&quot;USD&quot;:1.2493,<br />&quot;ILS&quot;:4.7002,<br\
        \ />&quot;EUR&quot;:1.16278<br />},<br />&quot;MXN&quot;:{<br />&quot;XAF&quot;:25.189,<br\
        \ />&quot;HKD&quot;:0.3562,<br />&quot;AUD&quot;:0.0621,<br />&quot;KRW&quot;:54.4512,<br\
        \ />&quot;JOD&quot;:0.0324,<br />&quot;GBP&quot;:0.0341,<br />&quot;MXN&quot;:1.0,<br\
        \ />&quot;AED&quot;:0.1688,<br />&quot;INR&quot;:3.3513,<br />&quot;XBT&quot;:8.1112586E-7,<br\
        \ />&quot;JPY&quot;:4.8687,<br />&quot;USD&quot;:0.0459,<br />&quot;ILS&quot;:0.1541,<br\
        \ />&quot;EUR&quot;:0.0384<br />},<br />&quot;AED&quot;:{<br />&quot;XAF&quot;:166.236,<br\
        \ />&quot;HKD&quot;:2.13685,<br />&quot;AUD&quot;:0.346779,<br />&quot;KRW&quot;:312.482,<br\
        \ />&quot;JOD&quot;:0.1930565,<br />&quot;GBP&quot;:0.217921,<br />&quot;MXN&quot;:5.9217,<br\
        \ />&quot;AED&quot;:1.0,<br />&quot;INR&quot;:18.3255,<br />&quot;XBT&quot;:4.603349217E-6,<br\
        \ />&quot;JPY&quot;:30.8081,<br />&quot;USD&quot;:0.27225,<br />&quot;ILS&quot;:0.968033,<br\
        \ />&quot;EUR&quot;:0.253425<br />},<br />&quot;INR&quot;:{<br />&quot;XAF&quot;:9.07101,<br\
        \ />&quot;HKD&quot;:0.109972,<br />&quot;AUD&quot;:0.0198319,<br />&quot;KRW&quot;:17.0512,<br\
        \ />&quot;JOD&quot;:0.0110959,<br />&quot;GBP&quot;:0.0118913,<br />&quot;MXN&quot;:0.2983,<br\
        \ />&quot;AED&quot;:0.0545671,<br />&quot;INR&quot;:1.0,<br />&quot;XBT&quot;:2.2689396E-7,<br\
        \ />&quot;JPY&quot;:1.68111,<br />&quot;USD&quot;:0.0148559,<br />&quot;ILS&quot;:0.0556764,<br\
        \ />&quot;EUR&quot;:0.0138287<br />},<br />&quot;XBT&quot;:{<br />&quot;XAF&quot;:3.4353824E7,<br\
        \ />&quot;HKD&quot;:460448.9,<br />&quot;AUD&quot;:81168.603,<br />&quot;KRW&quot;:7.0131575E7,<br\
        \ />&quot;JOD&quot;:41960.111,<br />&quot;GBP&quot;:44188.118,<br />&quot;MXN&quot;:1230503.3,<br\
        \ />&quot;AED&quot;:217414.47,<br />&quot;INR&quot;:4407607.74,<br />&quot;XBT&quot;:1.0,<br\
        \ />&quot;JPY&quot;:6805170.8,<br />&quot;USD&quot;:59245.918,<br />&quot;ILS&quot;:182981.21,<br\
        \ />&quot;EUR&quot;:52436.431<br />},<br />&quot;JPY&quot;:{<br />&quot;XAF&quot;:5.39585,<br\
        \ />&quot;HKD&quot;:0.0709891,<br />&quot;AUD&quot;:0.0114819,<br />&quot;KRW&quot;:10.1428,<br\
        \ />&quot;JOD&quot;:0.00639777,<br />&quot;GBP&quot;:0.0070735,<br />&quot;MXN&quot;:0.2053,<br\
        \ />&quot;AED&quot;:0.032459,<br />&quot;INR&quot;:0.594846,<br />&quot;XBT&quot;:1.47171931E-7,<br\
        \ />&quot;JPY&quot;:1.0,<br />&quot;USD&quot;:0.00883695,<br />&quot;ILS&quot;:0.0320926,<br\
        \ />&quot;EUR&quot;:0.00822592<br />},<br />&quot;USD&quot;:{<br />&quot;XAF&quot;:610.601,<br\
        \ />&quot;HKD&quot;:7.84766,<br />&quot;AUD&quot;:1.27347,<br />&quot;KRW&quot;:1147.78,<br\
        \ />&quot;JOD&quot;:0.708659,<br />&quot;GBP&quot;:0.800446,<br />&quot;MXN&quot;:21.748,<br\
        \ />&quot;AED&quot;:3.6731,<br />&quot;INR&quot;:67.3135,<br />&quot;XBT&quot;:1.69154E-5,<br\
        \ />&quot;JPY&quot;:113.161,<br />&quot;USD&quot;:1.0,<br />&quot;ILS&quot;:3.55495,<br\
        \ />&quot;EUR&quot;:0.930886<br />},<br />&quot;ILS&quot;:{<br />&quot;XAF&quot;:155.925,<br\
        \ />&quot;HKD&quot;:2.16985,<br />&quot;AUD&quot;:0.352661,<br />&quot;KRW&quot;:315.903,<br\
        \ />&quot;JOD&quot;:0.199196,<br />&quot;GBP&quot;:0.212763,<br />&quot;MXN&quot;:6.4871,<br\
        \ />&quot;AED&quot;:1.03302,<br />&quot;INR&quot;:17.9609,<br />&quot;XBT&quot;:5.452272147E-6,<br\
        \ />&quot;JPY&quot;:31.1599,<br />&quot;USD&quot;:0.281298,<br />&quot;ILS&quot;:1.0,<br\
        \ />&quot;EUR&quot;:1.19318<br />},<br />&quot;EUR&quot;:{<br />&quot;XAF&quot;:655.957,<br\
        \ />&quot;HKD&quot;:8.88926,<br />&quot;AUD&quot;:1.49707,<br />&quot;KRW&quot;:1233.03,<br\
        \ />&quot;JOD&quot;:0.838098,<br />&quot;GBP&quot;:0.860011,<br />&quot;MXN&quot;:26.0359,<br\
        \ />&quot;AED&quot;:3.94594,<br />&quot;INR&quot;:72.3136,<br />&quot;XBT&quot;:1.9087905636E-5,<br\
        \ />&quot;JPY&quot;:121.567,<br />&quot;USD&quot;:1.07428,<br />&quot;ILS&quot;:4.20494,<br\
        \ />&quot;EUR&quot;:1.0<br />}<br />}</p><p>Transaction Requests satisfy PSD2\
        \ requirements thus:</p><p>1) A transaction can be initiated by a third party\
        \ application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3)\
        \ The call supports delegated authentication (OAuth)</p><p>See <a href=\"\
        https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestSandboxTan"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyJsonV200 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyJsonV200"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (SEPA)"
      description: "<p>Special instructions for SEPA:</p><p>When using a SEPA Transaction\
        \ Request, you specify the IBAN of a Counterparty in the body of the request.<br\
        \ />The routing details (IBAN) of the counterparty will be forwarded to the\
        \ core banking system for the transfer.</p><p>Initiate a Payment via creating\
        \ a Transaction Request.</p><p>In OBP, a <code>transaction request</code>\
        \ may or may not result in a <code>transaction</code>. However, a <code>transaction</code>\
        \ only has one possible state: completed.</p><p>A <code>Transaction Request</code>\
        \ can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code>\
        \ are modeled on items in a bank statement that represent the movement of\
        \ money.</p><p><code>Transaction Requests</code> are requests to move money\
        \ which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A\
        \ <code>Transaction Request</code> might create a security challenge that\
        \ needs to be answered before the <code>Transaction Request</code> proceeds.<br\
        \ />In case 1 person needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br\
        \ />In case n persons needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING\
        \ =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security\
        \ challenge is bound to a user i.e. in case of right answer and the user is\
        \ different than expected one the challenge will fail.</p><p>Rule for calculating\
        \ number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestSepa"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodySEPAJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodySEPAJsonV400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SIMPLE/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (SIMPLE)"
      description: "<p>Special instructions for SIMPLE:</p><p>You can transfer money\
        \ to the Bank Account Number or IBAN directly.</p><p>Initiate a Payment via\
        \ creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code>\
        \ may or may not result in a <code>transaction</code>. However, a <code>transaction</code>\
        \ only has one possible state: completed.</p><p>A <code>Transaction Request</code>\
        \ can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code>\
        \ are modeled on items in a bank statement that represent the movement of\
        \ money.</p><p><code>Transaction Requests</code> are requests to move money\
        \ which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A\
        \ <code>Transaction Request</code> might create a security challenge that\
        \ needs to be answered before the <code>Transaction Request</code> proceeds.<br\
        \ />In case 1 person needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br\
        \ />In case n persons needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING\
        \ =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security\
        \ challenge is bound to a user i.e. in case of right answer and the user is\
        \ different than expected one the challenge will fail.</p><p>Rule for calculating\
        \ number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestSimple"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodySimpleJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodySimpleJsonV400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  ? /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge
  : post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Answer Transaction Request Challenge"
      description: "<p>In Sandbox mode, any string that can be converted to a positive\
        \ integer will be accepted as an answer.</p><p>This endpoint totally depends\
        \ on createTransactionRequest, it need get the following data from createTransactionRequest\
        \ response body.</p><p>1)<code>TRANSACTION_REQUEST_TYPE</code> : is the same\
        \ as createTransactionRequest request URL .</p><p>2)<code>TRANSACTION_REQUEST_ID</code>\
        \ : is the <code>id</code> field in createTransactionRequest response body.</p><p>3)\
        \ <code>id</code> :  is <code>challenge.id</code> field in createTransactionRequest\
        \ response body.</p><p>4) <code>answer</code> : must be <code>123</code> in\
        \ case that Strong Customer Authentication method for OTP challenge is dummy.<br\
        \ />For instance: SANDBOX_TAN_OTP_INSTRUCTION_TRANSPORT=dummy<br />Possible\
        \ values are dummy,email and sms<br />In kafka mode, the answer can be got\
        \ by phone message or other SCA methods.</p><p>Note that each Transaction\
        \ Request Type can have its own OTP_INSTRUCTION_TRANSPORT method.<br />OTP_INSTRUCTION_TRANSPORT\
        \ methods are set in Props. See sample.props.template for instructions.</p><p>Single\
        \ or Multiple authorisations</p><p>OBP allows single or multi party authorisations.</p><p>Single\
        \ party authorisation:</p><p>In the case that only one person needs to authorise\
        \ i.e. answer a security challenge we have the following change of state of\
        \ a <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED</p><p>Multiparty\
        \ authorisation:</p><p>In the case that multiple parties (n persons) need\
        \ to authorise a transaction request i.e. answer security challenges, we have\
        \ the followings state flow for a <code>transaction request</code>:<br />INITIATED\
        \ =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt;\
        \ COMPLETED</p><p>The security challenge is bound to a user i.e. in the case\
        \ of a correct answer but the user is different than expected the challenge\
        \ will fail.</p><p>Rule for calculating number of security challenges:<br\
        \ />If Product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create\
        \ N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In the case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute,\
        \ the default number of security challenges created is one.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "answerTransactionRequestChallenge"
      parameters:
      - in: "body"
        name: "body"
        description: "ChallengeAnswerJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ChallengeAnswerJson400"
        x-exportParamName: "Body"
      - name: "TRANSACTION_REQUEST_ID"
        in: "path"
        description: "The transaction request id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTID"
      - name: "TRANSACTION_REQUEST_TYPE"
        in: "path"
        description: "The transaction request type"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTTYPE"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests:
    get:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      summary: "Get Transaction Requests."
      description: "<p>Returns transaction requests for account specified by ACCOUNT_ID\
        \ at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner'\
        \ and the user must have access to this view.</p><p>Version 2.0.0 now returns\
        \ charge information.</p><p>Transaction Requests serve to initiate transactions\
        \ that may or may not proceed. They contain information including:</p><ul><li>Transaction\
        \ Request Id</li><li>Type</li><li>Status (INITIATED, COMPLETED)</li><li>Challenge\
        \ (in order to confirm the request)</li><li>From Bank / Account</li><li>Details\
        \ including Currency, Value, Description and other initiation information\
        \ specific to each type. (Could potentialy include a list of future transactions.)</li><li>Related\
        \ Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges\
        \ to the customer.<br />This endpoint provides the charge that would be applied\
        \ if the Transaction Request proceeds - and a record of that charge there\
        \ after.<br />The customer can proceed with the Transaction by answering the\
        \ security challenge.</p><p>Authentication is Mandatory</p>"
      operationId: "getTransactionRequests"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSONs210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}:
    get:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Get Transaction Request."
      description: "<p>Returns transaction request for transaction specified by TRANSACTION_REQUEST_ID\
        \ and for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The\
        \ VIEW_ID specified must be 'owner' and the user must have access to this\
        \ view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction\
        \ Requests serve to initiate transactions that may or may not proceed. They\
        \ contain information including:</p><ul><li>Transaction Request Id</li><li>Type</li><li>Status\
        \ (INITIATED, COMPLETED)</li><li>Challenge (in order to confirm the request)</li><li>From\
        \ Bank / Account</li><li>Details including Currency, Value, Description and\
        \ other initiation information specific to each type. (Could potentialy include\
        \ a list of future transactions.)</li><li>Related Transactions</li></ul><p>PSD2\
        \ Context: PSD2 requires transparency of charges to the customer.<br />This\
        \ endpoint provides the charge that would be applied if the Transaction Request\
        \ proceeds - and a record of that charge there after.<br />The customer can\
        \ proceed with the Transaction by answering the security challenge.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getTransactionRequest"
      parameters:
      - name: "TRANSACTION_REQUEST_ID"
        in: "path"
        description: "The transaction request id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions:
    get:
      tags:
      - "Transaction"
      - "Account"
      summary: "Get Transactions for Account (Full)"
      description: "<p>Returns transactions list of the account specified by ACCOUNT_ID\
        \ and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view\
        \ (VIEW_ID).</p><p>Authentication is Optional</p><p>Authentication is required\
        \ if the view is not public.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER\
        \ ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE\
        \ =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is\
        \ one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example\
        \ value: 2024-02-05T14:15:55.255Z. NOTE! The default value is now (2024-02-05T14:15:55.255Z).</li></ul><p>Date\
        \ format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z)\
        \ ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>"
      operationId: "getTransactionsForBankAccount"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorFilterSortDirectionError"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/double-entry-transaction:
    get:
      tags:
      - "Transaction"
      summary: "Get Double Entry Transaction"
      description: "<p>Get Double Entry Transaction</p><p>This endpoint can be used\
        \ to see the double entry transactions. It returns the <code>bank_id</code>,\
        \ <code>account_id</code> and <code>transaction_id</code><br />for the debit\
        \ end the credit transaction. The other side account can be a settlement account\
        \ or an OBP account.</p><p>The endpoint also provide the <code>transaction_request</code>\
        \ object which contains the <code>bank_id</code>, <code>account_id</code>\
        \ and<br /><code>transaction_request_id</code> of the transaction request\
        \ at the origin of the transaction. Please note that if none<br />transaction\
        \ request is at the origin of the transaction, the <code>transaction_request</code>\
        \ object will be <code>null</code>.</p><p>Authentication is Mandatory</p>"
      operationId: "getDoubleEntryTransaction"
      parameters:
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DoubleEntryTransactionJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments:
    get:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Get Transaction Comments"
      description: "<p>Returns the transaction TRANSACTION_ID comments made on a <a\
        \ href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).</p><p>Authentication\
        \ via OAuth is required if the view is not public.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getCommentsForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionCommentsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Add a Transaction Comment"
      description: "<p>Posts a comment about a transaction TRANSACTION_ID on a <a\
        \ href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>${authenticationRequiredMessage(false)}</p><p>Authentication\
        \ is required since the comment is linked with the user.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCommentForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "PostTransactionCommentJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostTransactionCommentJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionCommentJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments/{COMMENT_ID}:
    delete:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Delete a Transaction Comment"
      description: "<p>Delete the comment COMMENT_ID about the transaction TRANSACTION_ID\
        \ made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication\
        \ via OAuth is required. The user must either have owner privileges for this\
        \ account, or must be the user that posted the comment.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCommentForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "COMMENT_ID"
        in: "path"
        description: "The comment id"
        required: true
        type: "string"
        x-exportParamName: "COMMENTID"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images:
    get:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Get Transaction Images"
      description: "<p>Returns the transaction TRANSACTION_ID images made on a <a\
        \ href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication\
        \ via OAuth is required if the view is not public.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getImagesForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionImagesJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Add a Transaction Image"
      description: "<p>Posts an image about a transaction TRANSACTION_ID on a <a href=\"\
        #1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is\
        \ Mandatory</p><p>The image is linked with the user.</p>"
      operationId: "addImageForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "PostTransactionImageJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostTransactionImageJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionImageJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images/{IMAGE_ID}:
    delete:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Delete a Transaction Image"
      description: "<p>Deletes the image IMAGE_ID about the transaction TRANSACTION_ID\
        \ made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication\
        \ via OAuth is required. The user must either have owner privileges for this\
        \ account, or must be the user that posted the image.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteImageForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "IMAGE_ID"
        in: "path"
        description: "The image id"
        required: true
        type: "string"
        x-exportParamName: "IMAGEID"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative:
    get:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Get a Transaction Narrative"
      description: "<p>Returns the account owner description of the transaction <a\
        \ href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view.</p><p>Authentication\
        \ via OAuth is required if the view is not public.</p><p>Authentication is\
        \ Optional</p>"
      operationId: "getTransactionNarrative"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionNarrativeJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    post:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Add a Transaction Narrative"
      description: "<p>Creates a description of the transaction TRANSACTION_ID.</p><p>Note:\
        \ Unlike other items of metadata, there is only one &quot;narrative&quot;\
        \ per transaction accross all views.<br />If you set narrative via a view\
        \ e.g. view-x it will be seen via view-y (as long as view-y has permission\
        \ to see the narrative).</p><p>Authentication is Optional<br />Authentication\
        \ is required if the view is not public.</p>"
      operationId: "addTransactionNarrative"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionNarrativeJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionNarrativeJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    put:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Update a Transaction Narrative"
      description: "<p>Updates the description of the transaction TRANSACTION_ID.</p><p>Authentication\
        \ via OAuth is required if the view is not public.</p><p>Authentication is\
        \ Optional</p>"
      operationId: "updateTransactionNarrative"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionNarrativeJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionNarrativeJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    delete:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Delete a Transaction Narrative"
      description: "<p>Deletes the description of the transaction TRANSACTION_ID.</p><p>Authentication\
        \ via OAuth is required if the view is not public.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "deleteTransactionNarrative"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags:
    get:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Get Transaction Tags"
      description: "<p>Returns the transaction TRANSACTION_ID tags made on a <a href=\"\
        #1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via\
        \ OAuth is required if the view is not public.</p><p>Authentication is Optional</p>"
      operationId: "getTagsForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionTagJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    post:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Add a Transaction Tag"
      description: "<p>Posts a tag about a transaction TRANSACTION_ID on a <a href=\"\
        #1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is\
        \ Mandatory</p><p>Authentication is required as the tag is linked with the\
        \ user.</p>"
      operationId: "addTagForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "PostTransactionTagJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostTransactionTagJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionTagJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags/{TAG_ID}:
    delete:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Delete a Transaction Tag"
      description: "<p>Deletes the tag TAG_ID about the transaction TRANSACTION_ID\
        \ made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.<br />Authentication\
        \ via OAuth is required. The user must either have owner privileges for this\
        \ account,<br />or must be the user that posted the tag.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "deleteTagForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TAG_ID"
        in: "path"
        description: "The tag id"
        required: true
        type: "string"
        x-exportParamName: "TAGID"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorNoViewPermission"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where:
    get:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Get a Transaction where Tag"
      description: "<p>Returns the &quot;where&quot; Geo tag added to the transaction\
        \ TRANSACTION_ID made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>\
        \ (VIEW_ID).<br />It represents the location where the transaction has been\
        \ initiated.</p><p>Authentication via OAuth is required if the view is not\
        \ public.</p><p>Authentication is Optional</p>"
      operationId: "getWhereTagForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionWhereJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
    post:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Add a Transaction where Tag"
      description: "<p>Creates a &quot;where&quot; Geo tag on a transaction TRANSACTION_ID\
        \ in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication\
        \ is Mandatory</p><p>The geo tag is linked with the user.</p>"
      operationId: "addWhereTagForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "PostTransactionWhereJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostTransactionWhereJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Update a Transaction where Tag"
      description: "<p>Updates the &quot;where&quot; Geo tag on a transaction TRANSACTION_ID\
        \ in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication\
        \ is Mandatory</p><p>The geo tag is linked with the user.</p>"
      operationId: "updateWhereTagForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "PostTransactionWhereJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostTransactionWhereJSON"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Transaction-Metadata"
      - "Transaction"
      summary: "Delete a Transaction Tag"
      description: "<p>Deletes the where tag of the transaction TRANSACTION_ID made\
        \ on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication\
        \ is Mandatory</p><p>The user must either have owner privileges for this account,\
        \ or must be the user that posted the geo tag.</p>"
      operationId: "deleteWhereTagForViewOnTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account:
    get:
      tags:
      - "Transaction"
      - "Counterparty"
      summary: "Get Other Account of Transaction"
      description: "<p>Get other account of a transaction.<br />Returns details of\
        \ the other party involved in the transaction, moderated by the <a href=\"\
        #1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via\
        \ OAuth is required if the view is not public.</p><p>Authentication is Optional</p>"
      operationId: "getOtherAccountForTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OtherAccountJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/transaction:
    get:
      tags:
      - "Transaction"
      summary: "Get Transaction by Id"
      description: "<p>Returns one transaction specified by TRANSACTION_ID of the\
        \ account ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a>\
        \ by the view (VIEW_ID).</p><p>Authentication is Optional<br />Authentication\
        \ is required if the view is not public.</p>"
      operationId: "getTransactionByIdForBankAccount"
      parameters:
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankAccountNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account-access:
    put:
      tags:
      - "Account-Access"
      - "View-Custom"
      - "Account"
      - "User"
      - "OwnerViewRequired"
      summary: "Revoke/Grant User access to View"
      description: "<p>Revoke/Grant the logged in User access to the views identified\
        \ by json.</p><p>Authentication is Mandatory and the user needs to be an account\
        \ holder or has owner view access.</p>"
      operationId: "revokeGrantUserAccessToViews"
      parameters:
      - in: "body"
        name: "body"
        description: "PostRevokeGrantAccountAccessJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/PostRevokeGrantAccountAccessJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/RevokedJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account-access/grant:
    post:
      tags:
      - "Account-Access"
      - "View-Custom"
      - "Account"
      - "User"
      - "OwnerViewRequired"
      summary: "Grant User access to View"
      description: "<p>Grants the User identified by USER_ID access to the view identified\
        \ by VIEW_ID.</p><p>Authentication is Mandatory and the user needs to be account\
        \ holder.</p>"
      operationId: "grantUserAccessToView"
      parameters:
      - in: "body"
        name: "body"
        description: "PostAccountAccessJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostAccountAccessJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account-access/revoke:
    post:
      tags:
      - "Account-Access"
      - "View-Custom"
      - "Account"
      - "User"
      - "OwnerViewRequired"
      summary: "Revoke User access to View"
      description: "<p>Revoke the User identified by USER_ID access to the view identified\
        \ by VIEW_ID.</p><p>Authentication is Mandatory and the user needs to be account\
        \ holder.</p>"
      operationId: "revokeUserAccessToView"
      parameters:
      - in: "body"
        name: "body"
        description: "PostAccountAccessJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostAccountAccessJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/RevokedJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/balances:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Account Balances"
      description: "<p>Get the Balances for one Account of the current User at one\
        \ bank.</p><p>Authentication is Mandatory</p>"
      operationId: "getBankAccountBalances"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountBalanceJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/customer-account-links:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Account Links by ACCOUNT_ID"
      description: "<p>Get Customer Account Links by ACCOUNT_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerAccountLinksByBankIdAccountId"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAccountLinksJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions:
    get:
      tags:
      - "View-Custom"
      - "Account"
      - "User"
      - "Entitlement"
      summary: "Get access"
      description: "<p>Returns the list of the permissions at BANK_ID for account\
        \ ACCOUNT_ID, with each time a pair composed of the user and the views that\
        \ he has access to.</p><p>Authentication is Mandatory<br />and the user needs\
        \ to have access to the owner view.</p>"
      operationId: "getPermissionsForBankAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PermissionsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}:
    get:
      tags:
      - "View-Custom"
      - "Account"
      - "User"
      summary: "Get Account access for User"
      description: "<p>Returns the list of the views at BANK_ID for account ACCOUNT_ID\
        \ that a user identified by PROVIDER_ID at their provider PROVIDER has access\
        \ to.<br />All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\"\
        >%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER.</p><p>Authentication\
        \ is Mandatory</p><p>The user needs to have access to the owner view.</p>"
      operationId: "getPermissionForUserForBankAccount"
      parameters:
      - name: "PROVIDER"
        in: "path"
        description: "the user PROVIDER"
        required: true
        type: "string"
        x-exportParamName: "PROVIDER"
      - name: "PROVIDER_ID"
        in: "path"
        description: "The provider id"
        required: true
        type: "string"
        x-exportParamName: "PROVIDERID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attribute:
    post:
      tags:
      - "Account"
      summary: "Create Account Attribute"
      description: "<p>Create Account Attribute</p><p>Account Attributes are used\
        \ to describe a financial Product with a list of typed key value pairs.</p><p>Each\
        \ Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account\
        \ attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for\
        \ German bonds)<br />REDCODE (markit short code for credit derivative)<br\
        \ />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the\
        \ bond was issued in the market)<br />MATURITY_DATE (End of life time of a\
        \ product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a>\
        \ for more examples.</p><p>The type field must be one of &quot;STRING&quot;,\
        \ &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createAccountAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountAttributeJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountAttributeJson"
        x-exportParamName: "Body"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attributes/{ACCOUNT_ATTRIBUTE_ID}:
    put:
      tags:
      - "Account"
      summary: "Update Account Attribute"
      description: "<p>Update Account Attribute</p><p>Account Attributes are used\
        \ to describe a financial Product with a list of typed key value pairs.</p><p>Each\
        \ Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account\
        \ attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for\
        \ German bonds)<br />REDCODE (markit short code for credit derivative)<br\
        \ />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the\
        \ bond was issued in the market)<br />MATURITY_DATE (End of life time of a\
        \ product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a>\
        \ for more examples.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAccountAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountAttributeJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountAttributeJson"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ATTRIBUTE_ID"
        in: "path"
        description: "the account attribute id "
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTATTRIBUTEID"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attribute:
    post:
      tags:
      - "Transaction-Request"
      summary: "Create Transaction Request Attribute"
      description: "<p>Create Transaction Request Attribute</p><p>The type field must\
        \ be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or\
        \ DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestAttributeJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "TRANSACTION_REQUEST_ID"
        in: "path"
        description: "The transaction request id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attributes:
    get:
      tags:
      - "Transaction-Request"
      summary: "Get Transaction Request Attributes"
      description: "<p>Get Transaction Request Attributes</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getTransactionRequestAttributes"
      parameters:
      - name: "TRANSACTION_REQUEST_ID"
        in: "path"
        description: "The transaction request id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestAttributesResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attributes/ATTRIBUTE_ID:
    get:
      tags:
      - "Transaction-Request"
      summary: "Get Transaction Request Attribute By Id"
      description: "<p>Get Transaction Request Attribute By Id</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getTransactionRequestAttributeById"
      parameters:
      - name: "TRANSACTION_REQUEST_ID"
        in: "path"
        description: "The transaction request id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Transaction-Request"
      summary: "Update Transaction Request Attribute"
      description: "<p>Update Transaction Request Attribute</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "updateTransactionRequestAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestAttributeJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "TRANSACTION_REQUEST_ID"
        in: "path"
        description: "The transaction request id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONREQUESTID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attribute:
    post:
      tags:
      - "Transaction"
      summary: "Create Transaction Attribute"
      description: "<p>Create Transaction Attribute</p><p>The type field must be one\
        \ of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createTransactionAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attributes:
    get:
      tags:
      - "Transaction"
      summary: "Get Transaction Attributes"
      description: "<p>Get Transaction Attributes</p><p>Authentication is Mandatory</p>"
      operationId: "getTransactionAttributes"
      parameters:
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionAttributesResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attributes/{ACCOUNT_ATTRIBUTE_ID}:
    put:
      tags:
      - "Transaction"
      summary: "Update Transaction Attribute"
      description: "<p>Update Transaction Attribute</p><p>Authentication is Mandatory</p>"
      operationId: "updateTransactionAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ATTRIBUTE_ID"
        in: "path"
        description: "the account attribute id "
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTATTRIBUTEID"
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attributes/ATTRIBUTE_ID:
    get:
      tags:
      - "Transaction"
      summary: "Get Transaction Attribute By Id"
      description: "<p>Get Transaction Attribute By Id</p><p>Authentication is Mandatory</p>"
      operationId: "getTransactionAttributeById"
      parameters:
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionAttributeResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/user-account-access:
    post:
      tags:
      - "Account-Access"
      - "View-Custom"
      - "Account"
      - "User"
      - "OwnerViewRequired"
      - "DAuth"
      summary: "Create (DAuth) User with Account Access"
      description: "<p>This endpoint is used as part of the DAuth solution to grant\
        \ access to account and transaction data to a smart contract on the blockchain.</p><p>Put\
        \ the smart contract address in username</p><p>For provider use &quot;dauth&quot;</p><p>This\
        \ endpoint will create the (DAuth) User with username and provider if the\
        \ User does not already exist.</p><p>Authentication is Mandatory and the logged\
        \ in user needs to be account holder.</p><p>For information about DAuth see\
        \ below:</p><details>  <summary style=\"display:list-item;cursor:s-resize;\"\
        >DAuth</summary>  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"\
        dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3><p>DAuth\
        \ is an experimental authentication mechanism that aims to pin an ethereum\
        \ or other blockchain Smart Contract to an OBP &quot;User&quot;.</p><p>In\
        \ the future, it might be possible to be more specific and pin specific actors\
        \ (wallets) that are acting within the smart contract, but so far, one smart\
        \ contract acts on behalf of one User.</p><p>Thus, if a smart contract &quot;X&quot;\
        \ calls the OBP API using the DAuth header, OBP will get or create a user\
        \ called X and the call will proceed in the context of that User &quot;X&quot;.</p><p>DAuth\
        \ is invoked by the REST client (caller) including a specific header (see\
        \ step 3 below) in any OBP REST call.</p><p>When OBP receives the DAuth token,\
        \ it creates or gets a User with a username based on the smart_contract_address\
        \ and the provider based on the network_name. The combination of username\
        \ and provider is unique in OBP.</p><p>If you are calling OBP-API via an API3\
        \ Airnode, the Airnode will take care of constructing the required header.</p><p>When\
        \ OBP detects a DAuth header / token it first checks if the Consumer is allowed\
        \ to make such a call. OBP will validate the Consumer ip address and signature\
        \ etc.</p><p>Note: The DAuth flow does <em>not</em> require an explicit POST\
        \ like Direct Login to create the token.</p><p>Permissions may be assigned\
        \ to an OBP User at any time, via the UserAuthContext, Views, Entitlements\
        \ to Roles or Consents.</p><p>Note: <em>DAuth is NOT enabled on this instance!</em></p><p>Note:\
        \ <em>The DAuth client is responsible for creating a token which will be trusted\
        \ by OBP absolutely</em>!</p><p>To use DAuth:</p><h3><a href=\"#1-configure-obp-api-to-accept-dauth\"\
        \ id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept\
        \ DAuth.</a></h3><p>Set up properties in your props file</p><pre><code># --\
        \ DAuth --------------------------------------# Define secret used to validate\
        \ JWT token# jwt.public_key_rsa=path-to-the-pem-file# Enable/Disable DAuth\
        \ communication at all# In case isn't defined default value is false# allow_dauth=false#\
        \ Define comma separated list of allowed IP addresses# dauth.host=127.0.0.1#\
        \ -------------------------------------- DAuth--</code></pre><p>Please keep\
        \ in mind that property jwt.public_key_rsa is used to validate JWT token to\
        \ check it is not changed or corrupted during transport.</p><h3><a href=\"\
        #2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create\
        \ / have access to a JWT</a></h3><p>The following videos are available:<br\
        \ />* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p><p>HEADER:ALGORITHM\
        \ &amp; TOKEN TYPE</p><pre><code>{  &quot;alg&quot;: &quot;RS256&quot;,  &quot;typ&quot;:\
        \ &quot;JWT&quot;}</code></pre><p>PAYLOAD:DATA</p><pre><code>{  &quot;smart_contract_address&quot;:\
        \ &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,  &quot;network_name&quot;:\
        \ &quot;AIRNODE.TESTNET.ETHEREUM&quot;,  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,\
        \  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,\
        \  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,  &quot;request_id&quot;:\
        \ &quot;0Xe876987694328763492876348928736497869273649&quot;}</code></pre><p>VERIFY\
        \ SIGNATURE</p><pre><code>RSASHA256(  base64UrlEncode(header) + &quot;.&quot;\
        \ +  base64UrlEncode(payload),<p>) your-RSA-key-pair</p></code></pre><p>Here\
        \ is an example token:</p><pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</code></pre><h3><a\
        \ href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\"\
        >3) Try a REST call using the header</a></h3><p>Using your favorite http client:</p><p>GET\
        \ <a href=\"https://apisandbox.openbankproject.com/obp/v3.0.0/users/current\">https://apisandbox.openbankproject.com/obp/v3.0.0/users/current</a></p><p>Body</p><p>Leave\
        \ Empty!</p><p>Headers:</p><pre><code>   DAuth: your-jwt-from-step-above</code></pre><p>Here\
        \ is it all together:</p><p>GET <a href=\"https://apisandbox.openbankproject.com/obp/v3.0.0/users/current\"\
        >https://apisandbox.openbankproject.com/obp/v3.0.0/users/current</a> HTTP/1.1<br\
        \ />Host: localhost:8080<br />User-Agent: curl/7.47.0<br />Accept: <em>/</em><br\
        \ />DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p><p>CURL\
        \ example</p><pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k'\
        \ https://apisandbox.openbankproject.com/obp/v3.0.0/users/current</code></pre><p>You\
        \ should receive a response like:</p><pre><code>{    &quot;user_id&quot;:\
        \ &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,    &quot;email&quot;:\
        \ &quot;&quot;,    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\
        \    &quot;provider&quot;: &quot;ETHEREUM&quot;,    &quot;username&quot;:\
        \ &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,    &quot;entitlements&quot;:\
        \ {        &quot;list&quot;: []    }}</code></pre><h3><a href=\"#under-the-hood\"\
        \ id=\"under-the-hood\">Under the hood</a></h3><p>The file, dauth.scala handles\
        \ the DAuth,</p><p>We:</p><pre><code>-&gt; Check if Props allow_dauth is true\
        \  -&gt; Check if DAuth header exists    -&gt; Check if getRemoteIpAddress\
        \ is OK      -&gt; Look for &quot;token&quot;        -&gt; parse the JWT token\
        \ and getOrCreate the user          -&gt; get the data of the user</code></pre><h3><a\
        \ href=\"#more-information\" id=\"more-information\">More information</a></h3><p>Parameter\
        \ names and values are case sensitive.<br />Each parameter MUST NOT appear\
        \ more than once per request.</p></details><p><br></br></p>"
      operationId: "createUserWithAccountAccess"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCreateUserAccountAccessJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/PostCreateUserAccountAccessJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NotSupportedYet"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views:
    get:
      tags:
      - "View-Custom"
      - "Account"
      summary: "Get Views for Account"
      description: "<h1><a href=\"#views\" id=\"views\">Views</a></h1><p>Views in\
        \ Open Bank Project provide a mechanism for fine grained access control and\
        \ delegation to Accounts and Transactions. Account holders use the 'owner'\
        \ view by default. Delegated access is made through other views for example\
        \ 'accountants', 'share-holders' or 'tagging-application'. Views can be created\
        \ via the API and each view has a list of entitlements.</p><p>Views on accounts\
        \ and transactions filter the underlying data to redact certain fields for\
        \ certain users. For instance the balance on an account may be hidden from\
        \ the public. The way to know what is possible on a view is determined in\
        \ the following JSON.</p><p><strong>Data:</strong> When a view moderates a\
        \ set of data, some fields my contain the value <code>null</code> rather than\
        \ the original value. This indicates either that the user is not allowed to\
        \ see the original data or the field is empty.</p><p>There is currently one\
        \ exception to this rule; the 'holder' field in the JSON contains always a\
        \ value which is either an alias or the real name - indicated by the 'is_alias'\
        \ field.</p><p><strong>Action:</strong> When a user performs an action like\
        \ trying to post a comment (with POST API call), if he is not allowed, the\
        \ body response will contain an error message.</p><p><strong>Metadata:</strong><br\
        \ />Transaction metadata (like images, tags, comments, etc.) will appears\
        \ <em>ONLY</em> on the view where they have been created e.g. comments posted\
        \ to the public view only appear on the public view.</p><p>The other account\
        \ metadata fields (like image_URL, more_info, etc.) are unique through all\
        \ the views. Example, if a user edits the 'more_info' field in the 'team'\
        \ view, then the view 'authorities' will show the new value (if it is allowed\
        \ to do it).</p><h1><a href=\"#all\" id=\"all\">All</a></h1><p><em>Optional</em></p><p>Returns\
        \ the list of the views created for account ACCOUNT_ID at BANK_ID.</p><p>Authentication\
        \ is Mandatory and the user needs to have access to the owner view.</p>"
      operationId: "getViewsForBankAccount"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewsJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "View-Custom"
      - "Account"
      summary: "Create Custom View"
      description: "<p>Create a custom view on bank account</p><p>Authentication is\
        \ Mandatory and the user needs to have access to the owner view.<br />The\
        \ 'alias' field in the JSON can take one of three values:</p><ul><li><em>public</em>:\
        \ to use the public alias if there is one specified for the other account.</li><li><em>private</em>:\
        \ to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty\
        \ string)</em>: to use no alias; the view shows the real name of the other\
        \ account.</p></li></ul><p>The 'hide_metadata_if_alias_used' field in the\
        \ JSON can take boolean values. If it is set to <code>true</code> and there\
        \ is an alias on the other account then the other accounts' metadata (like\
        \ more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise\
        \ the metadata will be shown.</p><p>The 'allowed_actions' field is a list\
        \ containing the name of the actions allowed on this view, all the actions\
        \ contained will be set to <code>true</code> on the view creation, the rest\
        \ will be set to <code>false</code>.</p><p>You MUST use a leading _ (underscore)\
        \ in the view name because other view names are reserved for OBP <a href=\"\
        /index#group-View-System\">system views</a>.</p>"
      operationId: "createViewForBankAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateViewJsonV300 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateViewJsonV300"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}:
    put:
      tags:
      - "View-Custom"
      - "Account"
      summary: "Update Custom View"
      description: "<p>Update an existing custom view on a bank account</p><p>Authentication\
        \ is Mandatory and the user needs to have access to the owner view.</p><p>The\
        \ json sent is the same as during view creation (above), with one difference:\
        \ the 'name' field<br />of a view is not editable (it is only set when a view\
        \ is created)</p>"
      operationId: "updateViewForBankAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "UpdateViewJsonV300 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UpdateViewJsonV300"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    delete:
      tags:
      - "View-Custom"
      - "Account"
      summary: "Delete Custom View"
      description: "<p>Deletes the custom view specified by VIEW_ID on the bank account\
        \ specified by ACCOUNT_ID at bank BANK_ID</p><p>Authentication is Mandatory</p>"
      operationId: "deleteViewForBankAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/account_ids/private:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Accounts at Bank (IDs only)"
      description: "<p>Returns only the list of accounts ids at BANK_ID that the user\
        \ has access to.</p><p>Each account must have at least one private View.</p><p>For\
        \ each account the API returns its account ID.</p><p>If you want to see more\
        \ information on the Views, use the Account Detail call.</p><p>optional request\
        \ parameters:</p><ul><li>account_type_filter: one or many accountType value,\
        \ split by comma</li><li>account_type_filter_operation: the filter type of\
        \ account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole\
        \ url example:<br />/banks/BANK_ID/accounts/account_ids/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getPrivateAccountIdsbyBankId"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountsIdsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/private:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Accounts at Bank (Minimal)"
      description: "<p>Returns the minimal list of private accounts at BANK_ID that\
        \ the user has access to.<br />For each account, the API returns the ID, routing\
        \ addresses and the views available to the current user.</p><p>If you want\
        \ to see more information on the Views, use the Account Detail call.</p><p>optional\
        \ request parameters:</p><ul><li>account_type_filter: one or many accountType\
        \ value, split by comma</li><li>account_type_filter_operation: the filter\
        \ type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole\
        \ url example:<br />/banks/BANK_ID/accounts/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "privateAccountsAtOneBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CoreAccountsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/accounts/public:
    get:
      tags:
      - "Account-Public"
      - "Account"
      - "PublicData"
      summary: "Get Public Accounts at Bank"
      description: "<p>Returns a list of the public accounts (Anonymous access) at\
        \ BANK_ID. For each account the API returns the ID and the available views.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "publicAccountsAtOneBank"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BasicAccountsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks/{BANK_ID}/adapter:
    get:
      tags:
      - "API"
      summary: "Get Adapter Info for a bank"
      description: "<p>Get basic information about the Adapter listening on behalf\
        \ of this bank.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>"
      operationId: "getAdapterInfoForBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AdapterInfoJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms:
    get:
      tags:
      - "ATM"
      summary: "Get Bank ATMS"
      description: "<p>Returns information about ATMs for a single bank specified\
        \ by BANK_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License\
        \ the data under this endpoint is released under</li></ul><p>Pagination:</p><p>By\
        \ default, 100 records are returned.</p><p>You can use the url query parameters\
        \ <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is\
        \ Optional</p>"
      operationId: "getAtms"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmsJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    head:
      tags:
      - "ATM"
      summary: "Head Bank ATMS"
      description: "<p>Head Bank ATMS.</p><p>Authentication is Optional</p>"
      operationId: "headAtms"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "ATM"
      summary: "Create ATM"
      description: "<p>Create ATM.</p><p>Authentication is Mandatory</p>"
      operationId: "createAtm"
      parameters:
      - in: "body"
        name: "body"
        description: "PostAtmJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostAtmJsonV510"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}:
    get:
      tags:
      - "ATM"
      summary: "Get Bank ATM"
      description: "<p>Returns information about ATM for a single bank specified by\
        \ BANK_ID and ATM_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License\
        \ the data under this endpoint is released under</li><li>ATM Attributes</li></ul><p>Authentication\
        \ is Optional</p>"
      operationId: "getAtm"
      parameters:
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "ATM"
      summary: "UPDATE ATM"
      description: "<p>Update ATM.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtm"
      parameters:
      - in: "body"
        name: "body"
        description: "AtmJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AtmJsonV510"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "ATM"
      summary: "Delete ATM"
      description: "<p>Delete ATM.</p><p>This will also delete all its attributes.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteAtm"
      parameters:
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/accessibility-features:
    put:
      tags:
      - "ATM"
      summary: "Update ATM Accessibility Features"
      description: "<p>Update ATM Accessibility Features.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "updateAtmAccessibilityFeatures"
      parameters:
      - in: "body"
        name: "body"
        description: "AccessibilityFeaturesJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccessibilityFeaturesJson"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmAccessibilityFeaturesJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes:
    get:
      tags:
      - "ATM"
      summary: "Get ATM Attributes"
      description: "<p>Get ATM Attributes</p><p>Authentication is Mandatory</p>"
      operationId: "getAtmAttributes"
      parameters:
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmAttributesResponseJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "ATM"
      summary: "Create ATM Attribute"
      description: "<p>Create ATM Attribute</p><p>The type field must be one of &quot;STRING&quot;,\
        \ &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createAtmAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "AtmAttributeJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AtmAttributeJsonV510"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmAttributeResponseJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes/{ATM_ATTRIBUTE_ID}:
    get:
      tags:
      - "ATM"
      summary: "Get ATM Attribute By ATM_ATTRIBUTE_ID"
      description: "<p>Get ATM Attribute By ATM_ATTRIBUTE_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAtmAttribute"
      parameters:
      - name: "ATM_ATTRIBUTE_ID"
        in: "path"
        description: "the atm attribute id"
        required: true
        type: "string"
        x-exportParamName: "ATMATTRIBUTEID"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmAttributeResponseJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "ATM"
      summary: "Update ATM Attribute"
      description: "<p>Update ATM Attribute.</p><p>Update an ATM Attribute by its\
        \ id.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtmAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "AtmAttributeJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AtmAttributeJsonV510"
        x-exportParamName: "Body"
      - name: "ATM_ATTRIBUTE_ID"
        in: "path"
        description: "the atm attribute id"
        required: true
        type: "string"
        x-exportParamName: "ATMATTRIBUTEID"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmAttributeResponseJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "ATM"
      summary: "Delete ATM Attribute"
      description: "<p>Delete ATM Attribute</p><p>Delete a Atm Attribute by its id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteAtmAttribute"
      parameters:
      - name: "ATM_ATTRIBUTE_ID"
        in: "path"
        description: "the atm attribute id"
        required: true
        type: "string"
        x-exportParamName: "ATMATTRIBUTEID"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/location-categories:
    put:
      tags:
      - "ATM"
      summary: "Update ATM Location Categories"
      description: "<p>Update ATM Location Categories.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtmLocationCategories"
      parameters:
      - in: "body"
        name: "body"
        description: "AtmLocationCategoriesJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AtmLocationCategoriesJsonV400"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmLocationCategoriesResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/notes:
    put:
      tags:
      - "ATM"
      summary: "Update ATM Notes"
      description: "<p>Update ATM Notes.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtmNotes"
      parameters:
      - in: "body"
        name: "body"
        description: "AtmNotesJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AtmNotesJsonV400"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmNotesResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/services:
    put:
      tags:
      - "ATM"
      summary: "Update ATM Services"
      description: "<p>Update ATM Services.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtmServices"
      parameters:
      - in: "body"
        name: "body"
        description: "AtmServicesJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AtmServicesJsonV400"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmServicesResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/supported-currencies:
    put:
      tags:
      - "ATM"
      summary: "Update ATM Supported Currencies"
      description: "<p>Update ATM Supported Currencies.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtmSupportedCurrencies"
      parameters:
      - in: "body"
        name: "body"
        description: "SupportedCurrenciesJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/SupportedCurrenciesJson"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmSupportedCurrenciesJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/supported-languages:
    put:
      tags:
      - "ATM"
      summary: "Update ATM Supported Languages"
      description: "<p>Update ATM Supported Languages.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAtmSupportedLanguages"
      parameters:
      - in: "body"
        name: "body"
        description: "SupportedLanguagesJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/SupportedLanguagesJson"
        x-exportParamName: "Body"
      - name: "ATM_ID"
        in: "path"
        description: "the atm id"
        required: true
        type: "string"
        x-exportParamName: "ATMID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AtmSupportedLanguagesJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute:
    post:
      tags:
      - "Bank"
      summary: "Create Bank Attribute"
      description: "<p>Create Bank Attribute</p><p>Typical product attributes might\
        \ be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br\
        \ />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used\
        \ for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the\
        \ market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See\
        \ <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type\
        \ field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot;\
        \ or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>"
      operationId: "createBankAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "BankAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/BankAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BankAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/account:
    delete:
      tags:
      - "Account"
      summary: "Delete Account Attribute Definition"
      description: "<p>Delete Account Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteAccountAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/card:
    delete:
      tags:
      - "Card"
      summary: "Delete Card Attribute Definition"
      description: "<p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCardAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/customer:
    delete:
      tags:
      - "Customer"
      summary: "Delete Customer Attribute Definition"
      description: "<p>Delete Customer Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCustomerAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/product:
    delete:
      tags:
      - "Product"
      summary: "Delete Product Attribute Definition"
      description: "<p>Delete Product Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteProductAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction:
    delete:
      tags:
      - "Transaction"
      summary: "Delete Transaction Attribute Definition"
      description: "<p>Delete Transaction Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteTransactionAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction-request:
    delete:
      tags:
      - "Transaction-Request"
      summary: "Delete Transaction Request Attribute Definition"
      description: "<p>Delete Transaction Request Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteTransactionRequestAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/account:
    get:
      tags:
      - "Account"
      summary: "Get Account Attribute Definition"
      description: "<p>Get Account Attribute Definition</p><p>Authentication is Mandatory</p>"
      operationId: "getAccountAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionsResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Account"
      summary: "Create or Update Account Attribute Definition"
      description: "<p>Create or Update Account Attribute Definition</p><p>The category\
        \ field must be Account</p><p>The type field must be one of; DOUBLE, STRING,\
        \ INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateAccountAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/bank:
    put:
      tags:
      - "Bank"
      summary: "Create or Update Bank Attribute Definition"
      description: "<p>Create or Update Bank Attribute Definition</p><p>The category\
        \ field must be Bank</p><p>The type field must be one of; DOUBLE, STRING,\
        \ INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateBankAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/card:
    get:
      tags:
      - "Card"
      summary: "Get Card Attribute Definition"
      description: "<p>Get Card Attribute Definition</p><p>Authentication is Mandatory</p>"
      operationId: "getCardAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionsResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Card"
      summary: "Create or Update Card Attribute Definition"
      description: "<p>Create or Update Card Attribute Definition</p><p>The category\
        \ field must be Card</p><p>The type field must be one of; DOUBLE, STRING,\
        \ INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateCardAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/customer:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Attribute Definition"
      description: "<p>Get Customer Attribute Definition</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomerAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionsResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Customer"
      summary: "Create or Update Customer Attribute Definition"
      description: "<p>Create or Update Customer Attribute Definition</p><p>The category\
        \ field must be one of: Customer</p><p>The type field must be one of; DOUBLE,\
        \ STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateCustomerAttributeAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/product:
    get:
      tags:
      - "Product"
      summary: "Get Product Attribute Definition"
      description: "<p>Get Product Attribute Definition</p><p>Authentication is Mandatory</p>"
      operationId: "getProductAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionsResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Product"
      summary: "Create or Update Product Attribute Definition"
      description: "<p>Create or Update Product Attribute Definition</p><p>The category\
        \ field must be Product</p><p>The type field must be one of; DOUBLE, STRING,\
        \ INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateProductAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/transaction:
    get:
      tags:
      - "Transaction"
      summary: "Get Transaction Attribute Definition"
      description: "<p>Get Transaction Attribute Definition</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getTransactionAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionsResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Transaction"
      summary: "Create or Update Transaction Attribute Definition"
      description: "<p>Create or Update Transaction Attribute Definition</p><p>The\
        \ category field must be Transaction</p><p>The type field must be one of;\
        \ DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateTransactionAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/transaction-request:
    get:
      tags:
      - "Transaction-Request"
      summary: "Get Transaction Request Attribute Definition"
      description: "<p>Get Transaction Request Attribute Definition</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getTransactionRequestAttributeDefinition"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionsResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Transaction-Request"
      summary: "Create or Update Transaction Request Attribute Definition"
      description: "<p>Create or Update Transaction Request Attribute Definition</p><p>The\
        \ category field must be TransactionRequest</p><p>The type field must be one\
        \ of: DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>"
      operationId: "createOrUpdateTransactionRequestAttributeDefinition"
      parameters:
      - in: "body"
        name: "body"
        description: "AttributeDefinitionJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AttributeDefinitionJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attributes:
    get:
      tags:
      - "Bank"
      summary: "Get Bank Attributes"
      description: "<p>Get Bank Attributes</p><p>Authentication is Mandatory</p>"
      operationId: "getBankAttributes"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BankAttributesResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/attributes/BANK_ATTRIBUTE_ID:
    get:
      tags:
      - "Bank"
      summary: "Get Bank Attribute By BANK_ATTRIBUTE_ID"
      description: "<p>Get Bank Attribute By BANK_ATTRIBUTE_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getBankAttribute"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BankAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Bank"
      summary: "Update Bank Attribute"
      description: "<p>Update Bank Attribute.</p><p>Update one Bak Attribute by its\
        \ id.</p><p>Authentication is Mandatory</p>"
      operationId: "updateBankAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "BankAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/BankAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AttributeDefinitionJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
    delete:
      tags:
      - "Bank"
      summary: "Delete Bank Attribute"
      description: "<p>Delete Bank Attribute</p><p>Delete a Bank Attribute by its\
        \ id.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteBankAttribute"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/balances:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Accounts Balances"
      description: "<p>Get the Balances for the Accounts of the current User at one\
        \ bank.</p><p>Authentication is Mandatory</p>"
      operationId: "getBankAccountsBalances"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountsBalancesJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/branches:
    get:
      tags:
      - "Branch"
      - "Bank"
      summary: "Get Branches for a Bank"
      description: "<p>Returns information about branches for a single bank specified\
        \ by BANK_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License\
        \ the data under this endpoint is released under</li><li>Structured opening\
        \ hours</li><li>Accessible flag</li><li>Branch Type</li><li>More Info</li></ul><p>Pagination:</p><p>By\
        \ default, 50 records are returned.</p><p>You can use the url query parameters\
        \ <em>limit</em> and <em>offset</em> for pagination<br />You can also use\
        \ the follow url query parameters:</p><ul><li><p>city - string, find Branches\
        \ those in this city, optional</p></li><li><p>withinMetersOf - number, find\
        \ Branches within given meters distance, optional</p></li><li>nearLatitude\
        \ - number, a position of latitude value, cooperate with withMetersOf do query\
        \ filter, optional</li><li>nearLongitude - number, a position of longitude\
        \ value, cooperate with withMetersOf do query filter, optional</li></ul><p>note:\
        \ withinMetersOf, nearLatitude and nearLongitude either all empty or all have\
        \ value.</p><p>Authentication is Optional</p>"
      operationId: "getBranches"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BranchesJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "Branch"
      summary: "Create Branch"
      description: "<p>Create Branch for the Bank.</p><p>Authentication is Mandatory</p>"
      operationId: "createBranch"
      parameters:
      - in: "body"
        name: "body"
        description: "BranchJsonV300 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/BranchJsonV300"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BranchJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}:
    get:
      tags:
      - "Branch"
      - "Bank"
      summary: "Get Branch"
      description: "<p>Returns information about a single Branch specified by BANK_ID\
        \ and BRANCH_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License\
        \ the data under this endpoint is released under.</li></ul><p>Authentication\
        \ is Optional</p>"
      operationId: "getBranch"
      parameters:
      - name: "BRANCH_ID"
        in: "path"
        description: "The branch id"
        required: true
        type: "string"
        x-exportParamName: "BRANCHID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BranchJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBranchNotFoundByBranchId"
    delete:
      tags:
      - "Branch"
      summary: "Delete Branch"
      description: "<p>Delete Branch from given Bank.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteBranch"
      parameters:
      - name: "BRANCH_ID"
        in: "path"
        description: "The branch id"
        required: true
        type: "string"
        x-exportParamName: "BRANCHID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}:
    put:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      summary: "Update Consent Status"
      description: "<p>This endpoint is used to update the Status of Consent.</p><p>Each\
        \ Consent has one of the following states: INITIATED, ACCEPTED, REJECTED,\
        \ REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED,\
        \ AWAITINGAUTHORISATION.</p><p>Authentication is Mandatory</p>"
      operationId: "updateConsentStatus"
      parameters:
      - in: "body"
        name: "body"
        description: "PutConsentStatusJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutConsentStatusJsonV400"
        x-exportParamName: "Body"
      - name: "CONSENT_ID"
        in: "path"
        description: "the consent id"
        required: true
        type: "string"
        x-exportParamName: "CONSENTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentChallengeJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Revoke Consent at Bank"
      description: "<p>Revoke Consent specified by CONSENT_ID</p><p>There are a few\
        \ reasons you might need to revoke an application’s access to a user’s account:<br\
        \ />- The user explicitly wishes to revoke the application’s access<br />-\
        \ You as the service provider have determined an application is compromised\
        \ or malicious, and want to disable it<br />- etc.</p><p>OBP as a resource\
        \ server stores access tokens in a database, then it is relatively easy to\
        \ revoke some token that belongs to a particular user.<br />The status of\
        \ the token is changed to &quot;REVOKED&quot; so the next time the revoked\
        \ client makes a request, their token will fail to validate.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "revokeConsentAtBank"
      parameters:
      - name: "CONSENT_ID"
        in: "path"
        description: "the consent id"
        required: true
        type: "string"
        x-exportParamName: "CONSENTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/challenge:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Answer Consent Challenge"
      description: "<p>An OBP Consent allows the holder of the Consent to call one\
        \ or more endpoints.</p><p>Consents must be created and authorisied using\
        \ SCA (Strong Customer Authentication).</p><p>That is, Consents can be created\
        \ by an authorised User via the OBP REST API but they must be confirmed via\
        \ an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each\
        \ Consent has one of the following states: INITIATED, ACCEPTED, REJECTED,\
        \ REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED,\
        \ AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you\
        \ need to identify yourself over request header value Consumer-Key.<br />For\
        \ example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br\
        \ />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br\
        \ />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br\
        \ />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br\
        \ />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br\
        \ />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key:\
        \ ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum\
        \ time to live of the token is specified over props value consents.max_time_to_live.\
        \ In case isn't defined default value is 3600 seconds.</p><p>Example of POST\
        \ JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;:\
        \ [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;:\
        \ &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br\
        \ />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;:\
        \ &quot;<a href=\"&#109;a&#105;&#x6c;&#x74;&#x6f;&#x3a;&#101;&#x76;&#x65;l&#105;&#x6e;&#101;@&#101;&#120;&#97;m&#112;l&#x65;&#46;&#x63;&#x6f;&#109;\"\
        >&#101;v&#x65;&#x6c;i&#110;&#x65;&#x40;&#101;&#120;&#97;&#109;&#112;&#x6c;&#x65;&#46;&#99;&#111;&#109;</a>&quot;,<br\
        \ />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;:\
        \ 3600<br />}<br />Please note that only optional fields are: consumer_id,\
        \ valid_from and time_to_live.<br />In case you omit they the default values\
        \ are used:<br />consumer_id = consumer of current user<br />valid_from =\
        \ current time<br />time_to_live = consents.max_time_to_live</p><p>This endpoint\
        \ is used to confirm a Consent previously created.</p><p>The User must supply\
        \ a code that was sent out of band (OOB) for example via an SMS.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "answerConsentChallenge"
      parameters:
      - in: "body"
        name: "body"
        description: "PostConsentChallengeJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostConsentChallengeJsonV310"
        x-exportParamName: "Body"
      - name: "CONSENT_ID"
        in: "path"
        description: "the consent id"
        required: true
        type: "string"
        x-exportParamName: "CONSENTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentChallengeJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/user-update-request:
    put:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      summary: "Add User to a Consent"
      description: "<p>This endpoint is used to add the User of Consent.</p><p>Each\
        \ Consent has one of the following states: INITIATED, ACCEPTED, REJECTED,\
        \ REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED,\
        \ AWAITINGAUTHORISATION.</p><p>Authentication is Mandatory</p>"
      operationId: "addConsentUser"
      parameters:
      - in: "body"
        name: "body"
        description: "PutConsentUserJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutConsentUserJsonV400"
        x-exportParamName: "Body"
      - name: "CONSENT_ID"
        in: "path"
        description: "the consent id"
        required: true
        type: "string"
        x-exportParamName: "CONSENTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentChallengeJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/crm-events:
    get:
      tags:
      - "Customer"
      summary: "Get CRM Events"
      description: "<p>Authentication is Mandatory</p>"
      operationId: "getCrmEvents"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CrmEventsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/currencies:
    get:
      tags:
      - "FX"
      summary: "Get Currencies at a Bank"
      description: "<p>Get Currencies specified by BANK_ID</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getCurrenciesAtBank"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CurrenciesJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customer-account-links:
    post:
      tags:
      - "Customer"
      - "Account"
      summary: "Create Customer Account Link"
      description: "<p>Link a Customer to a Account</p><p>Authentication is Mandatory</p>"
      operationId: "createCustomerAccountLink"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateCustomerAccountLinkJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateCustomerAccountLinkJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAccountLinkJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Account Link by Id"
      description: "<p>Get Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerAccountLinkById"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAccountLinkJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Customer"
      summary: "Update Customer Account Link by Id"
      description: "<p>Update Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerAccountLinkById"
      parameters:
      - in: "body"
        name: "body"
        description: "UpdateCustomerAccountLinkJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UpdateCustomerAccountLinkJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAccountLinkJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Customer"
      summary: "Delete Customer Account Link"
      description: "<p>Delete Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCustomerAccountLinkById"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customer/{CUSTOMER_ID}/messages:
    post:
      tags:
      - "Customer-Message"
      - "Customer"
      - "Person"
      summary: "Create Customer Message"
      description: "<p>Create a message for the customer specified by CUSTOMER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCustomerMessage"
      parameters:
      - in: "body"
        name: "body"
        description: "AddCustomerMessageJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AddCustomerMessageJson"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customer/messages:
    get:
      tags:
      - "Customer-Message"
      - "Customer"
      summary: "Get Customer Messages for all Customers"
      description: "<p>Get messages for the logged in customer<br />Messages sent\
        \ to the currently authenticated user.</p><p>Authentication via OAuth is required.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomersMessages"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerMessagesJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get Customers at Bank"
      description: "<p>Get Customers at Bank.</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomersAtOneBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJSONsV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Customer"
      - "Person"
      summary: "Create Customer"
      description: "<p>The Customer resource stores the customer number (which is\
        \ set by the backend), legal name, email, phone number, their date of birth,\
        \ relationship status, education attained, a url for a profile image, KYC\
        \ status etc.<br />Dates need to be in the format 2013-01-21T23:08:00Z</p><p>Note:\
        \ If you need to set a specific customer number, use the Update Customer Number\
        \ endpoint after this call.</p><p>Authentication is Mandatory</p>"
      operationId: "createCustomer"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerJsonV500"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers-minimal:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get Customers Minimal at Bank"
      description: "<p>Get Customers Minimal at Bank.</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomersMinimalAtOneBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomersMinimalJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserCustomerLinksNotFoundForUser"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}:
    get:
      tags:
      - "Customer"
      summary: "Get Customer by CUSTOMER_ID"
      description: "<p>Gets the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerByCustomerId"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerWithAttributesJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address:
    post:
      tags:
      - "Customer"
      summary: "Create Address"
      description: "<p>Create an Address for a Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createCustomerAddress"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerAddressJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerAddressJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAddressJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses:
    get:
      tags:
      - "Customer"
      - "KYC"
      summary: "Get Customer Addresses"
      description: "<p>Get the Addresses of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerAddresses"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAddressesJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses/{CUSTOMER_ADDRESS_ID}:
    put:
      tags:
      - "Customer"
      summary: "Update the Address of a Customer"
      description: "<p>Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerAddress"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerAddressJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerAddressJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ADDRESS_ID"
        in: "path"
        description: "the customer address id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERADDRESSID"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAddressJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Customer"
      - "KYC"
      summary: "Delete Customer Address"
      description: "<p>Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCustomerAddress"
      parameters:
      - name: "CUSTOMER_ADDRESS_ID"
        in: "path"
        description: "the customer address id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERADDRESSID"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attribute:
    post:
      tags:
      - "Customer"
      summary: "Create Customer Attribute"
      description: "<p>Create Customer Attribute</p><p>The type field must be one\
        \ of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createCustomerAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "CustomerAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CustomerAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAttributeResponseJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attributes:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Attributes"
      description: "<p>Get Customer Attributes</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomerAttributes"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAttributesResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attributes/ATTRIBUTE_ID:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Attribute By Id"
      description: "<p>Get Customer Attribute By Id</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomerAttributeById"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAttributeResponseJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attributes/CUSTOMER_ATTRIBUTE_ID:
    put:
      tags:
      - "Customer"
      summary: "Update Customer Attribute"
      description: "<p>Update Customer Attribute</p><p>Authentication is Mandatory</p>"
      operationId: "updateCustomerAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "CustomerAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CustomerAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAttributeResponseJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/branch:
    put:
      tags:
      - "Customer"
      summary: "Update the Branch of a Customer"
      description: "<p>Update the Branch of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerBranch"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerBranchJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerBranchJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/correlated-users:
    get:
      tags:
      - "Customer"
      summary: "Get Correlated User Info by Customer"
      description: "<p>Get Correlated User Info by CUSTOMER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCorrelatedUsersInfoByCustomerId"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAndUsersWithAttributesResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-limit:
    put:
      tags:
      - "Customer"
      summary: "Update the credit limit of a Customer"
      description: "<p>Update the credit limit of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerCreditLimit"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerCreditLimitJsonV310 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerCreditLimitJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-rating-and-source:
    put:
      tags:
      - "Customer"
      summary: "Update the credit rating and source of a Customer"
      description: "<p>Update the credit rating and source of the Customer specified\
        \ by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>"
      operationId: "updateCustomerCreditRatingAndSource"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerCreditRatingAndSourceJsonV310 object that needs\
          \ to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerCreditRatingAndSourceJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/customer-account-links:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Account Links by CUSTOMER_ID"
      description: "<p>Get Customer Account Links by CUSTOMER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerAccountLinksByCustomerId"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerAccountLinksJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/data:
    put:
      tags:
      - "Customer"
      summary: "Update the other data of a Customer"
      description: "<p>Update the other data of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerData"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerDataJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerDataJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/email:
    put:
      tags:
      - "Customer"
      summary: "Update the email of a Customer"
      description: "<p>Update an email of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerEmail"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerEmailJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerEmailJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/identity:
    put:
      tags:
      - "Customer"
      summary: "Update the identity data of a Customer"
      description: "<p>Update the identity data of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerIdentity"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerIdentityJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerIdentityJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}:
    put:
      tags:
      - "KYC"
      - "Customer"
      summary: "Add KYC Check"
      description: "<p>Add a KYC check for the customer specified by CUSTOMER_ID.\
        \ KYC Checks store details of checks on a customer made by the KYC team, their\
        \ comments and a satisfied status</p><p>Authentication is Mandatory</p>"
      operationId: "addKycCheck"
      parameters:
      - in: "body"
        name: "body"
        description: "PostKycCheckJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostKycCheckJSON"
        x-exportParamName: "Body"
      - name: "KYC_CHECK_ID"
        in: "path"
        description: "The kyc check id"
        required: true
        type: "string"
        x-exportParamName: "KYCCHECKID"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycCheckJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}:
    put:
      tags:
      - "KYC"
      - "Customer"
      summary: "Add KYC Document"
      description: "<p>Add a KYC document for the customer specified by CUSTOMER_ID.\
        \ KYC Documents contain the document type (e.g. passport), place of issue,\
        \ expiry etc.</p><p>Authentication is Mandatory</p>"
      operationId: "addKycDocument"
      parameters:
      - in: "body"
        name: "body"
        description: "PostKycDocumentJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostKycDocumentJSON"
        x-exportParamName: "Body"
      - name: "KYC_DOCUMENT_ID"
        in: "path"
        description: "The kyc document id"
        required: true
        type: "string"
        x-exportParamName: "KYCDOCUMENTID"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycDocumentJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}:
    put:
      tags:
      - "KYC"
      - "Customer"
      summary: "Add KYC Media"
      description: "<p>Add some KYC media for the customer specified by CUSTOMER_ID.\
        \ KYC Media resources relate to KYC Documents and KYC Checks and contain media\
        \ urls for scans of passports, utility bills etc</p><p>Authentication is Mandatory</p>"
      operationId: "addKycMedia"
      parameters:
      - in: "body"
        name: "body"
        description: "PostKycMediaJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostKycMediaJSON"
        x-exportParamName: "Body"
      - name: "KYC_MEDIA_ID"
        in: "path"
        description: "The kyc media id"
        required: true
        type: "string"
        x-exportParamName: "KYCMEDIAID"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycMediaJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses:
    put:
      tags:
      - "KYC"
      - "Customer"
      summary: "Add KYC Status"
      description: "<p>Add a kyc_status for the customer specified by CUSTOMER_ID.\
        \ KYC Status is a timeline of the KYC status of the customer</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addKycStatus"
      parameters:
      - in: "body"
        name: "body"
        description: "PostKycStatusJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostKycStatusJSON"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycStatusJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/messages:
    get:
      tags:
      - "Customer-Message"
      - "Customer"
      summary: "Get Customer Messages for a Customer"
      description: "<p>Get messages for the customer specified by CUSTOMER_ID<br />Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerMessages"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerMessagesJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Customer-Message"
      - "Customer"
      - "Person"
      summary: "Create Customer Message"
      description: "<p>Create a message for the customer specified by CUSTOMER_ID<br\
        \ />Authentication is Mandatory</p>"
      operationId: "createCustomerMessage"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateMessageJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateMessageJsonV400"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/mobile-number:
    put:
      tags:
      - "Customer"
      summary: "Update the mobile number of a Customer"
      description: "<p>Update the mobile number of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerMobileNumber"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerMobilePhoneNumberJsonV310 object that needs\
          \ to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerMobilePhoneNumberJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/number:
    put:
      tags:
      - "Customer"
      summary: "Update the number of a Customer"
      description: "<p>Update the number of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateCustomerNumber"
      parameters:
      - in: "body"
        name: "body"
        description: "PutUpdateCustomerNumberJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutUpdateCustomerNumberJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles:
    get:
      tags:
      - "Customer"
      summary: "Get Customer Social Media Handles"
      description: "<p>Get social media handles for a customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getSocialMediaHandles"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SocialMediasJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Customer"
      summary: "Create Customer Social Media Handle"
      description: "<p>Create a customer social media handle for the customer specified\
        \ by CUSTOMER_ID</p><p>Authentication is Mandatory</p>"
      operationId: "addSocialMediaHandle"
      parameters:
      - in: "body"
        name: "body"
        description: "SocialMediaJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/SocialMediaJSON"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence:
    post:
      tags:
      - "Customer"
      - "KYC"
      summary: "Create Tax Residence"
      description: "<p>Create a Tax Residence for a Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createTaxResidence"
      parameters:
      - in: "body"
        name: "body"
        description: "PostTaxResidenceJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostTaxResidenceJsonV310"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TaxResidenceV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residences:
    get:
      tags:
      - "Customer"
      - "KYC"
      summary: "Get Tax Residences of Customer"
      description: "<p>Get the Tax Residences of the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getTaxResidence"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TaxResidenceJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax_residencies/{TAX_RESIDENCE_ID}:
    delete:
      tags:
      - "Customer"
      - "KYC"
      summary: "Delete Tax Residence"
      description: "<p>Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteTaxResidence"
      parameters:
      - name: "TAX_RESIDENCE_ID"
        in: "path"
        description: "the tax residence id"
        required: true
        type: "string"
        x-exportParamName: "TAXRESIDENCEID"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/customer-number:
    post:
      tags:
      - "Customer"
      - "KYC"
      summary: "Get Customer by CUSTOMER_NUMBER"
      description: "<p>Gets the Customer specified by CUSTOMER_NUMBER.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomerByCustomerNumber"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerNumberJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerNumberJsonV310"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerWithAttributesJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/customer-number-query/overview:
    post:
      tags:
      - "Customer"
      - "KYC"
      summary: "Get Customer Overview"
      description: "<p>Gets the Customer Overview specified by customer_number and\
        \ bank_code.</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomerOverview"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerOverviewJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerOverviewJsonV500"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerOverviewJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/customers/customer-number-query/overview-flat:
    post:
      tags:
      - "Customer"
      - "KYC"
      summary: "Get Customer Overview Flat"
      description: "<p>Gets the Customer Overview Flat specified by customer_number\
        \ and bank_code.</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomerOverviewFlat"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerOverviewJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerOverviewJsonV500"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerOverviewFlatJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/entitlements:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlements for One Bank"
      description: "<p>Authentication is Mandatory</p>"
      operationId: "getEntitlementsForBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/firehose/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/transactions:
    get:
      tags:
      - "Transaction"
      - "Account-Firehose"
      - "Transaction-Firehose"
      - "FirehoseData"
      summary: "Get Firehose Transactions for Account"
      description: "<p>Get Transactions for an Account that has a firehose View.</p><p>Allows\
        \ bulk access to an account's transactions.<br />User must have the CanUseFirehoseAtAnyBank\
        \ Role</p><p>To find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.</p><p>For\
        \ VIEW_ID try 'owner'</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER\
        \ ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE\
        \ =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is\
        \ one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example\
        \ value: 2024-02-05T14:15:55.255Z. NOTE! The default value is now (2024-02-05T14:15:55.255Z).</li></ul><p>Date\
        \ format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z)\
        \ ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getFirehoseTransactionsForBankAccount"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}:
    get:
      tags:
      - "Account"
      - "Account-Firehose"
      - "FirehoseData"
      summary: "Get Firehose Accounts at Bank"
      description: "<p>Get Accounts which have a firehose view assigned to them.</p><p>This\
        \ endpoint allows bulk access to accounts.</p><p>Requires the CanUseFirehoseAtAnyBank\
        \ Role</p><p>To be shown on the list, each Account must have a firehose View\
        \ linked to it.</p><p>A firehose view has is_firehose = true</p><p>For VIEW_ID\
        \ try 'owner'</p><p>optional request parameters for filter with attributes<br\
        \ />URL params example:<br />/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8</p><p>to\
        \ invalid Browser cache, add timestamp query parameter as follow, the parameter\
        \ name must be <code>_timestamp_</code><br />URL params example:<br /><code>/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8&amp;_timestamp_=1596762180358</code></p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getFirehoseAccountsAtOneBank"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ModeratedFirehoseAccountsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/firehose/customers:
    get:
      tags:
      - "Customer"
      - "FirehoseData"
      summary: "Get Firehose Customers"
      description: "<p>Get Customers that has a firehose View.</p><p>Allows bulk access\
        \ to customers.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>Possible\
        \ custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default\
        \ value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE\
        \ =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is\
        \ one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example\
        \ value: 2024-02-05T14:15:55.283Z. NOTE! The default value is now (2024-02-05T14:15:55.283Z).</li></ul><p>Date\
        \ format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z)\
        \ ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getFirehoseCustomers"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJSONs"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/fx:
    put:
      tags:
      - "FX"
      summary: "Create Fx"
      description: "<p>Create or Update Fx for the Bank.</p><p>Example:</p><p>“from_currency_code”\
        :“EUR”,<br />“to_currency_code”:“USD”,<br />“conversion_value”: 1.136305,<br\
        \ />“inverse_conversion_value”: 1 / 1.136305 = 0.8800454103431737,</p><p>Thus\
        \ 1 Euro = 1.136305 US Dollar<br />and<br />1 US Dollar = 0.8800 Euro</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createFx"
      parameters:
      - in: "body"
        name: "body"
        description: "FXRateJsonV220 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/FXRateJsonV220"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FXRateJsonV220"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/fx/{FROM_CURRENCY_CODE}/{TO_CURRENCY_CODE}:
    get:
      tags:
      - "FX"
      summary: "Get Current FxRate"
      description: "<p>Get the latest FX rate specified by BANK_ID, FROM_CURRENCY_CODE\
        \ and TO_CURRENCY_CODE</p><p>OBP may try different sources of FX rate information\
        \ depending on the Connector in operation.</p><p>For example we want to convert\
        \ EUR =&gt; USD:</p><p>OBP will:<br />1st try - Connector (database, core\
        \ banking system or external FX service)<br />2nd try part 1 - fallbackexchangerates/eur.json<br\
        \ />2nd try part 2 - fallbackexchangerates/usd.json (the inverse rate is used)<br\
        \ />3rd try - Hardcoded map of FX rates.</p><p><img src=\"https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png\"\
        \ alt=\"FX Flow\" /></p><p>Authentication is Mandatory</p>"
      operationId: "getCurrentFxRate"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "TO_CURRENCY_CODE"
        in: "path"
        description: "The to currency code"
        required: true
        type: "string"
        x-exportParamName: "TOCURRENCYCODE"
      - name: "FROM_CURRENCY_CODE"
        in: "path"
        description: "The from currency code"
        required: true
        type: "string"
        x-exportParamName: "FROMCURRENCYCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FXRateJsonV220"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidISOCurrencyCode"
  /obp/v5.1.0/banks/{BANK_ID}/management/historical/transactions:
    post:
      tags:
      - "Transaction-Request"
      summary: "Create Historical Transactions "
      description: "<p>Create historical transactions at one Bank</p><p>Use this endpoint\
        \ to create transactions between any two accounts at the same bank.<br />From\
        \ account and to account must be at the same bank.<br />Example:<br />{<br\
        \ />&quot;from_account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />&quot;to_account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;:\
        \ &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br\
        \ />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;:\
        \ &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br\
        \ />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>This call is\
        \ experimental.</p><p>Authentication is Mandatory</p>"
      operationId: "createHistoricalTransactionAtBank"
      parameters:
      - in: "body"
        name: "body"
        description: "PostHistoricalTransactionAtBankJson object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/PostHistoricalTransactionAtBankJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/PostHistoricalTransactionResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/meetings:
    get:
      tags:
      - "Customer-Meeting"
      - "Customer"
      - "Experimental"
      summary: "Get Meetings"
      description: "<p>Meetings contain meta data about, and are used to facilitate,\
        \ video conferences / chats etc.</p><p>The actual conference/chats are handled\
        \ by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong>\
        \ and will require further authorisation in the future.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMeetings"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MeetingsJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Customer-Meeting"
      - "Customer"
      - "Experimental"
      summary: "Create Meeting (video conference/call)"
      description: "<p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The\
        \ Meetings resource contains meta data about video/other conference sessions</p><p>provider_id\
        \ determines the provider of the meeting / video chat service. MUST be url\
        \ friendly (no spaces).</p><p>purpose_id explains the purpose of the chat.\
        \ onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login\
        \ is required.</p><p>This call is <strong>experimental</strong>. Currently\
        \ staff_user_id is not set. Further calls will be needed to correctly set\
        \ this.</p><p>Authentication is Mandatory</p>"
      operationId: "createMeeting"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateMeetingJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateMeetingJsonV310"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/MeetingJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/meetings/{MEETING_ID}:
    get:
      tags:
      - "Customer-Meeting"
      - "Customer"
      - "Experimental"
      summary: "Get Meeting"
      description: "<p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings\
        \ contain meta data about, and are used to facilitate, video conferences /\
        \ chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login\
        \ is required.</p><p>This call is <strong>experimental</strong> and will require\
        \ further authorisation in the future.</p><p>Authentication is Mandatory</p>"
      operationId: "getMeeting"
      parameters:
      - name: "MEETING_ID"
        in: "path"
        description: "the meeting id"
        required: true
        type: "string"
        x-exportParamName: "MEETINGID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MeetingJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/consent-infos:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Consents Info"
      description: "<p>This endpoint gets the Consents that the current User created.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConsentInfos"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentInfosJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/consents:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Consents"
      description: "<p>This endpoint gets the Consents that the current User created.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConsents"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/consents/{CONSENT_ID}/revoke:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Revoke Consent"
      description: "<p>Revoke Consent for current user specified by CONSENT_ID</p><p>There\
        \ are a few reasons you might need to revoke an application’s access to a\
        \ user’s account:<br />- The user explicitly wishes to revoke the application’\
        s access<br />- You as the service provider have determined an application\
        \ is compromised or malicious, and want to disable it<br />- etc.</p><p>Please\
        \ note that this endpoint only supports the case:: &quot;The user explicitly\
        \ wishes to revoke the application’s access&quot;</p><p>OBP as a resource\
        \ server stores access tokens in a database, then it is relatively easy to\
        \ revoke some token that belongs to a particular user.<br />The status of\
        \ the token is changed to &quot;REVOKED&quot; so the next time the revoked\
        \ client makes a request, their token will fail to validate.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "revokeConsent"
      parameters:
      - name: "CONSENT_ID"
        in: "path"
        description: "the consent id"
        required: true
        type: "string"
        x-exportParamName: "CONSENTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/consents/EMAIL:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent (EMAIL)"
      description: "<p>This endpoint starts the process of creating a Consent.</p><p>The\
        \ Consent is created in an INITIATED state.</p><p>A One Time Password (OTP)\
        \ (AKA security challenge) is sent Out of Band (OOB) to the User via the transport\
        \ defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot;,&quot;EMAIL&quot;\
        \ or &quot;IMPLICIT&quot;. &quot;EMAIL&quot; is used for testing purposes.\
        \ OBP mapped mode &quot;IMPLICIT&quot; is &quot;EMAIL&quot;.<br />Other mode,\
        \ bank can decide it in the connector method 'getConsentImplicitSCA'.</p><p>When\
        \ the Consent is created, OBP (or a backend system) stores the challenge so\
        \ it can be checked later against the value supplied by the User with the\
        \ Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder\
        \ of the Consent to call one or more endpoints.</p><p>Consents must be created\
        \ and authorisied using SCA (Strong Customer Authentication).</p><p>That is,\
        \ Consents can be created by an authorised User via the OBP REST API but they\
        \ must be confirmed via an out of band (OOB) mechanism such as a code sent\
        \ to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED,\
        \ ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP,\
        \ AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer\
        \ i.e. you need to identify yourself over request header value Consumer-Key.<br\
        \ />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br\
        \ />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br\
        \ />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br\
        \ />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br\
        \ />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br\
        \ />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key:\
        \ ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum\
        \ time to live of the token is specified over props value consents.max_time_to_live.\
        \ In case isn't defined default value is 3600 seconds.</p><p>Example of POST\
        \ JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;:\
        \ [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;:\
        \ &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br\
        \ />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;:\
        \ &quot;<a href=\"&#x6d;&#97;&#105;&#108;&#x74;&#111;&#58;&#x65;&#118;&#x65;&#x6c;&#x69;&#x6e;&#101;&#x40;&#101;&#120;a&#109;&#x70;&#x6c;e&#x2e;&#99;&#111;&#109;\"\
        >&#x65;&#118;e&#x6c;&#105;&#110;&#x65;&#64;&#x65;&#120;&#97;&#109;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#x6d;</a>&quot;,<br\
        \ />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;:\
        \ 3600<br />}<br />Please note that only optional fields are: consumer_id,\
        \ valid_from and time_to_live.<br />In case you omit they the default values\
        \ are used:<br />consumer_id = consumer of current user<br />valid_from =\
        \ current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication\
        \ is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br\
        \ />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;phone_number&quot;:\
        \ &quot;+49 170 1234567&quot;<br />}</p><p>Please note that consumer_id is\
        \ optional field<br />Example 2:<br />{<br />&quot;everything&quot;: true,<br\
        \ />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;phone_number&quot;:\
        \ &quot;+49 170 1234567&quot;<br />}</p><p>Please note if everything=false\
        \ you need to explicitly specify views and entitlements<br />Example 3:<br\
        \ />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br\
        \ />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;:\
        \ &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br\
        \ />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;phone_number&quot;:\
        \ &quot;+49 170 1234567&quot;<br />}</p>"
      operationId: "createConsentEmail"
      parameters:
      - in: "body"
        name: "body"
        description: "PostConsentEmailJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostConsentEmailJsonV310"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/consents/IMPLICIT:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent (IMPLICIT)"
      description: "<p>This endpoint starts the process of creating a Consent.</p><p>The\
        \ Consent is created in an INITIATED state.</p><p>A One Time Password (OTP)\
        \ (AKA security challenge) is sent Out of Band (OOB) to the User via the transport\
        \ defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot;,&quot;EMAIL&quot;\
        \ or &quot;IMPLICIT&quot;. &quot;EMAIL&quot; is used for testing purposes.\
        \ OBP mapped mode &quot;IMPLICIT&quot; is &quot;EMAIL&quot;.<br />Other mode,\
        \ bank can decide it in the connector method 'getConsentImplicitSCA'.</p><p>When\
        \ the Consent is created, OBP (or a backend system) stores the challenge so\
        \ it can be checked later against the value supplied by the User with the\
        \ Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder\
        \ of the Consent to call one or more endpoints.</p><p>Consents must be created\
        \ and authorisied using SCA (Strong Customer Authentication).</p><p>That is,\
        \ Consents can be created by an authorised User via the OBP REST API but they\
        \ must be confirmed via an out of band (OOB) mechanism such as a code sent\
        \ to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED,\
        \ ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP,\
        \ AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer\
        \ i.e. you need to identify yourself over request header value Consumer-Key.<br\
        \ />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br\
        \ />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br\
        \ />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br\
        \ />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br\
        \ />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br\
        \ />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key:\
        \ ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum\
        \ time to live of the token is specified over props value consents.max_time_to_live.\
        \ In case isn't defined default value is 3600 seconds.</p><p>Example of POST\
        \ JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;:\
        \ [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;:\
        \ &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br\
        \ />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;:\
        \ &quot;<a href=\"&#x6d;&#97;&#105;l&#x74;o&#58;&#101;v&#x65;&#x6c;&#x69;&#110;&#101;@&#101;&#120;&#x61;m&#112;&#108;&#101;&#x2e;&#99;o&#109;\"\
        >eve&#108;&#x69;&#x6e;&#x65;@&#x65;xa&#109;&#112;&#108;&#101;.&#99;&#111;&#109;</a>&quot;,<br\
        \ />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;:\
        \ 3600<br />}<br />Please note that only optional fields are: consumer_id,\
        \ valid_from and time_to_live.<br />In case you omit they the default values\
        \ are used:<br />consumer_id = consumer of current user<br />valid_from =\
        \ current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication\
        \ is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br\
        \ />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />}</p><p>Please note\
        \ that consumer_id is optional field<br />Example 2:<br />{<br />&quot;everything&quot;:\
        \ true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br\
        \ />}</p><p>Please note if everything=false you need to explicitly specify\
        \ views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;:\
        \ false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br\
        \ />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br\
        \ />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;:\
        \ [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />}</p>"
      operationId: "createConsentImplicit"
      parameters:
      - in: "body"
        name: "body"
        description: "PostConsentImplicitJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostConsentImplicitJsonV310"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/consents/SMS:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent (SMS)"
      description: "<p>This endpoint starts the process of creating a Consent.</p><p>The\
        \ Consent is created in an INITIATED state.</p><p>A One Time Password (OTP)\
        \ (AKA security challenge) is sent Out of Band (OOB) to the User via the transport\
        \ defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot;,&quot;EMAIL&quot;\
        \ or &quot;IMPLICIT&quot;. &quot;EMAIL&quot; is used for testing purposes.\
        \ OBP mapped mode &quot;IMPLICIT&quot; is &quot;EMAIL&quot;.<br />Other mode,\
        \ bank can decide it in the connector method 'getConsentImplicitSCA'.</p><p>When\
        \ the Consent is created, OBP (or a backend system) stores the challenge so\
        \ it can be checked later against the value supplied by the User with the\
        \ Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder\
        \ of the Consent to call one or more endpoints.</p><p>Consents must be created\
        \ and authorisied using SCA (Strong Customer Authentication).</p><p>That is,\
        \ Consents can be created by an authorised User via the OBP REST API but they\
        \ must be confirmed via an out of band (OOB) mechanism such as a code sent\
        \ to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED,\
        \ ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP,\
        \ AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer\
        \ i.e. you need to identify yourself over request header value Consumer-Key.<br\
        \ />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br\
        \ />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br\
        \ />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br\
        \ />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br\
        \ />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br\
        \ />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key:\
        \ ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum\
        \ time to live of the token is specified over props value consents.max_time_to_live.\
        \ In case isn't defined default value is 3600 seconds.</p><p>Example of POST\
        \ JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;:\
        \ [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;:\
        \ &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br\
        \ />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;:\
        \ &quot;<a href=\"&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;:&#x65;&#118;e&#x6c;&#x69;n&#101;&#64;&#101;x&#97;&#x6d;p&#x6c;&#x65;.co&#x6d;\"\
        >&#x65;&#118;e&#108;&#x69;&#110;&#101;&#x40;e&#120;&#97;&#x6d;&#x70;l&#101;&#x2e;&#99;&#x6f;m</a>&quot;,<br\
        \ />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;:\
        \ 3600<br />}<br />Please note that only optional fields are: consumer_id,\
        \ valid_from and time_to_live.<br />In case you omit they the default values\
        \ are used:<br />consumer_id = consumer of current user<br />valid_from =\
        \ current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication\
        \ is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br\
        \ />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;:\
        \ &quot;<a href=\"&#109;ai&#108;&#x74;&#x6f;:&#x65;&#x76;&#101;&#x6c;i&#110;e&#x40;&#101;xa&#109;p&#x6c;&#101;.&#x63;&#111;&#x6d;\"\
        >&#101;veli&#x6e;&#101;&#64;e&#120;a&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;</a>&quot;<br\
        \ />}</p><p>Please note that consumer_id is optional field<br />Example 2:<br\
        \ />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;:\
        \ [],<br />&quot;email&quot;: &quot;<a href=\"&#109;&#97;&#105;&#108;&#x74;&#111;&#58;&#x65;v&#x65;&#108;i&#x6e;&#x65;&#64;&#x65;&#x78;&#97;&#109;&#x70;l&#101;&#46;&#x63;&#x6f;&#x6d;\"\
        >&#x65;&#118;&#x65;&#108;i&#x6e;&#x65;&#x40;&#101;xa&#x6d;p&#108;&#101;.c&#111;&#x6d;</a>&quot;<br\
        \ />}</p><p>Please note if everything=false you need to explicitly specify\
        \ views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;:\
        \ false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br\
        \ />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br\
        \ />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;:\
        \ [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;:\
        \ &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;:\
        \ &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;:\
        \ &quot;<a href=\"&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#x65;&#x76;&#x65;l&#105;&#x6e;&#x65;&#64;&#101;&#x78;&#97;mp&#108;&#x65;.&#99;&#x6f;&#109;\"\
        >&#x65;&#x76;&#x65;&#108;i&#110;&#x65;&#x40;&#101;&#x78;am&#112;l&#x65;&#46;&#x63;&#x6f;&#x6d;</a>&quot;<br\
        \ />}</p>"
      operationId: "createConsentSms"
      parameters:
      - in: "body"
        name: "body"
        description: "PostConsentPhoneJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostConsentPhoneJsonV310"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/my/customers:
    get:
      tags:
      - "Customer"
      summary: "Get My Customers at Bank"
      description: "<p>Returns a list of Customers at the Bank that are linked to\
        \ the currently authenticated User.</p><p>Authentication is Mandatory</p>"
      operationId: "getMyCustomersAtBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJSONs"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}:
    get:
      tags:
      - "Product-Collection"
      - "Product"
      summary: "Get Product Collection"
      description: "<p>Returns information about the financial Product Collection\
        \ specified by BANK_ID and COLLECTION_CODE:</p><p>Authentication is Mandatory</p>"
      operationId: "getProductCollection"
      parameters:
      - name: "COLLECTION_CODE"
        in: "path"
        description: "the collection code"
        required: true
        type: "string"
        x-exportParamName: "COLLECTIONCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductCollectionJsonTreeV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Product-Collection"
      - "Product"
      summary: "Create Product Collection"
      description: "<p>Create or Update a Product Collection at the Bank.</p><p>Use\
        \ Product Collections to create Product &quot;Baskets&quot;, &quot;Portfolios&quot;,\
        \ &quot;Indices&quot;, &quot;Collections&quot;, &quot;Underlyings-lists&quot;,\
        \ &quot;Buckets&quot; etc. etc.</p><p>There is a many to many relationship\
        \ between Products and Product Collections:</p><ul><li><p>A Product can exist\
        \ in many Collections</p></li><li><p>A Collection can contain many Products.</p></li></ul><p>A\
        \ collection has collection code, one parent Product and one or more child\
        \ Products.</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You\
        \ can define a hierarchy of products - so that a child Product inherits attributes\
        \ of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You\
        \ can define a collection (also known as baskets or buckets) of products using\
        \ Product Collections.</p></li></ul><p>Authentication is Mandatory</p>"
      operationId: "createProductCollection"
      parameters:
      - in: "body"
        name: "body"
        description: "PutProductCollectionsV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutProductCollectionsV310"
        x-exportParamName: "Body"
      - name: "COLLECTION_CODE"
        in: "path"
        description: "the collection code"
        required: true
        type: "string"
        x-exportParamName: "COLLECTIONCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductCollectionsJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}:
    get:
      tags:
      - "Product"
      summary: "Get Product Tree"
      description: "<p>Returns information about a particular financial product specified\
        \ by BANK_ID and PRODUCT_CODE<br />and it's parent product(s) recursively\
        \ as specified by parent_product_code.</p><p>Each product includes the following\
        \ information.</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super\
        \ Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License:\
        \ The licence under which this product data is released. Licence can be an\
        \ Open Data licence such as Open Data Commons Public Domain Dedication and\
        \ License (PDDL) or Copyright etc.</li></ul><p>Authentication is Optional</p>"
      operationId: "getProductTree"
      parameters:
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductTreeJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorProductNotFoundByProductCode"
  /obp/v5.1.0/banks/{BANK_ID}/products:
    get:
      tags:
      - "Product"
      summary: "Get Products"
      description: "<p>Returns information about the financial products offered by\
        \ a bank specified by BANK_ID including:</p><ul><li>Name</li><li>Code</li><li>Parent\
        \ Product Code</li><li>More info URL</li><li>Terms And Conditions URL</li><li>Description</li><li>Terms\
        \ and Conditions</li><li>License the data under this endpoint is released\
        \ under</li></ul><p>Can filter with attributes name and values.<br />URL params\
        \ example: /banks/some-bank-id/products?manager=John&amp;count=8</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getProducts"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}:
    get:
      tags:
      - "Product"
      summary: "Get Bank Product"
      description: "<p>Returns information about a financial Product offered by the\
        \ bank specified by BANK_ID and PRODUCT_CODE including:</p><ul><li>Name</li><li>Code</li><li>Parent\
        \ Product Code</li><li>More info URL</li><li>Description</li><li>Terms and\
        \ Conditions</li><li>Description</li><li>Meta</li><li>Attributes</li><li>Fees</li></ul><p>Authentication\
        \ is Optional</p>"
      operationId: "getProduct"
      parameters:
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "Product"
      summary: "Create Product"
      description: "<p>Create or Update Product for the Bank.</p><p>Typical Super\
        \ Family values / Asset classes are:</p><p>Debt<br />Equity<br />FX<br />Commodity<br\
        \ />Derivative</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You\
        \ can define a hierarchy of products - so that a child Product inherits attributes\
        \ of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You\
        \ can define a collection (also known as baskets or buckets) of products using\
        \ Product Collections.</p></li></ul><p>Authentication is Mandatory</p>"
      operationId: "createProduct"
      parameters:
      - in: "body"
        name: "body"
        description: "PutProductJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutProductJsonV500"
        x-exportParamName: "Body"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attribute:
    post:
      tags:
      - "Product"
      summary: "Create Product Attribute"
      description: "<p>Create Product Attribute</p><p>Product Attributes are used\
        \ to describe a financial Product with a list of typed key value pairs.</p><p>Each\
        \ Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Typical\
        \ product attributes might be:</p><p>ISIN (for International bonds)<br />VKN\
        \ (for German bonds)<br />REDCODE (markit short code for credit derivative)<br\
        \ />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the\
        \ bond was issued in the market)<br />MATURITY_DATE (End of life time of a\
        \ product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a>\
        \ for more examples.</p><p>The type field must be one of &quot;STRING&quot;,\
        \ &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createProductAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "ProductAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ProductAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attributes/{PRODUCT_ATTRIBUTE_ID}:
    get:
      tags:
      - "Product"
      summary: "Get Product Attribute"
      description: "<p>Get Product Attribute</p><p>Product Attributes are used to\
        \ describe a financial Product with a list of typed key value pairs.</p><p>Each\
        \ Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Get one\
        \ product attribute by its id.</p><p>Authentication is Mandatory</p>"
      operationId: "getProductAttribute"
      parameters:
      - name: "PRODUCT_ATTRIBUTE_ID"
        in: "path"
        description: "the product attribute id"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTATTRIBUTEID"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserHasMissingRoles"
    put:
      tags:
      - "Product"
      summary: "Update Product Attribute"
      description: "<p>Update Product Attribute.</p><p>Product Attributes are used\
        \ to describe a financial Product with a list of typed key value pairs.</p><p>Each\
        \ Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Update\
        \ one Product Attribute by its id.</p><p>Authentication is Mandatory</p>"
      operationId: "updateProductAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "ProductAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ProductAttributeJsonV400"
        x-exportParamName: "Body"
      - name: "PRODUCT_ATTRIBUTE_ID"
        in: "path"
        description: "the product attribute id"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTATTRIBUTEID"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserHasMissingRoles"
    delete:
      tags:
      - "Product"
      summary: "Delete Product Attribute"
      description: "<p>Delete Product Attribute</p><p>Product Attributes are used\
        \ to describe a financial Product with a list of typed key value pairs.</p><p>Each\
        \ Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Delete\
        \ a Product Attribute by its id.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteProductAttribute"
      parameters:
      - name: "PRODUCT_ATTRIBUTE_ID"
        in: "path"
        description: "the product attribute id"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTATTRIBUTEID"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserHasMissingRoles"
  /obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fee:
    post:
      tags:
      - "Product"
      summary: "Create Product Fee"
      description: "<p>Create Product Fee</p><p>Authentication is Mandatory</p>"
      operationId: "createProductFee"
      parameters:
      - in: "body"
        name: "body"
        description: "ProductFeeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ProductFeeJsonV400"
        x-exportParamName: "Body"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductFeeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fees:
    get:
      tags:
      - "Product"
      summary: "Get Product Fees"
      description: "<p>Get Product Fees</p><p>Authentication is Optional</p>"
      operationId: "getProductFees"
      parameters:
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductFeesResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fees/PRODUCT_FEE_ID:
    get:
      tags:
      - "Product"
      summary: "Get Product Fee"
      description: "<p>Get Product Fee</p><p>Get one product fee by its id.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getProductFee"
      parameters:
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductFeeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "Product"
      summary: "Update Product Fee"
      description: "<p>Update Product Fee.</p><p>Update one Product Fee by its id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateProductFee"
      parameters:
      - in: "body"
        name: "body"
        description: "ProductFeeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ProductFeeJsonV400"
        x-exportParamName: "Body"
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ProductFeeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Product"
      summary: "Delete Product Fee"
      description: "<p>Delete Product Fee</p><p>Delete one product fee by its id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteProductFee"
      parameters:
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/public/accounts/{ACCOUNT_ID}/{VIEW_ID}/account:
    get:
      tags:
      - "Account-Public"
      - "Account"
      summary: "Get Public Account by Id"
      description: "<p>Returns information about an account that has a public view.</p><p>The\
        \ account is specified by ACCOUNT_ID. The information is moderated by the\
        \ view specified by VIEW_ID.</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>Routing</li></ul><p>PSD2\
        \ Context: PSD2 requires customers to have access to their account information\
        \ via third party applications.<br />This call provides balance and other\
        \ account information via delegated authentication using OAuth.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getPublicAccountById"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ModeratedCoreAccountJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/resource-docs/{API_VERSION}/obp:
    get:
      tags:
      - "Documentation"
      - "API"
      summary: "Get Bank Level Dynamic Resource Docs."
      description: "<p>Get documentation about the RESTful resources on this server\
        \ including example bodies for POST and PUT requests.</p><p>This is the native\
        \ data format used to document OBP endpoints. Each endpoint has a Resource\
        \ Doc (a Scala case class) defined in the source code.</p><p>This endpoint\
        \ is used by OBP API Explorer to display and work with the API documentation.</p><p>Most\
        \ (but not all) fields are also available in swagger format. (The Swagger\
        \ endpoint is built from Resource Docs.)</p><p>API_VERSION is the version\
        \ you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint\
        \ with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint\
        \ with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For\
        \ possible function values, see implemented_by.function in the JSON returned\
        \ by this endpoint or the OBP source code or the footer of the API Explorer\
        \ which produces a comma separated list of functions that reflect the server\
        \ or filtering by API Explorer based on tags etc.</p><p>You may filter this\
        \ endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if\
        \ set content=dynamic, only show dynamic endpoints, if content=static, only\
        \ show the static endpoints. if omit this parameter, we will show all the\
        \ endpoints.</p><p>You may need some other language resource docs, now we\
        \ support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id,\
        \ but api-collection-id can not be used with others together. If api-collection-id\
        \ is used in URL, it will ignore all other parameters.</p><p>See the Resource\
        \ Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are\
        \ cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is\
        \ 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li>\
        \ operation_id is concatenation of \"v\", version and function and should\
        \ be unique (used for DOM element IDs etc. maybe used to link to source code)\
        \ </li><li> version references the version that the API call is defined in.</li><li>\
        \ function is the (scala) partial function that implements this endpoint.\
        \ It is unique per version of the API.</li><li> request_url is empty for the\
        \ root call, else the path. It contains the standard prefix (e.g. /obp) and\
        \ the implemented version (the version where this endpoint was defined) e.g.\
        \ /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty\
        \ for the root call, else the path. It contains the standard prefix (e.g.\
        \ /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In\
        \ OBP, endpoints are first made available at the request_url, but the same\
        \ resource (function call) is often made available under later versions (specified_url).\
        \ To access the latest version of all endpoints use the latest version available\
        \ on your OBP instance e.g. /obp/v3.1.0 - To get the original version use\
        \ the request_url. We recommend to use the specified_url since non semantic\
        \ improvements are more likely to be applied to later implementations of the\
        \ call.</li><li> summary is a short description inline with the swagger terminology.\
        \ </li><li> description may contain html markup (generated from markdown on\
        \ the server).</li></ul><p>Authentication is Mandatory</p>"
      operationId: "getBankLevelDynamicResourceDocsObp"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "API_VERSION"
        in: "path"
        description: "eg:v2.2.0, v3.0.0"
        required: true
        type: "string"
        x-exportParamName: "APIVERSION"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ResourceDocsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks/{BANK_ID}/search/customers/mobile-phone-number:
    post:
      tags:
      - "Customer"
      - "KYC"
      summary: "Get Customers by MOBILE_PHONE_NUMBER"
      description: "<p>Gets the Customers specified by MOBILE_PHONE_NUMBER.</p><p>There\
        \ are two wildcards often used in conjunction with the LIKE operator:<br />%\
        \ - The percent sign represents zero, one, or multiple characters<br />_ -\
        \ The underscore represents a single character<br />For example {&quot;customer_phone_number&quot;:&quot;%381%&quot;}\
        \ lists all numbers which contain 381 sequence</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomersByCustomerPhoneNumber"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCustomerPhoneNumberJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCustomerPhoneNumberJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/settlement-accounts:
    get:
      tags:
      - "Bank"
      - "PSD2"
      summary: "Get Settlement accounts at Bank"
      description: "<p>Get settlement accounts on this API instance<br />Returns a\
        \ list of settlement accounts at this Bank</p><p>Note: a settlement account\
        \ is considered as a bank account.<br />So you can update it and add account\
        \ attributes to it using the regular account endpoints</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getSettlementAccounts"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SettlementAccountsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Bank"
      summary: "Create Settlement Account"
      description: "<p>Create a new settlement account at a bank.</p><p>The created\
        \ settlement account id will be the concatenation of the payment system and\
        \ the account currency.<br />For examples: SEPA_SETTLEMENT_ACCOUNT_EUR, CARD_SETTLEMENT_ACCOUNT_USD</p><p>By\
        \ default, when you create a new bank, two settlements accounts are created\
        \ automatically: OBP_DEFAULT_INCOMING_ACCOUNT_ID and OBP_DEFAULT_OUTGOING_ACCOUNT_ID<br\
        \ />Those two accounts have EUR as default currency.</p><p>If you want to\
        \ create default settlement account for a specific currency, you can fill\
        \ the <code>payment_system</code> field with the <code>DEFAULT</code> value.</p><p>When\
        \ a transaction is saved in OBP through the mapped connector, OBP-API look\
        \ for the account to save the double-entry transaction.<br />If no OBP account\
        \ can be found from the counterparty, the double-entry transaction will be\
        \ saved on a bank settlement account.<br />- First, the mapped connector looks\
        \ for a settlement account specific to the payment system and currency. E.g\
        \ SEPA_SETTLEMENT_ACCOUNT_EUR.<br />- If we don't find any specific settlement\
        \ account with the payment system, we look for a default settlement account\
        \ for the counterparty currency. E.g DEFAULT_SETTLEMENT_ACCOUNT_EUR.<br />-\
        \ Else, we select one of the two OBP default settlement accounts (OBP_DEFAULT_INCOMING_ACCOUNT_ID/OBP_DEFAULT_OUTGOING_ACCOUNT_ID)\
        \ according to the transaction direction.</p><p>If the POST body USER_ID <em>is</em>\
        \ specified, the logged in user must have the Role CanCreateAccount. Once\
        \ created, the Account will be owned by the User specified by USER_ID.</p><p>If\
        \ the POST body USER_ID is <em>not</em> specified, the account will be owned\
        \ by the logged in User.</p><p>Note: The Amount MUST be zero.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createSettlementAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "SettlementAccountRequestJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/SettlementAccountRequestJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SettlementAccountResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/banks/{BANK_ID}/transaction-request-types:
    get:
      tags:
      - "Transaction-Request"
      - "Bank"
      summary: "Get Transaction Request Types at Bank"
      description: "<p>Get the list of the Transaction Request Types supported by\
        \ the bank.</p><p>Authentication is Optional</p>"
      operationId: "getTransactionRequestTypesSupportedByBank"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestTypesJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/banks/{BANK_ID}/transaction-types:
    get:
      tags:
      - "Bank"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Transaction Types at Bank"
      description: "<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists\
        \ the possible Transaction Types available at the bank (as opposed to Transaction\
        \ Request Types which are the possible ways Transactions can be created by\
        \ this API Server).</p><ul><li>id : Unique transaction type id across the\
        \ API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank\
        \ that supports this TransactionType</li><li>short_code : A short code (SHOULD\
        \ have no-spaces) which MUST be unique across the bank. May be stored with\
        \ Transactions to link here</li><li>summary : A succinct summary</li><li>description\
        \ : A longer description</li><li>charge : The charge to the customer for each\
        \ one of these</li></ul><p>Authentication is Optional</p>"
      operationId: "getTransactionTypes"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionTypesJsonV200"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "Bank"
      summary: "Create Transaction Type at bank"
      description: "<p>Create Transaction Types for the bank specified by BANK_ID:</p><ul><li>id\
        \ : Unique transaction type id across the API instance. SHOULD be a UUID.\
        \ MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code\
        \ : A short code (SHOULD have no-spaces) which MUST be unique across the bank.\
        \ May be stored with Transactions to link here</li><li>summary : A succinct\
        \ summary</li><li>description : A longer description</li><li>charge : The\
        \ charge to the customer for each one of these</li></ul><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createTransactionType"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionTypeJsonV200 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionTypeJsonV200"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionType"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/user-invitation:
    post:
      tags:
      - "User-Invitation"
      - "KYC"
      summary: "Create User Invitation"
      description: "<p>Create User Invitation.</p><p>This endpoint will send an invitation\
        \ email to the developers, then they can use the link to create the obp user.</p><p>purpose\
        \ filed only support:List(DEVELOPER, CUSTOMER).</p><p>You can customise the\
        \ email details use the following webui props:</p><p>when purpose == DEVELOPER<br\
        \ />webui_developer_user_invitation_email_subject<br />webui_developer_user_invitation_email_from<br\
        \ />webui_developer_user_invitation_email_text<br />webui_developer_user_invitation_email_html_text</p><p>when\
        \ purpose = == CUSTOMER<br />webui_customer_user_invitation_email_subject<br\
        \ />webui_customer_user_invitation_email_from<br />webui_customer_user_invitation_email_text<br\
        \ />webui_customer_user_invitation_email_html_text</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "createUserInvitation"
      parameters:
      - in: "body"
        name: "body"
        description: "PostUserInvitationJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostUserInvitationJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserInvitationJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/user-invitations:
    get:
      tags:
      - "User-Invitation"
      summary: "Get User Invitations"
      description: "<p>Get User Invitations</p><p>Authentication is Mandatory</p>"
      operationId: "getUserInvitations"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserInvitationJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "User-Invitation"
      - "KYC"
      summary: "Get User Invitation Information"
      description: "<p>Create User Invitation Information.</p><p>Authentication is\
        \ Optional</p>"
      operationId: "getUserInvitationAnonymous"
      parameters:
      - in: "body"
        name: "body"
        description: "PostUserInvitationAnonymousJsonV400 object that needs to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/PostUserInvitationAnonymousJsonV400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserInvitationJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/banks/{BANK_ID}/user-invitations/SECRET_LINK:
    get:
      tags:
      - "User-Invitation"
      summary: "Get User Invitation"
      description: "<p>Get User Invitation</p><p>Authentication is Mandatory</p>"
      operationId: "getUserInvitation"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserInvitationJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/user_customer_links:
    post:
      tags:
      - "Customer"
      - "User"
      summary: "Create User Customer Link"
      description: "<p>Link a User to a Customer</p><p>Authentication is Mandatory</p>"
      operationId: "createUserCustomerLinks"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateUserCustomerLinkJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateUserCustomerLinkJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserCustomerLinkJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/user_customer_links/USER_CUSTOMER_LINK_ID:
    delete:
      tags:
      - "Customer"
      summary: "Delete User Customer Link"
      description: "<p>Delete User Customer Link by USER_CUSTOMER_LINK_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteUserCustomerLink"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/user_customer_links/customers/{CUSTOMER_ID}:
    get:
      tags:
      - "Customer"
      summary: "Get User Customer Links by Customer"
      description: "<p>Get User Customer Links by CUSTOMER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getUserCustomerLinksByCustomerId"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserCustomerLinksJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/user_customer_links/users/{USER_ID}:
    get:
      tags:
      - "Customer"
      summary: "Get User Customer Links by User"
      description: "<p>Get User Customer Links by USER_ID</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getUserCustomerLinksByUserId"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserCustomerLinksJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlements for User at Bank"
      description: "<p>Get Entitlements specified by BANK_ID and USER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getEntitlementsByBankAndUser"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementJSONs"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{AUTH_CONTEXT_UPDATE_ID}/challenge:
    post:
      tags:
      - "User"
      summary: "Answer User Auth Context Update Challenge"
      description: "<p>Answer User Auth Context Update Challenge.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "answerUserAuthContextUpdateChallenge"
      parameters:
      - in: "body"
        name: "body"
        description: "PostUserAuthContextUpdateJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostUserAuthContextUpdateJsonV310"
        x-exportParamName: "Body"
      - name: "AUTH_CONTEXT_UPDATE_ID"
        in: "path"
        description: "the auth context update id"
        required: true
        type: "string"
        x-exportParamName: "AUTHCONTEXTUPDATEID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAuthContextUpdateJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{SCA_METHOD}:
    post:
      tags:
      - "User"
      summary: "Create User Auth Context Update Request"
      description: "<p>Create User Auth Context Update Request.<br />Authentication\
        \ is Mandatory</p><p>A One Time Password (OTP) (AKA security challenge) is\
        \ sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br\
        \ />SCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot;\
        \ is used for testing purposes.</p>"
      operationId: "createUserAuthContextUpdateRequest"
      parameters:
      - in: "body"
        name: "body"
        description: "PostUserAuthContextJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostUserAuthContextJson"
        x-exportParamName: "Body"
      - name: "SCA_METHOD"
        in: "path"
        description: "the sca method"
        required: true
        type: "string"
        x-exportParamName: "SCAMETHOD"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAuthContextUpdateJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/banks/{BANK_ID}/web-hooks/account/notifications/on-create-transaction:
    post:
      tags:
      - "Webhook"
      - "Bank"
      summary: "Create bank level Account Notification Webhook"
      description: "<p>Create a notification Webhook that will fire for all accounts\
        \ on the specified Bank.</p><p>Webhooks are used to call external web services\
        \ when certain events happen.</p><p>For instance, a webhook can be used to\
        \ notify an external service if a transaction is created on an account.</p><p>When\
        \ an account notification webhook fires it will POST to the URL you specify\
        \ during the creation of the webhook.</p><p>Inside the payload you will find\
        \ account_id and transaction_id and also user_ids and customer_ids of the\
        \ Users / Customers linked to the Account.</p><p>The webhook will POST the\
        \ following structure to your service:</p><p>{<br />&quot;event_name&quot;:\
        \ &quot;OnCreateTransaction&quot;,<br />&quot;event_id&quot;: &quot;9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br\
        \ />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;transaction_id&quot;:\
        \ &quot;7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;related_entities&quot;:\
        \ [<br />{<br />&quot;user_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br\
        \ />&quot;customer_ids&quot;: [&quot;3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;]<br\
        \ />}<br />]<br />}</p><p>Thus, your service should accept the above POST\
        \ body structure.</p><p>In this way, your web service can be informed about\
        \ an event on an account and act accordingly.</p><p>Further information about\
        \ the account, transaction or related entities can then be retrieved using\
        \ the standard REST APIs.</p><p>Authentication is Mandatory</p>"
      operationId: "createBankAccountNotificationWebhook"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountNotificationWebhookPostJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountNotificationWebhookPostJson"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BankAccountNotificationWebhookJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/cards:
    get:
      tags:
      - "Card"
      summary: "Get cards for the current user"
      description: "<p>Returns data about all the physical cards a user has been issued.\
        \ These could be debit cards, credit cards, etc.</p><p>Authentication is Mandatory</p>"
      operationId: "getCards"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PhysicalCardsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/certs:
    get:
      tags:
      - "API"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get JSON Web Key (JWK)"
      description: "<p>Get the server's public JSON Web Key (JWK) set and certificate\
        \ chain.<br />It is required by client applications to validate ID tokens,\
        \ self-contained access tokens and other issued objects.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getServerJWK"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SeverJWK"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/config:
    get:
      tags:
      - "API"
      summary: "Get API Configuration"
      description: "<p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka\
        \ configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>Authentication\
        \ is Mandatory</p>"
      operationId: "config"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConfigurationJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/connector/loopback:
    get:
      tags:
      - "API"
      summary: "Get Connector Status (Loopback)"
      description: "<p>This endpoint makes a call to the Connector to check the backend\
        \ transport (e.g. Kafka) is reachable.</p><p>Currently this is only implemented\
        \ for Kafka based connectors.</p><p>For Kafka based connectors, this endpoint\
        \ writes a message to Kafka and reads it again.</p><p>In the future, this\
        \ endpoint may also return information about database connections etc.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getObpConnectorLoopback"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ObpApiLoopbackJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/consumer/consent-requests:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent Request"
      description: "<p>Client Authentication (mandatory)</p><p>It is used when applications\
        \ request an access token to access their own resources, not on behalf of\
        \ a user.</p><p>The client needs to authenticate themselves for this request.<br\
        \ />In case of public client we use client_id and private kew to obtain access\
        \ token, otherwise we use client_id and client_secret.<br />The obtained access\
        \ token is used in the HTTP Bearer auth header of our request.</p><p>Example:<br\
        \ />Authorization: Bearer eXtneO-THbQtn3zvK_kQtXXfvOZyZFdBCItlPDbR2Bk.dOWqtXCtFX-tqGTVR0YrIjvAolPIVg7GZ-jz83y6nA0</p><p>Authentication\
        \ is Optional</p>"
      operationId: "createConsentRequest"
      parameters:
      - in: "body"
        name: "body"
        description: "PostConsentRequestJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostConsentRequestJsonV500"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentRequestResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Consent Request"
      description: "<p>Authentication is Optional</p>"
      operationId: "getConsentRequest"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentRequestResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/EMAIL/consents:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent By CONSENT_REQUEST_ID (EMAIL)"
      description: "<p>This endpoint continues the process of creating a Consent.\
        \ It starts the SCA flow which changes the status of the consent from INITIATED\
        \ to ACCEPTED or REJECTED.<br />Please note that the Consent cannot elevate\
        \ the privileges logged in user already have.</p><p>Authentication is Mandatory</p>"
      operationId: "createConsentByConsentRequestIdEmail"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/IMPLICIT/consents:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent By CONSENT_REQUEST_ID (IMPLICIT)"
      description: "<p>This endpoint continues the process of creating a Consent.\
        \ It starts the SCA flow which changes the status of the consent from INITIATED\
        \ to ACCEPTED or REJECTED.<br />Please note that the Consent cannot elevate\
        \ the privileges logged in user already have.</p><p>Authentication is Mandatory</p>"
      operationId: "createConsentByConsentRequestIdImplicit"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/SMS/consents:
    post:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Create Consent By CONSENT_REQUEST_ID (SMS)"
      description: "<p>This endpoint continues the process of creating a Consent.\
        \ It starts the SCA flow which changes the status of the consent from INITIATED\
        \ to ACCEPTED or REJECTED.<br />Please note that the Consent cannot elevate\
        \ the privileges logged in user already have.</p><p>Authentication is Mandatory</p>"
      operationId: "createConsentByConsentRequestIdSms"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/consents:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Consent By Consent Request Id"
      description: "<p>This endpoint gets the Consent By consent request id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConsentByConsentRequestId"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/consumer/consents/{CONSENT_ID}:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Consent By Consent Id"
      description: "<p>This endpoint gets the Consent By consent id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConsentByConsentId"
      parameters:
      - name: "CONSENT_ID"
        in: "path"
        description: "the consent id"
        required: true
        type: "string"
        x-exportParamName: "CONSENTID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/consumers/{CONSUMER_ID}/scope/{SCOPE_ID}:
    delete:
      tags:
      - "Scope"
      - "Consumer"
      summary: "Delete Consumer Scope"
      description: "<p>Delete Consumer Scope specified by SCOPE_ID for an consumer\
        \ specified by CONSUMER_ID</p><p>Authentication is required and the user needs\
        \ to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteScope"
      parameters:
      - name: "SCOPE_ID"
        in: "path"
        description: "the scope id"
        required: true
        type: "string"
        x-exportParamName: "SCOPEID"
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/consumers/{CONSUMER_ID}/scopes:
    get:
      tags:
      - "Scope"
      - "Consumer"
      summary: "Get Scopes for Consumer"
      description: "<p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getScopes"
      parameters:
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ScopeJsons"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Scope"
      - "Consumer"
      summary: "Create Scope for a Consumer"
      description: "<p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used\
        \ to grant System or Bank level roles to the Consumer (App). (For Account\
        \ level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser),\
        \ set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For\
        \ a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value\
        \ e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "addScope"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateScopeJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateScopeJson"
        x-exportParamName: "Body"
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ScopeJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get Customers at Any Bank"
      description: "<p>Get Customers at Any Bank.</p><p>Authentication is Mandatory</p>"
      operationId: "getCustomersAtAnyBank"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJSONsV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers-minimal:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get Customers Minimal at Any Bank"
      description: "<p>Get Customers Minimal at Any Bank.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getCustomersMinimalAtAnyBank"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomersMinimalJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers/{CUSTOMER_ID}/accounts-minimal:
    get:
      tags:
      - "Account"
      summary: "Get Accounts Minimal for a Customer"
      description: "<p>Get Accounts Minimal by CUSTOMER_ID</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getAccountsMinimalByCustomerId"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountsMinimalJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_checks:
    get:
      tags:
      - "KYC"
      - "Customer"
      summary: "Get Customer KYC Checks"
      description: "<p>Get KYC checks for the Customer specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getKycChecks"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycChecksJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_documents:
    get:
      tags:
      - "KYC"
      - "Customer"
      summary: "Get Customer KYC Documents"
      description: "<p>Get KYC (know your customer) documents for a customer specified\
        \ by CUSTOMER_ID<br />Get a list of documents that affirm the identity of\
        \ the customer<br />Passport, driving licence etc.<br />Authentication is\
        \ Optional</p><p>Authentication is Mandatory</p>"
      operationId: "getKycDocuments"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycDocumentsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_media:
    get:
      tags:
      - "KYC"
      - "Customer"
      summary: "Get KYC Media for a customer"
      description: "<p>Get KYC media (scans, pictures, videos) that affirms the identity\
        \ of the customer.</p><p>Authentication is Mandatory</p>"
      operationId: "getKycMedia"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycMediasJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_statuses:
    get:
      tags:
      - "KYC"
      - "Customer"
      summary: "Get Customer KYC statuses"
      description: "<p>Get the KYC statuses for a customer specified by CUSTOMER_ID\
        \ over time.</p><p>Authentication is Mandatory</p>"
      operationId: "getKycStatuses"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/KycStatusesJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/database/info:
    get:
      tags:
      - "API"
      summary: "Get Mapper Database Info"
      description: "<p>Get basic information about the Mapper Database.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMapperDatabaseInfo"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AdapterInfoJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/development/call_context:
    get:
      tags:
      - "API"
      summary: "Get the Call Context of a current call"
      description: "<p>Get the Call Context of the current call.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCallContext"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/development/echo/jws-verified-request-jws-signed-response:
    get:
      tags:
      - "API"
      summary: "Verify Request and Sign Response of a current call"
      description: "<p>Verify Request and Sign Response of a current call.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "verifyRequestSignResponse"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/dynamic-registration/consumers:
    post:
      tags:
      - "Directory"
      - "Consumer"
      summary: "Create a Consumer"
      description: "<p>Create a Consumer (mTLS access).</p><p>JWT payload:<br />-\
        \ minimal<br />{ &quot;description&quot;:&quot;Description&quot; }<br />-\
        \ full<br />{<br />&quot;description&quot;: &quot;Description&quot;,<br />&quot;app_name&quot;:\
        \ &quot;Tesobe GmbH&quot;,<br />&quot;app_type&quot;: &quot;Sofit&quot;,<br\
        \ />&quot;developer_email&quot;: &quot;<a href=\"m&#97;i&#x6c;&#x74;&#111;&#x3a;&#109;&#x61;&#x72;&#x6b;&#111;@&#116;&#x65;&#115;&#x6f;&#98;e&#x2e;&#x63;o&#109;\"\
        >&#109;&#x61;&#114;ko&#x40;te&#x73;&#x6f;&#98;&#101;.&#99;&#111;m</a>&quot;,<br\
        \ />&quot;redirect_url&quot;: &quot;<a href=\"http://localhost:8082\">http://localhost:8082</a>&quot;<br\
        \ />}<br />Please note that JWT must be signed with the counterpart private\
        \ kew of the public key used to establish mTLS</p><p>Authentication is Optional</p>"
      operationId: "createConsumer"
      parameters:
      - in: "body"
        name: "body"
        description: "ConsumerJwtPostJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ConsumerJwtPostJsonV510"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsumerJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/endpoints/authentication-type-validations:
    get:
      tags:
      - "Authentication-Type-Validation"
      summary: "Get all Authentication Type Validations - public"
      description: "<p>Get all Authentication Type Validations - public.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getAllAuthenticationTypeValidationsPublic"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/endpoints/json-schema-validations:
    get:
      tags:
      - "JSON-Schema-Validation"
      summary: "Get all JSON Schema Validations - public"
      description: "<p>Get all JSON Schema Validations - public.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getAllJsonSchemaValidationsPublic"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/entitlement-requests:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get all Entitlement Requests"
      description: "<p>Get all Entitlement Requests</p><p>Authentication is Mandatory</p>"
      operationId: "getAllEntitlementRequests"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementRequestsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Create Entitlement Request for current User"
      description: "<p>Create Entitlement Request.</p><p>Any logged in User can use\
        \ this endpoint to request an Entitlement</p><p>Entitlements are used to grant\
        \ System or Bank level roles to Users. (For Account level privileges, see\
        \ Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to\
        \ an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level\
        \ Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addEntitlementRequest"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateEntitlementJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateEntitlementJSON"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementRequestJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/entitlement-requests/{ENTITLEMENT_REQUEST_ID}:
    delete:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Delete Entitlement Request"
      description: "<p>Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID\
        \ for a user specified by USER_ID</p><p>Authentication is Mandatory</p>"
      operationId: "deleteEntitlementRequest"
      parameters:
      - name: "ENTITLEMENT_REQUEST_ID"
        in: "path"
        description: "the entitlement request id"
        required: true
        type: "string"
        x-exportParamName: "ENTITLEMENTREQUESTID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/entitlements:
    get:
      tags:
      - "Role"
      - "Entitlement"
      summary: "Get all Entitlements"
      description: "<p>Login is required.</p><p>Possible filter on the role field:</p><p>eg:\
        \ /entitlements?role=CanGetCustomer</p><p>Authentication is Mandatory</p>"
      operationId: "getAllEntitlements"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementJSONs"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/jwks-uris:
    get:
      tags:
      - "API"
      summary: "Get JSON Web Key (JWK) URIs"
      description: "<p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br\
        \ />It is required by client applications to validate ID tokens, self-contained\
        \ access tokens and other issued objects.</p><p>Authentication is Optional</p>"
      operationId: "getOAuth2ServerJWKsURIs"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OAuth2ServerJwksUrisJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/management/accounts/account-routing-query:
    post:
      tags:
      - "Account"
      summary: "Get Account by Account Routing"
      description: "<p>This endpoint returns the account (if it exists) linked with\
        \ the provided scheme and address.</p><p>The <code>bank_id</code> field is\
        \ optional, but if it's not provided, we don't guarantee that the returned\
        \ account is unique across all the banks.</p><p>Example of account routing\
        \ scheme: <code>IBAN</code>, &quot;OBP&quot;, &quot;AccountNumber&quot;, ...<br\
        \ />Example of account routing address: <code>DE17500105178275645584</code>,\
        \ &quot;321774cc-fccd-11ea-adc1-0242ac120002&quot;, &quot;55897106215&quot;,\
        \ ...</p><p>Authentication is Mandatory</p>"
      operationId: "getAccountByAccountRouting"
      parameters:
      - in: "body"
        name: "body"
        description: "BankAccountRoutingJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/BankAccountRoutingJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ModeratedAccountJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/accounts/account-routing-regex-query:
    post:
      tags:
      - "Account"
      summary: "Get Accounts by Account Routing Regex"
      description: "<p>This endpoint returns an array of accounts matching the provided\
        \ routing scheme and the routing address regex.</p><p>The <code>bank_id</code>\
        \ field is optional.</p><p>Example of account routing scheme: <code>IBAN</code>,\
        \ <code>OBP</code>, <code>AccountNumber</code>, ...<br />Example of account\
        \ routing address regex: <code>DE175.*</code>, <code>55897106215-[A-Z]{3}</code>,\
        \ ...</p><p>This endpoint can be used to retrieve multiples accounts matching\
        \ a same account routing address pattern.<br />For example, if you want to\
        \ link multiple accounts having different currencies, you can create an account<br\
        \ />with <code>123456789-EUR</code> as Account Number and an other account\
        \ with <code>123456789-USD</code> as Account Number.<br />So we can identify\
        \ the Account Number as <code>123456789</code>, so to get all the accounts\
        \ with the same account number<br />and the different currencies, we can use\
        \ this body in the request :</p><pre><code>{   &quot;bank_id&quot;: &quot;BANK_ID&quot;,\
        \   &quot;account_routing&quot;: {       &quot;scheme&quot;: &quot;AccountNumber&quot;,\
        \       &quot;address&quot;: &quot;123456789-[A-Z]{3}&quot;   }}</code></pre><p>This\
        \ request will returns the accounts matching the routing address regex (<code>123456789-EUR</code>\
        \ and <code>123456789-USD</code>).</p><p>Authentication is Mandatory</p>"
      operationId: "getAccountsByAccountRoutingRegex"
      parameters:
      - in: "body"
        name: "body"
        description: "BankAccountRoutingJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/BankAccountRoutingJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ModeratedAccountsJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/aggregate-metrics:
    get:
      tags:
      - "Metric"
      - "Aggregate-Metrics"
      summary: "Get Aggregate Metrics"
      description: "<p>Returns aggregate metrics on api usage eg. total count, response\
        \ time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg:\
        \ /management/aggregate-metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;consumer_id=5<br\
        \ />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br\
        \ />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br\
        \ />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1\
        \ from_date (defaults to the day before the current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2\
        \ to_date (defaults to the current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3\
        \ consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon\
        \ (if null ignore) only support two value : true (return where user_id is\
        \ null.) or false (return where user_id is not null.)</p><p>6 url (if null\
        \ ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8\
        \ implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version\
        \ (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id\
        \ (if null ignore)</p><p>12 include_app_names (if null ignore).eg: &amp;include_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>13\
        \ include_url_patterns (if null ignore).you can design you own SQL LIKE pattern.\
        \ eg: &amp;include_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>14\
        \ include_implemented_by_partial_functions (if null ignore).eg: &amp;include_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAggregateMetrics"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AggregateMetricJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/api-collections:
    get:
      tags:
      - "Api-Collection"
      summary: "Get All API Collections"
      description: "<p>Get All API Collections.</p><p>Authentication is Mandatory</p>"
      operationId: "getAllApiCollections"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserHasMissingRoles"
  /obp/v5.1.0/management/authentication-type-validations:
    get:
      tags:
      - "Authentication-Type-Validation"
      summary: "Get all Authentication Type Validations"
      description: "<p>Get all Authentication Type Validations.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAllAuthenticationTypeValidations"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/authentication-type-validations/OPERATION_ID:
    get:
      tags:
      - "Authentication-Type-Validation"
      summary: "Get an Authentication Type Validation"
      description: "<p>Get an Authentication Type Validation by operation_id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAuthenticationTypeValidation"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonAuthTypeValidation"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    post:
      tags:
      - "Authentication-Type-Validation"
      summary: "Create an Authentication Type Validation"
      description: "<p>Create an Authentication Type Validation.</p><p>Please supply\
        \ allowed authentication types.</p><p>Authentication is Mandatory</p>"
      operationId: "createAuthenticationTypeValidation"
      parameters:
      - in: "body"
        name: "body"
        description: "$colon$colon object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/NotSupportedYet"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonAuthTypeValidation"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Authentication-Type-Validation"
      summary: "Update an Authentication Type Validation"
      description: "<p>Update an Authentication Type Validation.</p><p>Please supply\
        \ allowed authentication types.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAuthenticationTypeValidation"
      parameters:
      - in: "body"
        name: "body"
        description: "$colon$colon object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/NotSupportedYet"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonAuthTypeValidation"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Authentication-Type-Validation"
      summary: "Delete an Authentication Type Validation"
      description: "<p>Delete an Authentication Type Validation by operation_id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteAuthenticationTypeValidation"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/account-web-hooks:
    get:
      tags:
      - "Webhook"
      - "Bank"
      summary: "Get Account Webhooks"
      description: "<p>Get Account Webhooks.</p><p>Possible custom URL parameters\
        \ for pagination:</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER\
        \ ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>account_id=STRING\
        \ (if null ignore)</li><li>user_id=STRING (if null ignore)</li></ul><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAccountWebhooks"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AccountWebhooksJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}:
    put:
      tags:
      - "Account"
      summary: "Update Account"
      description: "<p>Update the account.</p><p>Authentication is Mandatory</p>"
      operationId: "updateAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "UpdateAccountRequestJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UpdateAccountRequestJsonV310"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateAccountResponseJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties:
    get:
      tags:
      - "Counterparty"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      - "Account"
      summary: "Get Counterparties for any account (Explicit)"
      description: "<p>Get the Counterparties (Explicit) for any account .</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCounterpartiesForAnyAccount"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartiesJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Create Counterparty for any account (Explicit)"
      description: "<p>Create Counterparty for any Account. (Explicit)</p><p>In OBP,\
        \ there are two types of Counterparty.</p><ul><li><p>Explicit Counterparties\
        \ (those here) which we create explicitly and are used in COUNTERPARTY Transaction\
        \ Requests</p></li><li><p>Implicit Counterparties (AKA Other Accounts) which\
        \ are generated automatically from the other sides of Transactions.</p></li></ul><p>Explicit\
        \ Counterparties are created for the account / view<br />They are how the\
        \ user of the view (e.g. account owner) refers to the other side of the transaction</p><p>name\
        \ : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>description\
        \ : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>currency\
        \ : counterparty account currency (e.g. EUR, GBP, USD, ...)</p><p>bank_routing_scheme\
        \ : eg: bankId or bankCode or any other strings</p><p>bank_routing_address\
        \ : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p><p>account_routing_scheme\
        \ : eg: AccountId or AccountNumber or any other strings</p><p>account_routing_address\
        \ : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p><p>other_account_secondary_routing_scheme\
        \ : eg: IBAN or any other strings</p><p>other_account_secondary_routing_address\
        \ : if it is an IBAN, it should be unique for each counterparty.</p><p>other_branch_routing_scheme\
        \ : eg: branchId or any other strings or you can leave it empty, not useful\
        \ in sandbox mode.</p><p>other_branch_routing_address : eg: <code>branch-id-123</code>\
        \ or you can leave it empty, not useful in sandbox mode.</p><p>is_beneficiary\
        \ : must be set to <code>true</code> in order to send payments to this counterparty</p><p>bespoke:\
        \ It supports a list of key-value, you can add it to the counterparty.</p><p>bespoke.key\
        \ : any info-key you want to add to this counterparty</p><p>bespoke.value\
        \ : any info-value you want to add to this counterparty</p><p>The view specified\
        \ by VIEW_ID must have the canAddCounterparty permission</p><p>A minimal example\
        \ for TransactionRequestType == COUNTERPARTY<br />{<br />&quot;name&quot;:\
        \ &quot;Tesobe1&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br\
        \ />&quot;currency&quot;: &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;:\
        \ &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br\
        \ />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;:\
        \ &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;is_beneficiary&quot;:\
        \ true,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br\
        \ />&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br\
        \ />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;:\
        \ &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>A minimal example\
        \ for TransactionRequestType == SEPA</p><p>{<br />&quot;name&quot;: &quot;Tesobe2&quot;,<br\
        \ />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;currency&quot;:\
        \ &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br\
        \ />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;:\
        \ &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br\
        \ />&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044\
        \ 0532 0130 00&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_branch_routing_scheme&quot;:\
        \ &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br\
        \ />&quot;bespoke&quot;: []<br />}</p><p>Authentication is Mandatory</p>"
      operationId: "createCounterpartyForAnyAccount"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCounterpartyJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCounterpartyJson400"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartyWithMetadataJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}:
    get:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Get Counterparty by Id for any account (Explicit) "
      description: "<p>Authentication is Mandatory</p>"
      operationId: "getCounterpartyByIdForAnyAccount"
      parameters:
      - name: "COUNTERPARTY_ID"
        in: "path"
        description: "the counterparty id"
        required: true
        type: "string"
        x-exportParamName: "COUNTERPARTYID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartyWithMetadataJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Delete Counterparty for any account (Explicit)"
      description: "<p>Delete Counterparty (Explicit) for any account<br />and also\
        \ delete the Metadata for its counterparty.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteCounterpartyForAnyAccount"
      parameters:
      - name: "COUNTERPARTY_ID"
        in: "path"
        description: "the counterparty id"
        required: true
        type: "string"
        x-exportParamName: "COUNTERPARTYID"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparty-names/{COUNTERPARTY_NAME}:
    get:
      tags:
      - "Counterparty"
      - "Account"
      summary: "Get Counterparty by name for any account (Explicit) "
      description: "<p>Authentication is Mandatory</p>"
      operationId: "getCounterpartyByNameForAnyAccount"
      parameters:
      - name: "COUNTERPARTY_NAME"
        in: "path"
        description: "the counterparty name"
        required: true
        type: "string"
        x-exportParamName: "COUNTERPARTYNAME"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CounterpartyWithMetadataJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/direct-debit:
    post:
      tags:
      - "Direct-Debit"
      - "Account"
      summary: "Create Direct Debit (management)"
      description: "<p>Create direct debit for an account.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "createDirectDebitManagement"
      parameters:
      - in: "body"
        name: "body"
        description: "PostDirectDebitJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostDirectDebitJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/DirectDebitJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/standing-order:
    post:
      tags:
      - "Standing-Order"
      - "Account"
      summary: "Create Standing Order (management)"
      description: "<p>Create standing order for an account.</p><p>when -&gt; frequency\
        \ = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}<br />when -&gt; detail\
        \ = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}</p><p>Authentication is Mandatory</p>"
      operationId: "createStandingOrderManagement"
      parameters:
      - in: "body"
        name: "body"
        description: "PostStandingOrderJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostStandingOrderJsonV400"
        x-exportParamName: "Body"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/StandingOrderJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/cards:
    get:
      tags:
      - "Card"
      summary: "Get Cards for the specified bank"
      description: "<p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1\
        \ customer_id should be valid customer_id, otherwise, it will return an empty\
        \ card list.</p><p>2 account_id should be valid account_id , otherwise, it\
        \ will return an empty card list.</p><p>Authentication is Mandatory</p>"
      operationId: "getCardsForBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PhysicalCardsJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Card"
      summary: "Create Card"
      description: "<p>Create Card at bank specified by BANK_ID .</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "addCardForBank"
      parameters:
      - in: "body"
        name: "body"
        description: "CreatePhysicalCardJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreatePhysicalCardJsonV500"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/PhysicalCardJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}:
    get:
      tags:
      - "Card"
      summary: "Get Card By Id"
      description: "<p>This will the datails of the card.<br />It shows the account\
        \ infomation which linked the the card.<br />Also shows the card attributes\
        \ of the card.</p><p>Authentication is Mandatory</p>"
      operationId: "getCardForBank"
      parameters:
      - name: "CARD_ID"
        in: "path"
        description: "the card id"
        required: true
        type: "string"
        x-exportParamName: "CARDID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PhysicalCardWithAttributesJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Card"
      summary: "Update Card"
      description: "<p>Update Card at bank specified by CARD_ID .<br />Authentication\
        \ is Mandatory</p>"
      operationId: "updatedCardForBank"
      parameters:
      - in: "body"
        name: "body"
        description: "UpdatePhysicalCardJsonV310 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UpdatePhysicalCardJsonV310"
        x-exportParamName: "Body"
      - name: "CARD_ID"
        in: "path"
        description: "the card id"
        required: true
        type: "string"
        x-exportParamName: "CARDID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PhysicalCardJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Card"
      summary: "Delete Card"
      description: "<p>Delete a Card at bank specified by CARD_ID .</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCardForBank"
      parameters:
      - name: "CARD_ID"
        in: "path"
        description: "the card id"
        required: true
        type: "string"
        x-exportParamName: "CARDID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attribute:
    post:
      tags:
      - "Card"
      summary: "Create Card Attribute"
      description: "<p>Create Card Attribute</p><p>Card Attributes are used to describe\
        \ a financial Product with a list of typed key value pairs.</p><p>Each Card\
        \ Attribute is linked to its Card by CARD_ID</p><p>The type field must be\
        \ one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createCardAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "CardAttributeJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CardAttributeJson"
        x-exportParamName: "Body"
      - name: "CARD_ID"
        in: "path"
        description: "the card id"
        required: true
        type: "string"
        x-exportParamName: "CARDID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/CardAttributeCommons"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attributes/{CARD_ATTRIBUTE_ID}:
    put:
      tags:
      - "Card"
      summary: "Update Card Attribute"
      description: "<p>Update Card Attribute</p><p>Card Attributes are used to describe\
        \ a financial Product with a list of typed key value pairs.</p><p>Each Card\
        \ Attribute is linked to its Card by CARD_ID</p><p>Authentication is Mandatory</p>"
      operationId: "updateCardAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "CardAttributeJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CardAttributeJson"
        x-exportParamName: "Body"
      - name: "CARD_ATTRIBUTE_ID"
        in: "path"
        description: "the card attribute id"
        required: true
        type: "string"
        x-exportParamName: "CARDATTRIBUTEID"
      - name: "CARD_ID"
        in: "path"
        description: "the card id"
        required: true
        type: "string"
        x-exportParamName: "CARDID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CardAttributeCommons"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints:
    get:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: "Get Bank Level Dynamic Endpoints"
      description: "<p>Get Bank Level Dynamic Endpoints.</p><p>Authentication is Mandatory</p>"
      operationId: "getBankLevelDynamicEndpoints"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_3"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: "Create Bank Level Dynamic Endpoint"
      description: "<p>Create dynamic endpoints.</p><p>Create dynamic endpoints with\
        \ one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>,\
        \ then you need link the swagger fields to the dynamic entity fields,<br />please\
        \ check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger\
        \ is <code>obp_mock</code>, every dynamic endpoint will return example response\
        \ of swagger,</p><p>when create MethodRouting for given dynamic endpoint,\
        \ it will be routed to given url.</p><p>Authentication is Mandatory</p>"
      operationId: "createBankLevelDynamicEndpoint"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_201"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID:
    get:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: " Get Bank Level Dynamic Endpoint"
      description: "<p>Get a Bank Level Dynamic Endpoint.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getBankLevelDynamicEndpoint"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_201"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    delete:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: " Delete Bank Level Dynamic Endpoint"
      description: "<p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteBankLevelDynamicEndpoint"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host:
    put:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: " Update Bank Level Dynamic Endpoint Host"
      description: "<p>Update Bank Level  dynamic endpoint Host.<br />The value can\
        \ be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "updateBankLevelDynamicEndpointHost"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEndpointHostJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEndpointHostJson400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEndpointHostJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-entities:
    get:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Get Bank Level Dynamic Entities"
      description: "<p>Get all the bank level Dynamic Entities for one bank.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getBankLevelDynamicEntities"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_4"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Create Bank Level Dynamic Entity"
      description: "<p>Create a Bank Level DynamicEntity.</p><p>Authentication is\
        \ Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding\
        \ POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short)\
        \ endpoints will be generated automatically</p><p>The following field types\
        \ are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY,\
        \ reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference\
        \ types are like foreign keys and composite foreign keys are supported. The\
        \ value you need to supply as the (composite) foreign key is a UUID (or several\
        \ UUIDs in the case of a composite key) that match value in another Entity..<br\
        \ />The following list shows all the possible reference types in the system\
        \ with corresponding examples values so you can see how to construct each\
        \ reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;:\
        \ &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField1&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField2&quot;:\
        \ {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField3&quot;:\
        \ {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField4&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField5&quot;:\
        \ {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField6&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField7&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField8&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField9&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField10&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField11&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField12&quot;:\
        \ {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField13&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField14&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField15&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField16&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField17&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField18&quot;:\
        \ {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField19&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField20&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField21&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField22&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField23&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField24&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField25&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField26&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;:\
        \ &quot;e6a6f108-930a-4df8-8c70-68387180b81f&quot;}&quot;someField27&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\
        \    &quot;example&quot;: &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;branchId=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&quot;}&quot;someField28&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;:\
        \ &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;atmId=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&quot;}&quot;someField29&quot;:\
        \ {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\
        \    &quot;example&quot;: &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;accountId=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&quot;}&quot;someField30&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\
        \    &quot;example&quot;: &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;productCode=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&quot;}&quot;someField31&quot;:\
        \ {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\
        \    &quot;example&quot;: &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;cardId=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&quot;}&quot;someField32&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\
        \    &quot;example&quot;: &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;accountId=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&amp;transactionId=ae582fc1-41e9-49ac-bb84-eace98062292&quot;}&quot;someField33&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\
        \    &quot;example&quot;: &quot;bankId=e6a6f108-930a-4df8-8c70-68387180b81f&amp;accountId=49d57c01-59e8-40b2-b2bd-7acc1b0c3645&amp;counterpartyId=ae582fc1-41e9-49ac-bb84-eace98062292&quot;}</code></pre><p>Note:\
        \ if you set <code>hasPersonalEntity</code> = false, then OBP will not generate\
        \ the CRUD my FooBar endpoints.</p>"
      operationId: "createBankLevelDynamicEntity"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEntityFooBar object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEntityFooBar"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEntityFooBar"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}:
    put:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Update Bank Level Dynamic Entity"
      description: "<p>Update a Bank Level DynamicEntity.</p><p>Authentication is\
        \ Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding\
        \ CRUD endpoints will be changed.</p><p>The following field types are as supported:<br\
        \ />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY\
        \ format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite\
        \ foreign keys are supported. The value you need to supply as the (composite)\
        \ foreign key is a UUID (or several UUIDs in the case of a composite key)\
        \ that match value in another Entity..<br />The following list shows all the\
        \ possible reference types in the system with corresponding examples values\
        \ so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField1&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField2&quot;:\
        \ {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField3&quot;:\
        \ {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField4&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField5&quot;:\
        \ {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField6&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField7&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField8&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField9&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField10&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField11&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField12&quot;:\
        \ {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField13&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField14&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField15&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField16&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField17&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField18&quot;:\
        \ {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField19&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField20&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField21&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField22&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField23&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField24&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField25&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField26&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;:\
        \ &quot;d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&quot;}&quot;someField27&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\
        \    &quot;example&quot;: &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;branchId=3487733b-59c5-467a-a823-23285c5b88ed&quot;}&quot;someField28&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;:\
        \ &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;atmId=3487733b-59c5-467a-a823-23285c5b88ed&quot;}&quot;someField29&quot;:\
        \ {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\
        \    &quot;example&quot;: &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;accountId=3487733b-59c5-467a-a823-23285c5b88ed&quot;}&quot;someField30&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\
        \    &quot;example&quot;: &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;productCode=3487733b-59c5-467a-a823-23285c5b88ed&quot;}&quot;someField31&quot;:\
        \ {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\
        \    &quot;example&quot;: &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;cardId=3487733b-59c5-467a-a823-23285c5b88ed&quot;}&quot;someField32&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\
        \    &quot;example&quot;: &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;accountId=3487733b-59c5-467a-a823-23285c5b88ed&amp;transactionId=c870df43-7938-49d1-8b13-d880105b1c4b&quot;}&quot;someField33&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\
        \    &quot;example&quot;: &quot;bankId=d21c7c48-8ffc-4c3f-8d4d-f4c20432d8bf&amp;accountId=3487733b-59c5-467a-a823-23285c5b88ed&amp;counterpartyId=c870df43-7938-49d1-8b13-d880105b1c4b&quot;}</code></pre>"
      operationId: "updateBankLevelDynamicEntity"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEntityFooBar object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEntityFooBar"
        x-exportParamName: "Body"
      - name: "DYNAMIC_ENTITY_ID"
        in: "path"
        description: "the dynamic entity id "
        required: true
        type: "string"
        x-exportParamName: "DYNAMICENTITYID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEntityFooBar"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    delete:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Delete Bank Level Dynamic Entity"
      description: "<p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteBankLevelDynamicEntity"
      parameters:
      - name: "DYNAMIC_ENTITY_ID"
        in: "path"
        description: "the dynamic entity id "
        required: true
        type: "string"
        x-exportParamName: "DYNAMICENTITYID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs:
    get:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Get all Bank Level Dynamic Message Docs"
      description: "<p>Get all Bank Level Dynamic Message Docs.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAllBankLevelDynamicMessageDocs"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_5"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Create Bank Level Dynamic Message Doc"
      description: "<p>Create a Bank Level Dynamic Message Doc.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createBankLevelDynamicMessageDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicMessageDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicMessageDoc"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicMessageDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID:
    get:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Get Bank Level Dynamic Message Doc"
      description: "<p>Get a Bank Level Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getBankLevelDynamicMessageDoc"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicMessageDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Update Bank Level Dynamic Message Doc"
      description: "<p>Update a Bank Level Dynamic Message Doc.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateBankLevelDynamicMessageDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicMessageDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicMessageDoc"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicMessageDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    delete:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Delete Bank Level Dynamic Message Doc"
      description: "<p>Delete a Bank Level Dynamic Message Doc.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteBankLevelDynamicMessageDoc"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs:
    get:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Get all Bank Level Dynamic Resource Docs"
      description: "<p>Get all Bank Level Dynamic Resource Docs.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAllBankLevelDynamicResourceDocs"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Create Bank Level Dynamic Resource Doc"
      description: "<p>Create a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body\
        \ is URL-encoded format String</p><p>Authentication is Mandatory</p>"
      operationId: "createBankLevelDynamicResourceDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicResourceDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicResourceDoc"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicResourceDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID:
    get:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Get Bank Level Dynamic Resource Doc by Id"
      description: "<p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getBankLevelDynamicResourceDoc"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicResourceDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Update Bank Level Dynamic Resource Doc"
      description: "<p>Update a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body\
        \ is URL-encoded format String</p><p>Authentication is Mandatory</p>"
      operationId: "updateBankLevelDynamicResourceDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicResourceDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicResourceDoc"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicResourceDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    delete:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Delete Bank Level Dynamic Resource Doc"
      description: "<p>Delete a Bank Level Dynamic Resource Doc.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteBankLevelDynamicResourceDoc"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings:
    get:
      tags:
      - "Endpoint-Mapping"
      summary: "Get all Bank Level Endpoint Mappings"
      description: "<p>Get all Bank Level Endpoint Mappings.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getAllBankLevelEndpointMappings"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    post:
      tags:
      - "Endpoint-Mapping"
      summary: "Create Bank Level Endpoint Mapping"
      description: "<p>Create an Bank Level Endpoint Mapping.</p><p>Note: at moment\
        \ only support the dynamic endpoints</p><p>Authentication is Mandatory</p>"
      operationId: "createBankLevelEndpointMapping"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_1"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/body_1"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings/ENDPOINT_MAPPING_ID:
    get:
      tags:
      - "Endpoint-Mapping"
      summary: "Get Bank Level Endpoint Mapping"
      description: "<p>Get an Bank Level Endpoint Mapping by ENDPOINT_MAPPING_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getBankLevelEndpointMapping"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_7_endpointmappings"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    put:
      tags:
      - "Endpoint-Mapping"
      summary: "Update Bank Level Endpoint Mapping"
      description: "<p>Update an Bank Level Endpoint Mapping.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateBankLevelEndpointMapping"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_2"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_7_endpointmappings"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
    delete:
      tags:
      - "Endpoint-Mapping"
      summary: "Delete Bank Level Endpoint Mapping"
      description: "<p>Delete a Bank Level Endpoint Mapping.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteBankLevelEndpointMapping"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags:
    get:
      tags:
      - "API"
      summary: "Get Bank Level Endpoint Tags"
      description: "<p>Get Bank Level Endpoint Tags.</p><p>Authentication is Mandatory</p>"
      operationId: "getBankLevelEndpointTags"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/NotSupportedYet"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "API"
      summary: "Create Bank Level Endpoint Tag"
      description: "<p>Create Bank Level Endpoint Tag</p><p>Note: Resource Docs are\
        \ cached, TTL is 3600 seconds</p><p>Authentication is Mandatory</p>"
      operationId: "createBankLevelEndpointTag"
      parameters:
      - in: "body"
        name: "body"
        description: "EndpointTagJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EndpointTagJson400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BankLevelEndpointTagResponseJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID:
    put:
      tags:
      - "API"
      summary: "Update Bank Level Endpoint Tag"
      description: "<p>Update Endpoint Tag, you can only update the tag_name here,\
        \ operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL\
        \ is 3600 seconds</p><p>Authentication is Mandatory</p>"
      operationId: "updateBankLevelEndpointTag"
      parameters:
      - in: "body"
        name: "body"
        description: "EndpointTagJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EndpointTagJson400"
        x-exportParamName: "Body"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BankLevelEndpointTagResponseJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "API"
      summary: "Delete Bank Level Endpoint Tag"
      description: "<p>Delete Bank Level Endpoint Tag.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteBankLevelEndpointTag"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/banks/{BANK_ID}/fast-firehose/accounts:
    get:
      tags:
      - "Account"
      - "Account-Firehose"
      - "FirehoseData"
      summary: "Get Fast Firehose Accounts at Bank"
      description: "<p>This endpoint allows bulk access to accounts.</p><p>optional\
        \ pagination parameters for filter with accounts</p><p>Possible custom url\
        \ parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value:\
        \ 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getFastFirehoseAccountsAtOneBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FastFirehoseAccountsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorBankNotFound"
  /obp/v5.1.0/management/cascading/banks/{BANK_ID}:
    delete:
      tags:
      - "Bank"
      summary: "Delete Bank Cascade"
      description: "<p>Delete a Bank Cascade specified by BANK_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteBankCascade"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/cascading/banks/{BANK_ID}/accounts/{ACCOUNT_ID}:
    delete:
      tags:
      - "Account"
      summary: "Delete Account Cascade"
      description: "<p>Delete an Account Cascade specified by ACCOUNT_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteAccountCascade"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/cascading/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}:
    delete:
      tags:
      - "Transaction"
      summary: "Delete Transaction Cascade"
      description: "<p>Delete a Transaction Cascade specified by TRANSACTION_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteTransactionCascade"
      parameters:
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/cascading/banks/{BANK_ID}/customers/{CUSTOMER_ID}:
    delete:
      tags:
      - "Customer"
      summary: "Delete Customer Cascade"
      description: "<p>Delete a Customer Cascade specified by CUSTOMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteCustomerCascade"
      parameters:
      - name: "CUSTOMER_ID"
        in: "path"
        description: "The customer id"
        required: true
        type: "string"
        x-exportParamName: "CUSTOMERID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/cascading/banks/{BANK_ID}/products/{PRODUCT_CODE}:
    delete:
      tags:
      - "Product"
      summary: "Delete Product Cascade"
      description: "<p>Delete a Product Cascade specified by PRODUCT_CODE.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteProductCascade"
      parameters:
      - name: "PRODUCT_CODE"
        in: "path"
        description: "the product code"
        required: true
        type: "string"
        x-exportParamName: "PRODUCTCODE"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/connector-methods:
    get:
      tags:
      - "Connector-Method"
      summary: "Get all Connector Methods"
      description: "<p>Get all Connector Methods.</p><p>Authentication is Mandatory</p>"
      operationId: "getAllConnectorMethods"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_8"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Connector-Method"
      summary: "Create Connector Method"
      description: "<p>Create an internal connector.</p><p>The method_body is URL-encoded\
        \ format String</p><p>Authentication is Mandatory</p>"
      operationId: "createConnectorMethod"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonConnectorMethod object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonConnectorMethod"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonConnectorMethod"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/connector-methods/CONNECTOR_METHOD_ID:
    get:
      tags:
      - "Connector-Method"
      summary: "Get Connector Method by Id"
      description: "<p>Get an internal connector by CONNECTOR_METHOD_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConnectorMethod"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonConnectorMethod"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Connector-Method"
      summary: "Update Connector Method"
      description: "<p>Update an internal connector.</p><p>The method_body is URL-encoded\
        \ format String</p><p>Authentication is Mandatory</p>"
      operationId: "updateConnectorMethod"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonConnectorMethodMethodBody object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonConnectorMethodMethodBody"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonConnectorMethod"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/connector/metrics:
    get:
      tags:
      - "Metric"
      - "API"
      summary: "Get Connector Metrics"
      description: "<p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters\
        \ Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should\
        \ be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1\
        \ from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2\
        \ to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3\
        \ limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for\
        \ pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other\
        \ filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name\
        \ (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConnectorMetrics"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConnectorMetricsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidDateFormat"
  /obp/v5.1.0/management/consumers:
    get:
      tags:
      - "Consumer"
      summary: "Get Consumers"
      description: "<p>Get the all Consumers.</p><p>Authentication is Mandatory</p><p>Possible\
        \ custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default\
        \ value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE\
        \ =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is\
        \ one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example\
        \ value: 2024-02-05T14:15:55.293Z. NOTE! The default value is now (2024-02-05T14:15:55.293Z).</li></ul><p>Date\
        \ format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z)\
        \ ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>"
      operationId: "getConsumers"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsumersJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Consumer"
      summary: "Post a Consumer"
      description: "<p>Create a Consumer (Authenticated access).</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createConsumer"
      parameters:
      - in: "body"
        name: "body"
        description: "ConsumerPostJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ConsumerPostJSON"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsumerJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/consumers/{CONSUMER_ID}:
    get:
      tags:
      - "Consumer"
      summary: "Get Consumer"
      description: "<p>Get the Consumer specified by CONSUMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConsumer"
      parameters:
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsumerJsonV210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Consumer"
      summary: "Enable or Disable Consumers"
      description: "<p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "enableDisableConsumers"
      parameters:
      - in: "body"
        name: "body"
        description: "PutEnabledJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PutEnabledJSON"
        x-exportParamName: "Body"
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PutEnabledJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits:
    get:
      tags:
      - "Consumer"
      summary: "Get Call Limits for a Consumer"
      description: "<p>Get Calls limits per Consumer.<br />Authentication is Mandatory</p>"
      operationId: "getCallsLimit"
      parameters:
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CallLimitJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Consumer"
      - "Rate-Limits"
      summary: "Set Rate Limits / Call Limits per Consumer"
      description: "<p>Set the API rate limits / call limits for a Consumer:</p><p>Rate\
        \ limiting can be set:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per\
        \ Week<br />Per Month</p><p>Authentication is Mandatory</p>"
      operationId: "callsLimit"
      parameters:
      - in: "body"
        name: "body"
        description: "CallLimitPostJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CallLimitPostJsonV400"
        x-exportParamName: "Body"
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CallLimitPostJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/redirect_url:
    put:
      tags:
      - "Consumer"
      summary: "Update Consumer RedirectUrl"
      description: "<p>Update an existing redirectUrl for a Consumer specified by\
        \ CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result\
        \ of this action.</p><p>CONSUMER_ID can be obtained after you register the\
        \ application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateConsumerRedirectUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "ConsumerRedirectUrlJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ConsumerRedirectUrlJSON"
        x-exportParamName: "Body"
      - name: "CONSUMER_ID"
        in: "path"
        description: "new consumer id"
        required: true
        type: "string"
        x-exportParamName: "CONSUMERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsumerJsonV210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-endpoints:
    get:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: " Get Dynamic Endpoints"
      description: "<p>Get Dynamic Endpoints.</p><p>Authentication is Mandatory</p>"
      operationId: "getDynamicEndpoints"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_9"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: "Create Dynamic Endpoint"
      description: "<p>Create dynamic endpoints.</p><p>Create dynamic endpoints with\
        \ one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>,\
        \ then you need link the swagger fields to the dynamic entity fields,<br />please\
        \ check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger\
        \ is <code>obp_mock</code>, every dynamic endpoint will return example response\
        \ of swagger,</p><p>when create MethodRouting for given dynamic endpoint,\
        \ it will be routed to given url.</p><p>Authentication is Mandatory</p>"
      operationId: "createDynamicEndpoint"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_3"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_201_1"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID:
    get:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: "Get Dynamic Endpoint"
      description: "<p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getDynamicEndpoint"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_201_1"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: " Delete Dynamic Endpoint"
      description: "<p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteDynamicEndpoint"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host:
    put:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: " Update Dynamic Endpoint Host"
      description: "<p>Update dynamic endpoint Host.<br />The value can be obp_mock,\
        \ dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>"
      operationId: "updateDynamicEndpointHost"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEndpointHostJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEndpointHostJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEndpointHostJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-message-docs:
    get:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Get all Dynamic Message Docs"
      description: "<p>Get all Dynamic Message Docs.</p><p>Authentication is Mandatory</p>"
      operationId: "getAllDynamicMessageDocs"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_5"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Create Dynamic Message Doc"
      description: "<p>Create a Dynamic Message Doc.</p><p>Authentication is Mandatory</p>"
      operationId: "createDynamicMessageDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicMessageDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicMessageDoc"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicMessageDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID:
    get:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Get Dynamic Message Doc"
      description: "<p>Get a Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getDynamicMessageDoc"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicMessageDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Update Dynamic Message Doc"
      description: "<p>Update a Dynamic Message Doc.</p><p>Authentication is Mandatory</p>"
      operationId: "updateDynamicMessageDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicMessageDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicMessageDoc"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicMessageDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Dynamic-Message-Doc"
      summary: "Delete Dynamic Message Doc"
      description: "<p>Delete a Dynamic Message Doc.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteDynamicMessageDoc"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-resource-docs:
    get:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Get all Dynamic Resource Docs"
      description: "<p>Get all Dynamic Resource Docs.</p><p>Authentication is Mandatory</p>"
      operationId: "getAllDynamicResourceDocs"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Create Dynamic Resource Doc"
      description: "<p>Create a Dynamic Resource Doc.</p><p>The connector_method_body\
        \ is URL-encoded format String</p><p>Authentication is Mandatory</p>"
      operationId: "createDynamicResourceDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicResourceDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicResourceDoc"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicResourceDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID:
    get:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Get Dynamic Resource Doc by Id"
      description: "<p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getDynamicResourceDoc"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicResourceDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Update Dynamic Resource Doc"
      description: "<p>Update a Dynamic Resource Doc.</p><p>The connector_method_body\
        \ is URL-encoded format String</p><p>Authentication is Mandatory</p>"
      operationId: "updateDynamicResourceDoc"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonDynamicResourceDoc object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonDynamicResourceDoc"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonDynamicResourceDoc"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Delete Dynamic Resource Doc"
      description: "<p>Delete a Dynamic Resource Doc.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteDynamicResourceDoc"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/dynamic-resource-docs/endpoint-code:
    post:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "Create Dynamic Resource Doc endpoint code"
      description: "<p>Create a Dynamic Resource Doc endpoint code.</p><p>copy the\
        \ response and past to PractiseEndpoint, So you can have the benefits of<br\
        \ />auto compilation and debug</p><p>Authentication is Mandatory</p>"
      operationId: "buildDynamicEndpointTemplate"
      parameters:
      - in: "body"
        name: "body"
        description: "ResourceDocFragment object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ResourceDocFragment"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonCodeTemplateJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/endpoint-mappings:
    get:
      tags:
      - "Endpoint-Mapping"
      summary: "Get all Endpoint Mappings"
      description: "<p>Get all Endpoint Mappings.</p><p>Authentication is Mandatory</p>"
      operationId: "getAllEndpointMappings"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Endpoint-Mapping"
      summary: "Create Endpoint Mapping"
      description: "<p>Create an Endpoint Mapping.</p><p>Note: at moment only support\
        \ the dynamic endpoints</p><p>Authentication is Mandatory</p>"
      operationId: "createEndpointMapping"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_4"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/body_4"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID:
    get:
      tags:
      - "Endpoint-Mapping"
      summary: "Get Endpoint Mapping by Id"
      description: "<p>Get an Endpoint Mapping by ENDPOINT_MAPPING_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getEndpointMapping"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_7_endpointmappings"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Endpoint-Mapping"
      summary: "Update Endpoint Mapping"
      description: "<p>Update an Endpoint Mapping.</p><p>Authentication is Mandatory</p>"
      operationId: "updateEndpointMapping"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_5"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_7_endpointmappings"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Endpoint-Mapping"
      summary: "Delete Endpoint Mapping"
      description: "<p>Delete a Endpoint Mapping.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteEndpointMapping"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/endpoints/OPERATION_ID/tags:
    get:
      tags:
      - "API"
      summary: "Get System Level Endpoint Tags"
      description: "<p>Get System Level Endpoint Tags.</p><p>Authentication is Mandatory</p>"
      operationId: "getSystemLevelEndpointTags"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/NotSupportedYet"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "API"
      summary: "Create System Level Endpoint Tag"
      description: "<p>Create System Level Endpoint Tag</p><p>Note: Resource Docs\
        \ are cached, TTL is 3600 seconds</p><p>Authentication is Mandatory</p>"
      operationId: "createSystemLevelEndpointTag"
      parameters:
      - in: "body"
        name: "body"
        description: "EndpointTagJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EndpointTagJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BankLevelEndpointTagResponseJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID:
    put:
      tags:
      - "API"
      summary: "Update System Level Endpoint Tag"
      description: "<p>Update System Level Endpoint Tag, you can only update the tag_name\
        \ here, operation_id can not be updated.</p><p>Note: Resource Docs are cached,\
        \ TTL is 3600 seconds</p><p>Authentication is Mandatory</p>"
      operationId: "updateSystemLevelEndpointTag"
      parameters:
      - in: "body"
        name: "body"
        description: "EndpointTagJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EndpointTagJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BankLevelEndpointTagResponseJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "API"
      summary: "Delete System Level Endpoint Tag"
      description: "<p>Delete System Level Endpoint Tag.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteSystemLevelEndpointTag"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  '/obp/v5.1.0/management/historical/transactions ':
    post:
      tags:
      - "Transaction-Request"
      summary: "Save Historical Transactions "
      description: "<p>Import the historical transactions.</p><p>The fields bank_id,\
        \ account_id, counterparty_id in the json body are all optional ones.<br />It\
        \ support transfer money from account to account, account to counterparty\
        \ and counterparty to counterparty<br />Both bank_id + account_id and counterparty_id\
        \ can identify the account, so OBP only need one of them to make the payment.<br\
        \ />So:<br />When you need the account to account, just omit counterparty_id\
        \ field.eg:<br />{<br />&quot;from&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br\
        \ />&quot;account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />},<br />&quot;to&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br\
        \ />&quot;account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br\
        \ />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;:\
        \ &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br\
        \ />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;:\
        \ &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br\
        \ />}</p><p>When you need the counterparty to counterparty, need to omit bank_id\
        \ and account_id field.eg:<br />{<br />&quot;from&quot;: {<br />&quot;counterparty_id&quot;:\
        \ &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;to&quot;:\
        \ {<br />&quot;counterparty_id&quot;: &quot;26392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br\
        \ />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br\
        \ />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;:\
        \ &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br\
        \ />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;:\
        \ &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br\
        \ />}</p><p>or, you can counterparty to account<br />{<br />&quot;from&quot;:\
        \ {<br />&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br\
        \ />},<br />&quot;to&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br\
        \ />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br\
        \ />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br\
        \ />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;:\
        \ &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br\
        \ />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;:\
        \ &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br\
        \ />}</p><p>This call is experimental.</p><p>Authentication is Mandatory</p>"
      operationId: "saveHistoricalTransaction"
      parameters:
      - in: "body"
        name: "body"
        description: "PostHistoricalTransactionJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostHistoricalTransactionJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/PostHistoricalTransactionResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
  /obp/v5.1.0/management/json-schema-validations:
    get:
      tags:
      - "JSON-Schema-Validation"
      summary: "Get all JSON Schema Validations"
      description: "<p>Get all JSON Schema Validations.</p><p>Authentication is Mandatory</p>"
      operationId: "getAllJsonSchemaValidations"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/json-schema-validations/OPERATION_ID:
    get:
      tags:
      - "JSON-Schema-Validation"
      summary: "Get a JSON Schema Validation"
      description: "<p>Get a JSON Schema Validation by operation_id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getJsonSchemaValidation"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonValidationV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    post:
      tags:
      - "JSON-Schema-Validation"
      summary: "Create a JSON Schema Validation"
      description: "<p>Create a JSON Schema Validation.</p><p>Introduction:</p>  <p>JSON\
        \ Schema is &quot;a vocabulary that allows you to annotate and validate JSON\
        \ documents&quot;.</p><p>By applying JSON Schema Validation to your OBP endpoints\
        \ you can constrain POST and PUT request bodies. For example, you can set\
        \ minimum / maximum lengths of fields and constrain values to certain lists\
        \ or regular expressions.</p><p>See <a href=\"https://json-schema.org/\">JSONSchema.org</a>\
        \ for more information about the JSON Schema standard.</p><p>To create a JSON\
        \ Schema from an any JSON Request body you can use <a href=\"https://jsonschema.net/app/schemas/0\"\
        >JSON Schema Net</a></p><p>(The video link below shows how to use that)</p><p>Note:\
        \ OBP Dynamic Entities also use JSON Schema Validation so you don't need to\
        \ additionally wrap the resulting endpoints with extra JSON Schema Validation\
        \ but you could do.</p><p>You can apply JSON schema validations to any OBP\
        \ endpoint's request body using the POST and PUT endpoints listed in the link\
        \ below.</p><p>PLEASE SEE the following video explanation: <a href=\"https://vimeo.com/485287014\"\
        >JSON schema validation of request for Static and Dynamic Endpoints and Entities</a></p><p>To\
        \ use this endpoint, please supply a valid json-schema in the request body.</p><p>Note:\
        \ It might take a few minutes for the newly created JSON Schema to take effect!</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createJsonSchemaValidation"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonSchemaV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonSchemaV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonValidationV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "JSON-Schema-Validation"
      summary: "Update a JSON Schema Validation"
      description: "<p>Update a JSON Schema Validation.</p><p>Introduction:</p>  <p>JSON\
        \ Schema is &quot;a vocabulary that allows you to annotate and validate JSON\
        \ documents&quot;.</p><p>By applying JSON Schema Validation to your OBP endpoints\
        \ you can constrain POST and PUT request bodies. For example, you can set\
        \ minimum / maximum lengths of fields and constrain values to certain lists\
        \ or regular expressions.</p><p>See <a href=\"https://json-schema.org/\">JSONSchema.org</a>\
        \ for more information about the JSON Schema standard.</p><p>To create a JSON\
        \ Schema from an any JSON Request body you can use <a href=\"https://jsonschema.net/app/schemas/0\"\
        >JSON Schema Net</a></p><p>(The video link below shows how to use that)</p><p>Note:\
        \ OBP Dynamic Entities also use JSON Schema Validation so you don't need to\
        \ additionally wrap the resulting endpoints with extra JSON Schema Validation\
        \ but you could do.</p><p>You can apply JSON schema validations to any OBP\
        \ endpoint's request body using the POST and PUT endpoints listed in the link\
        \ below.</p><p>PLEASE SEE the following video explanation: <a href=\"https://vimeo.com/485287014\"\
        >JSON schema validation of request for Static and Dynamic Endpoints and Entities</a></p><p>To\
        \ use this endpoint, please supply a valid json-schema in the request body.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateJsonSchemaValidation"
      parameters:
      - in: "body"
        name: "body"
        description: "JsonSchemaV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/JsonSchemaV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/JsonValidationV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "JSON-Schema-Validation"
      summary: "Delete a JSON Schema Validation"
      description: "<p>Delete a JSON Schema Validation by operation_id.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteJsonSchemaValidation"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            type: "boolean"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/method_routings:
    get:
      tags:
      - "Method-Routing"
      - "API"
      summary: "Get MethodRoutings"
      description: "<p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name:\
        \ filter with method_name</li><li>active: if active = true, it will show all\
        \ the webui_ props. Even if they are set yet, we will return all the default\
        \ webui_ props</li></ul><p>eg:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMethodRoutings"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_10"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Method-Routing"
      - "API"
      summary: "Create MethodRouting"
      description: "<p>Create a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explanation\
        \ of Fields:</p><ul><li>method_name is required String value, current supported\
        \ value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required\
        \ String value</li><li>is_bank_id_exact_match is required boolean value, if\
        \ bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern\
        \ is null or a regex, this value is false</li><li>bank_id_pattern is optional\
        \ String value, it can be null, a exact bank_id or a regex</li><li>parameters\
        \ is optional array of key value pairs. You can set some parameters for this\
        \ method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be\
        \ empty for methods that do not take bank_id as a function parameter, otherwise\
        \ might get empty result</li><li>methods that aggregate bank objects (e.g.\
        \ getBankAccountsForUser) have to take any  existing method routings for these\
        \ objects into consideration</li><li>so if you create e.g. a bank specific\
        \ method routing for getting an account, make sure that it is also served\
        \ by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern\
        \ is regex, special characters need to do escape, for example: bank_id_pattern\
        \ = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts\
        \ with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;,\
        \ convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping\
        \ example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\"\
        \ alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br\
        \ />1 set cId value with: outboundAdapterCallContext.correlationId value<br\
        \ />2 set bankId value with: concat bankId.value value with  string helloworld<br\
        \ />3 set originalJson value with: whole source json, note: the field value\
        \ expression is $root</p><p>inBoundMapping example, convert json from source\
        \ to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\"\
        \ alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and\
        \ 2 set inboundAdapterCallContext and status value: because field name ends\
        \ with &quot;$default&quot;, remove &quot;$default&quot; from field name,\
        \ not change the value<br />3 set fullName value with: concat string full:\
        \ with result.name value<br />4 set bankRoutingScheme value: because source\
        \ value is Array, but target value is not Array, the mapping field name must\
        \ ends with [0].</p>"
      operationId: "createMethodRouting"
      parameters:
      - in: "body"
        name: "body"
        description: "MethodRoutingCommons object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/MethodRoutingCommons"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/MethodRoutingCommons"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/method_routings/{METHOD_ROUTING_ID}:
    put:
      tags:
      - "Method-Routing"
      - "API"
      summary: "Update MethodRouting"
      description: "<p>Update a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explaination\
        \ of Fields:</p><ul><li>method_name is required String value, current supported\
        \ value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required\
        \ String value</li><li>is_bank_id_exact_match is required boolean value, if\
        \ bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern\
        \ is null or a regex, this value is false</li><li>bank_id_pattern is optional\
        \ String value, it can be null, a exact bank_id or a regex</li><li>parameters\
        \ is optional array of key value pairs. You can set some paremeters for this\
        \ method<br />note:</li><li><p>if bank_id_pattern is regex, special characters\
        \ need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\\
        d+&quot;</p></li></ul><p>If connector name start with rest, parameters can\
        \ contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert\
        \ OutBound and InBound json structure.<br />for example:<br />outBoundMapping\
        \ example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\"\
        \ alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br\
        \ />1 set cId value with: outboundAdapterCallContext.correlationId value<br\
        \ />2 set bankId value with: concat bankId.value value with  string helloworld<br\
        \ />3 set originalJson value with: whole source json, note: the field value\
        \ expression is $root</p><p>inBoundMapping example, convert json from source\
        \ to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\"\
        \ alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and\
        \ 2 set inboundAdapterCallContext and status value: because field name ends\
        \ with &quot;$default&quot;, remove &quot;$default&quot; from field name,\
        \ not change the value<br />3 set fullName value with: concat string full:\
        \ with result.name value<br />4 set bankRoutingScheme value: because source\
        \ value is Array, but target value is not Array, the mapping field name must\
        \ ends with [0].</p>"
      operationId: "updateMethodRouting"
      parameters:
      - in: "body"
        name: "body"
        description: "MethodRoutingCommons object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/MethodRoutingCommons"
        x-exportParamName: "Body"
      - name: "METHOD_ROUTING_ID"
        in: "path"
        description: "the method routing id "
        required: true
        type: "string"
        x-exportParamName: "METHODROUTINGID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MethodRoutingCommons"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Method-Routing"
      - "API"
      summary: "Delete MethodRouting"
      description: "<p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteMethodRouting"
      parameters:
      - name: "METHOD_ROUTING_ID"
        in: "path"
        description: "the method routing id "
        required: true
        type: "string"
        x-exportParamName: "METHODROUTINGID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/metrics:
    get:
      tags:
      - "Metric"
      - "API"
      summary: "Get Metrics"
      description: "<p>Get API metrics rows. These are records of each REST API call.</p><p>require\
        \ CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards\
        \ etc.) parameters to GET /management/metrics</p><p>You can filter by the\
        \ following fields by applying url parameters</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1\
        \ from_date e.g.:from_date=1100-01-01T01:01:01.000Z Defaults to the Unix Epoch\
        \ i.e. Thu Jan 01 00:00:00 UTC 1970</p><p>2 to_date e.g.:to_date=1100-01-01T01:01:01.000Z\
        \ Defaults to a far future date i.e. Sat Jan 01 00:00:00 UTC 4000</p><p>Note:\
        \ it is recommended you send a valid from_date (e.g. 5 seconds ago) and to_date\
        \ (now + 1 second) if you want to get the latest records<br />Otherwise you\
        \ may receive stale cached results.</p><p>3 limit (for pagination: defaults\
        \ to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults\
        \ to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br\
        \ />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br\
        \ />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br\
        \ />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6\
        \ direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a\
        \ href=\"&#x6d;a&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x30;1&#x2e;&#x30;&#48;&#x30;Z&#38;&#108;&#105;&#109;&#x69;&#116;&#61;&#x31;&#x30;&#x30;0&#x30;&#38;&#111;&#102;&#102;&#x73;&#101;t&#x3d;&#x30;&amp;a&#x6e;&#x6f;n&#x3d;&#x66;a&#108;&#115;&#101;&#38;&#97;&#x70;&#112;&#95;&#110;&#97;&#109;&#x65;&#61;&#x54;&#101;&#97;&#116;A&#x70;&#x70;&#38;&#x69;&#x6d;&#112;&#108;&#x65;&#x6d;en&#x74;&#x65;d&#x5f;&#105;&#x6e;_&#118;&#101;&#114;&#x73;&#105;&#111;n&#x3d;&#x76;2&#46;&#49;.&#48;&amp;&#118;&#x65;&#114;&#x62;&#61;&#x50;&#79;&#83;&#84;&#x26;&#x75;&#115;e&#x72;&#95;&#x69;&#x64;&#x3d;&#99;&#x37;&#98;&#54;&#99;&#x62;&#52;7&#x2d;&#99;&#x62;&#x39;&#x36;&#x2d;4&#x34;&#52;1&#45;&#56;&#x38;&#48;1&#x2d;&#x33;&#53;&#x62;&#53;&#x37;45&#x36;&#55;&#x35;&#51;a&#x26;&#117;&#x73;&#x65;&#114;&#x5f;n&#97;&#109;e&#61;&#x73;u&#x73;&#97;n&#x2e;&#x75;&#107;&#46;&#x32;&#x39;&#x40;e&#120;&#97;&#109;p&#x6c;&#101;&#x2e;&#99;&#111;&#x6d;\"\
        >&#x30;&#49;&#46;&#x30;&#48;&#48;&#x5a;&#38;&#108;&#x69;m&#105;&#116;=&#x31;0&#48;&#48;&#x30;&#x26;&#111;&#102;&#x66;&#115;&#x65;&#x74;&#x3d;&#x30;&#38;&#97;&#x6e;&#x6f;n&#x3d;&#102;&#97;&#x6c;&#115;&#101;&amp;&#97;&#x70;&#112;&#x5f;&#110;&#x61;m&#x65;&#x3d;&#84;&#x65;&#x61;&#x74;&#65;&#x70;&#x70;&#38;&#x69;&#109;p&#108;e&#x6d;&#x65;&#x6e;&#116;&#101;&#100;&#95;&#105;&#110;_&#118;&#x65;&#114;&#x73;&#x69;o&#x6e;&#x3d;&#x76;&#50;.&#x31;&#x2e;&#48;&#x26;&#x76;&#101;&#114;&#x62;&#x3d;&#80;&#79;&#83;T&#x26;&#117;&#x73;e&#x72;&#x5f;&#105;&#100;&#61;&#99;&#x37;&#98;&#x36;&#99;&#x62;&#52;7&#x2d;&#99;&#98;9&#x36;&#x2d;&#x34;&#52;&#52;1&#45;&#x38;80&#49;&#x2d;&#51;&#x35;&#98;&#x35;7&#52;&#53;&#x36;&#x37;&#53;&#x33;&#97;&amp;&#117;&#x73;e&#114;&#x5f;&#x6e;a&#x6d;&#x65;=&#115;&#117;&#x73;&#97;&#x6e;&#x2e;&#117;&#x6b;&#46;2&#57;&#x40;&#101;&#120;&#x61;m&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a>&amp;consumer_id=78</p><p>Other\
        \ filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null\
        \ ignore)</p><p>9 anon (if null ignore) only support two value : true (return\
        \ where user_id is null.) or false (return where user_id is not null.)</p><p>10\
        \ url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if\
        \ null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13\
        \ implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15\
        \ correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit\
        \ chars will be silently omitted</p><p>Authentication is Mandatory</p>"
      operationId: "getMetrics"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MetricsJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/metrics/banks/{BANK_ID}:
    get:
      tags:
      - "Metric"
      - "API"
      summary: "Get Metrics at Bank"
      description: "<p>Get the all metrics at the Bank specified by BANK_ID</p><p>require\
        \ CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards\
        \ etc.) parameters to GET /management/metrics</p><p>Should be able to filter\
        \ on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1\
        \ from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2\
        \ to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3\
        \ limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for\
        \ pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults\
        \ to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br\
        \ />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br\
        \ />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br\
        \ />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6\
        \ direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a\
        \ href=\"&#109;&#x61;&#x69;lt&#111;&#58;&#x30;&#x31;&#46;&#48;0&#x30;&#90;&#38;&#108;&#x69;&#109;&#x69;&#x74;=&#x31;0&#x30;&#x30;&#x30;&amp;&#x6f;&#102;fset=&#48;&#x26;&#x61;&#x6e;&#111;&#x6e;&#x3d;&#102;a&#x6c;se&#38;&#97;&#x70;&#x70;&#95;&#110;&#x61;&#x6d;&#x65;=&#84;&#101;a&#x74;&#65;&#x70;&#x70;&#38;&#x69;&#109;pl&#101;&#x6d;&#x65;&#110;&#116;&#x65;&#100;&#x5f;&#x69;&#x6e;&#95;ve&#x72;s&#105;&#x6f;&#110;&#61;&#x76;&#50;&#46;&#x31;&#x2e;0&#x26;v&#101;&#x72;&#x62;&#x3d;&#x50;&#79;&#x53;&#x54;&amp;&#117;&#x73;&#101;&#114;&#x5f;&#x69;&#x64;&#61;&#x63;&#x37;b&#54;c&#98;&#x34;&#55;&#45;&#x63;&#x62;&#x39;&#54;&#45;&#52;&#x34;&#x34;&#x31;&#45;&#x38;&#56;0&#49;-35&#98;&#53;&#55;&#x34;&#x35;&#x36;7&#x35;&#51;&#97;&#x26;&#x75;&#115;e&#114;&#x5f;&#110;a&#x6d;&#101;&#x3d;&#x73;&#117;&#x73;&#97;&#110;.uk&#x2e;2&#x39;&#64;ex&#97;&#109;&#112;l&#101;&#x2e;&#x63;&#x6f;&#109;\"\
        >&#48;&#x31;&#x2e;&#48;&#x30;0&#90;&#x26;l&#x69;&#x6d;&#105;&#116;&#61;&#x31;&#48;&#x30;&#x30;&#x30;&#38;&#111;&#x66;&#102;s&#101;&#116;&#x3d;&#48;&#x26;&#x61;&#110;o&#110;&#61;fal&#x73;&#x65;&#x26;&#97;&#112;&#x70;&#95;&#x6e;&#97;&#x6d;&#101;=&#x54;&#x65;&#x61;&#116;&#65;&#x70;&#112;&#x26;&#x69;&#109;&#x70;&#x6c;&#101;&#x6d;&#x65;&#x6e;&#116;&#x65;&#100;&#95;&#105;&#x6e;&#x5f;&#118;&#101;&#x72;&#115;&#105;o&#x6e;=&#x76;2&#x2e;&#x31;.&#48;&#x26;&#118;e&#x72;&#98;&#x3d;&#x50;&#79;&#83;T&#x26;&#x75;&#115;&#101;&#x72;&#95;&#x69;&#100;=&#x63;7&#x62;&#x36;cb&#x34;7&#45;c&#98;&#57;&#54;&#x2d;&#x34;&#x34;&#52;&#49;-&#56;8&#x30;&#x31;&#x2d;3&#53;&#x62;57&#52;&#x35;&#54;&#x37;&#53;3&#97;&#38;&#117;&#x73;&#x65;r&#x5f;n&#97;m&#x65;&#61;&#x73;u&#x73;&#x61;&#110;&#46;&#x75;&#107;&#46;&#x32;9&#x40;&#101;x&#97;&#109;&#x70;&#x6c;&#101;&#46;c&#x6f;&#x6d;</a>&amp;consumer_id=78</p><p>Other\
        \ filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null\
        \ ignore)</p><p>9 anon (if null ignore) only support two value : true (return\
        \ where user_id is null.) or false (return where user_id is not null.)</p><p>10\
        \ url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if\
        \ null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13\
        \ implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15\
        \ correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit\
        \ chars will be silently omitted</p><p>Authentication is Mandatory</p>"
      operationId: "getMetricsAtBank"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MetricsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/metrics/top-apis:
    get:
      tags:
      - "Metric"
      summary: "Get Top APIs"
      description: "<p>Get metrics about the most popular APIs. e.g.: total count,\
        \ response time (in ms), etc.</p><p>Should be able to filter on the following\
        \ fields</p><p>eg: /management/metrics/top-apis?from_date=1970-01-01T00:00:00.000Z&amp;to_date=2024-02-05T14:15:55.280Z&amp;consumer_id=5<br\
        \ />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br\
        \ />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br\
        \ />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1\
        \ from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z</p><p>2\
        \ to_date (defaults to the current date) eg:to_date=2024-02-05T14:15:55.280Z</p><p>3\
        \ consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon\
        \ (if null ignore) only support two value : true (return where user_id is\
        \ null.) or false (return where user_id is not null.)</p><p>6 url (if null\
        \ ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8\
        \ implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version\
        \ (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id\
        \ (if null ignore)</p><p>12 duration (if null ignore) non digit chars will\
        \ be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14\
        \ exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE\
        \ pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15\
        \ exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getTopAPIs"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TopApisJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/metrics/top-consumers:
    get:
      tags:
      - "Metric"
      summary: "Get Top Consumers"
      description: "<p>Get metrics about the top consumers of the API usage e.g. total\
        \ count, consumer_id and app_name.</p><p>Should be able to filter on the following\
        \ fields</p><p>e.g.: /management/metrics/top-consumers?from_date=1970-01-01T00:00:00.000Z&amp;to_date=2024-02-05T14:15:55.281Z&amp;consumer_id=5<br\
        \ />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br\
        \ />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br\
        \ />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null<br\
        \ />&amp;limit=100</p><p>1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z</p><p>2\
        \ to_date (defaults to the current date) eg:to_date=2024-02-05T14:15:55.282Z</p><p>3\
        \ consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon\
        \ (if null ignore) only support two value : true (return where user_id is\
        \ null.) or false (return where user_id is not null.)</p><p>6 url (if null\
        \ ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8\
        \ implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version\
        \ (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id\
        \ (if null ignore)</p><p>12 duration (if null ignore) non digit chars will\
        \ be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14\
        \ exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE\
        \ pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15\
        \ exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>16\
        \ limit (for pagination: defaults to 50)  eg:limit=200</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMetricsTopConsumers"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TopConsumersJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system-dynamic-entities:
    get:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Get System Dynamic Entities"
      description: "<p>Get all System Dynamic Entities</p><p>Authentication is Mandatory</p>"
      operationId: "getSystemDynamicEntities"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_4"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Create System Level Dynamic Entity"
      description: "<p>Create a system level Dynamic Entity.</p><p>Authentication\
        \ is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the\
        \ corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or\
        \ CRUD for short) endpoints will be generated automatically</p><p>The following\
        \ field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY,\
        \ reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference\
        \ types are like foreign keys and composite foreign keys are supported. The\
        \ value you need to supply as the (composite) foreign key is a UUID (or several\
        \ UUIDs in the case of a composite key) that match value in another Entity..<br\
        \ />See the following list of currently available reference types and examples\
        \ of how to construct key values correctly. Note: As more Dynamic Entities\
        \ are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField1&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField2&quot;:\
        \ {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField3&quot;:\
        \ {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField4&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField5&quot;:\
        \ {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField6&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField7&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField8&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField9&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField10&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField11&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField12&quot;:\
        \ {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField13&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField14&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField15&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField16&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField17&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField18&quot;:\
        \ {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField19&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField20&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField21&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField22&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField23&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField24&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField25&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField26&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;:\
        \ &quot;7b95a2c4-0663-49b6-a8a3-59f1221f2933&quot;}&quot;someField27&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\
        \    &quot;example&quot;: &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;branchId=44f26efa-35c9-45b2-8951-b78d5638714d&quot;}&quot;someField28&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;:\
        \ &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;atmId=44f26efa-35c9-45b2-8951-b78d5638714d&quot;}&quot;someField29&quot;:\
        \ {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\
        \    &quot;example&quot;: &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;accountId=44f26efa-35c9-45b2-8951-b78d5638714d&quot;}&quot;someField30&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\
        \    &quot;example&quot;: &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;productCode=44f26efa-35c9-45b2-8951-b78d5638714d&quot;}&quot;someField31&quot;:\
        \ {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\
        \    &quot;example&quot;: &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;cardId=44f26efa-35c9-45b2-8951-b78d5638714d&quot;}&quot;someField32&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\
        \    &quot;example&quot;: &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;accountId=44f26efa-35c9-45b2-8951-b78d5638714d&amp;transactionId=11f9c7eb-5307-4536-8279-bc9c8f1ee94d&quot;}&quot;someField33&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\
        \    &quot;example&quot;: &quot;bankId=7b95a2c4-0663-49b6-a8a3-59f1221f2933&amp;accountId=44f26efa-35c9-45b2-8951-b78d5638714d&amp;counterpartyId=11f9c7eb-5307-4536-8279-bc9c8f1ee94d&quot;}</code></pre><p>Note:\
        \ if you set <code>hasPersonalEntity</code> = false, then OBP will not generate\
        \ the CRUD my FooBar endpoints.</p>"
      operationId: "createSystemDynamicEntity"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEntityFooBar object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEntityFooBar"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEntityFooBar"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}:
    put:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Update System Level Dynamic Entity"
      description: "<p>Update a System Level Dynamic Entity.</p><p>Authentication\
        \ is Mandatory</p><p>Update one DynamicEntity, after update finished, the\
        \ corresponding CRUD endpoints will be changed.</p><p>The following field\
        \ types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY,\
        \ reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types\
        \ are like foreign keys and composite foreign keys are supported. The value\
        \ you need to supply as the (composite) foreign key is a UUID (or several\
        \ UUIDs in the case of a composite key) that match value in another Entity..<br\
        \ />The following list shows all the possible reference types in the system\
        \ with corresponding examples values so you can see how to construct each\
        \ reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;:\
        \ &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField1&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField2&quot;:\
        \ {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField3&quot;:\
        \ {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField4&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField5&quot;:\
        \ {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField6&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField7&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField8&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField9&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField10&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField11&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField12&quot;:\
        \ {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField13&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField14&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField15&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField16&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField17&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField18&quot;:\
        \ {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField19&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField20&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField21&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField22&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField23&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField24&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField25&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField26&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;:\
        \ &quot;05e6621b-e445-41fa-b140-699e106aa72a&quot;}&quot;someField27&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\
        \    &quot;example&quot;: &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;branchId=0bcccc1a-68de-4a4c-9082-396f28a65142&quot;}&quot;someField28&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;:\
        \ &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;atmId=0bcccc1a-68de-4a4c-9082-396f28a65142&quot;}&quot;someField29&quot;:\
        \ {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\
        \    &quot;example&quot;: &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;accountId=0bcccc1a-68de-4a4c-9082-396f28a65142&quot;}&quot;someField30&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\
        \    &quot;example&quot;: &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;productCode=0bcccc1a-68de-4a4c-9082-396f28a65142&quot;}&quot;someField31&quot;:\
        \ {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\
        \    &quot;example&quot;: &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;cardId=0bcccc1a-68de-4a4c-9082-396f28a65142&quot;}&quot;someField32&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\
        \    &quot;example&quot;: &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;accountId=0bcccc1a-68de-4a4c-9082-396f28a65142&amp;transactionId=f83b7548-74c0-4bc7-9f2c-bb195290bf78&quot;}&quot;someField33&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\
        \    &quot;example&quot;: &quot;bankId=05e6621b-e445-41fa-b140-699e106aa72a&amp;accountId=0bcccc1a-68de-4a4c-9082-396f28a65142&amp;counterpartyId=f83b7548-74c0-4bc7-9f2c-bb195290bf78&quot;}</code></pre>"
      operationId: "updateSystemDynamicEntity"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEntityFooBar object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEntityFooBar"
        x-exportParamName: "Body"
      - name: "DYNAMIC_ENTITY_ID"
        in: "path"
        description: "the dynamic entity id "
        required: true
        type: "string"
        x-exportParamName: "DYNAMICENTITYID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEntityFooBar"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Delete System Level Dynamic Entity"
      description: "<p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteSystemDynamicEntity"
      parameters:
      - name: "DYNAMIC_ENTITY_ID"
        in: "path"
        description: "the dynamic entity id "
        required: true
        type: "string"
        x-exportParamName: "DYNAMICENTITYID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system/integrity/account-access-unique-index-1-check:
    get:
      tags:
      - "System-Integrity"
      summary: "Check Unique Index at Account Access"
      description: "<p>Check unique index at account access table.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "accountAccessUniqueIndexCheck"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckSystemIntegrityJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system/integrity/banks/{BANK_ID}/account-currency-check:
    get:
      tags:
      - "System-Integrity"
      summary: "Check for Sensible Currencies"
      description: "<p>Check for sensible currencies at Bank Account model</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "accountCurrencyCheck"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckSystemIntegrityJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system/integrity/banks/{BANK_ID}/orphaned-account-check:
    get:
      tags:
      - "System-Integrity"
      summary: "Check for Orphaned Accounts"
      description: "<p>Check for orphaned accounts at Bank Account model</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "orphanedAccountCheck"
      parameters:
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckSystemIntegrityJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system/integrity/custom-view-names-check:
    get:
      tags:
      - "System-Integrity"
      summary: "Check Custom View Names"
      description: "<p>Check custom view names.</p><p>Authentication is Mandatory</p>"
      operationId: "customViewNamesCheck"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckSystemIntegrityJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/system/integrity/system-view-names-check:
    get:
      tags:
      - "System-Integrity"
      summary: "Check System View Names"
      description: "<p>Check system view names.</p><p>Authentication is Mandatory</p>"
      operationId: "systemViewNamesCheck"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CheckSystemIntegrityJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/user/reset-password-url:
    post:
      tags:
      - "User"
      summary: "Create password reset url"
      description: "<p>Create password reset url.</p><p>Authentication is Mandatory</p>"
      operationId: "resetPasswordUrl"
      parameters:
      - in: "body"
        name: "body"
        description: "PostResetPasswordUrlJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostResetPasswordUrlJsonV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ResetPasswordUrlJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/users/current/consumers:
    get:
      tags:
      - "Consumer"
      summary: "Get Consumers (logged in User)"
      description: "<p>Get the Consumers for logged in User.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getConsumersForCurrentUser"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsumersJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/webui_props:
    get:
      tags:
      - "WebUi-Props"
      summary: "Get WebUiProps"
      description: "<p>Get the all WebUiProps key values, those props key with &quot;webui_&quot;\
        \ can be stored in DB, this endpoint get all from DB.</p><p>url query parameter:<br\
        \ />active: It must be a boolean string. and If active = true, it will show<br\
        \ />combination of explicit (inserted) + implicit (default)  method_routings.</p><p>eg:<br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/webui_props\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/management/webui_props</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/management/webui_props?active=true\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/management/webui_props?active=true</a></p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getWebUiProps"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_11"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "WebUi-Props"
      summary: "Create WebUiProps"
      description: "<p>Create a WebUiProps.</p><p>Authentication is Mandatory</p><p>Explaination\
        \ of Fields:</p><ul><li>name is required String value</li><li>value is required\
        \ String value</li></ul><p>The line break and double quotations should do\
        \ escape, example:</p><pre><code>{&quot;name&quot;: &quot;webui_some&quot;,\
        \ &quot;value&quot;: &quot;this valuehave &quot;line break&quot; and double\
        \ quotations.&quot;}</code></pre><p>should do escape like this:</p><pre><code>{&quot;name&quot;:\
        \ &quot;webui_some&quot;, &quot;value&quot;: &quot;this value\\nhave \\&quot;line\
        \ break\\&quot; and double quotations.&quot;}</code></pre><p>Insert image\
        \ examples:</p><pre><code>// set width=100 and height=50{&quot;name&quot;:\
        \ &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img\
        \ alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot;\
        \ width=&quot;100&quot; height=&quot;50&quot; /&gt;&quot;}// only set height=50{&quot;name&quot;:\
        \ &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img\
        \ alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot;\
        \ width=&quot;&quot; height=&quot;50&quot; /&gt;&quot;}// only width=20%{&quot;name&quot;:\
        \ &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img\
        \ alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot;\
        \ width=&quot;20%&quot; height=&quot;&quot; /&gt;&quot;}</code></pre>"
      operationId: "createWebUiProps"
      parameters:
      - in: "body"
        name: "body"
        description: "WebUiPropsCommons object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/WebUiPropsCommons"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/WebUiPropsCommons"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/management/webui_props/{WEB_UI_PROPS_ID}:
    delete:
      tags:
      - "WebUi-Props"
      summary: "Delete WebUiProps"
      description: "<p>Delete a WebUiProps specified by WEB_UI_PROPS_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteWebUiProps"
      parameters:
      - name: "WEB_UI_PROPS_ID"
        in: "path"
        description: "the web ui props id"
        required: true
        type: "string"
        x-exportParamName: "WEBUIPROPSID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/message-docs/CONNECTOR:
    get:
      tags:
      - "Documentation"
      - "API"
      summary: "Get Message Docs"
      description: "<p>These message docs provide example messages sent by OBP to\
        \ the (Kafka) message queue for processing by the Core Banking / Payment system\
        \ Adapter - together with an example expected response and possible error\
        \ codes.<br />Integrators can use these messages to build Adapters that provide\
        \ core banking services to OBP.</p><p>Note: API Explorer provides a Message\
        \ Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>:\
        \ kafka_vSept2018, stored_procedure_vDec2019 ...</p><p>Authentication is Optional</p>"
      operationId: "getMessageDocs"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MessageDocsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/message-docs/CONNECTOR/swagger2.0:
    get:
      tags:
      - "Documentation"
      - "API"
      summary: "Get Message Docs Swagger"
      description: "<p>This endpoint provides example message docs in swagger format.<br\
        \ />It is only relavent for REST Connectors.</p><p>This endpoint can be used\
        \ by the developer building a REST Adapter that connects to the Core Banking\
        \ System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced\
        \ here to build the REST APIs that the OBP REST connector will call to consume\
        \ CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST\
        \ Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer\
        \ code) -&gt; CBS (Main Frame)</p><p>Authentication is Optional</p>"
      operationId: "getMessageDocsSwagger"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MessageDocsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/my/accounts:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "PrivateData"
      - "PSD2"
      summary: "Get Accounts at all Banks (private)"
      description: "<p>Returns the list of accounts containing private views for the\
        \ user.<br />Each account lists the views available to the user.</p><p>optional\
        \ request parameters:</p><ul><li>account_type_filter: one or many accountType\
        \ value, split by comma</li><li>account_type_filter_operation: the filter\
        \ type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole\
        \ url example:<br />/my/accounts?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "corePrivateAccountsAllBanks"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CoreAccountsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoint-ids/API_COLLECTION_ENDPOINT_ID:
    delete:
      tags:
      - "Api-Collection"
      summary: "Delete My Api Collection Endpoint By Id"
      description: "<p>glossary-item-not-found<br />Delete Api Collection Endpoint<br\
        \ />Delete Api Collection Endpoint By Id</p><p>Authentication is Mandatory</p>"
      operationId: "deleteMyApiCollectionEndpointById"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints:
    get:
      tags:
      - "Api-Collection"
      summary: "Get My Api Collection Endpoints By Id"
      description: "<p>Get Api Collection Endpoints By API_COLLECTION_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMyApiCollectionEndpointsById"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionEndpointsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Api-Collection"
      summary: "Create My Api Collection Endpoint By Id"
      description: "<p>Create Api Collection Endpoint By Id.</p><p>glossary-item-not-found</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createMyApiCollectionEndpointById"
      parameters:
      - in: "body"
        name: "body"
        description: "PostApiCollectionEndpointJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostApiCollectionEndpointJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionEndpointJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints/OPERATION_ID:
    delete:
      tags:
      - "Api-Collection"
      summary: "Delete My Api Collection Endpoint By Id"
      description: "<p>glossary-item-not-found</p><p>Delete Api Collection Endpoint\
        \ By OPERATION_ID</p><p>Authentication is Mandatory</p>"
      operationId: "deleteMyApiCollectionEndpointByOperationId"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collections:
    get:
      tags:
      - "Api-Collection"
      summary: "Get My Api Collections"
      description: "<p>Get all the apiCollections for logged in user.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMyApiCollections"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Api-Collection"
      summary: "Create My Api Collection"
      description: "<p>Create Api Collection for logged in user.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createMyApiCollection"
      parameters:
      - in: "body"
        name: "body"
        description: "PostApiCollectionJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostApiCollectionJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collections/API_COLLECTION_ID:
    get:
      tags:
      - "Api-Collection"
      summary: "Get My Api Collection By Id"
      description: "<p>Get Api Collection By API_COLLECTION_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMyApiCollectionById"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "Api-Collection"
      summary: "Update My Api Collection By API_COLLECTION_ID"
      description: "<p>Update Api Collection for logged in user.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "updateMyApiCollection"
      parameters:
      - in: "body"
        name: "body"
        description: "PostApiCollectionJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostApiCollectionJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Api-Collection"
      summary: "Delete My Api Collection"
      description: "<p>Delete Api Collection By API_COLLECTION_ID</p><p>glossary-item-not-found</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteMyApiCollection"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints:
    get:
      tags:
      - "Api-Collection"
      summary: "Get My Api Collection Endpoints"
      description: "<p>Get Api Collection Endpoints By API_COLLECTION_NAME.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMyApiCollectionEndpoints"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionEndpointsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Api-Collection"
      summary: "Create My Api Collection Endpoint"
      description: "<p>Create Api Collection Endpoint.</p><p>glossary-item-not-found</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createMyApiCollectionEndpoint"
      parameters:
      - in: "body"
        name: "body"
        description: "PostApiCollectionEndpointJson400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostApiCollectionEndpointJson400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionEndpointJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID:
    get:
      tags:
      - "Api-Collection"
      summary: "Get My Api Collection Endpoint"
      description: "<p>Get Api Collection Endpoint By API_COLLECTION_NAME and OPERATION_ID.</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getMyApiCollectionEndpoint"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionEndpointJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotFoundByUserId"
    delete:
      tags:
      - "Api-Collection"
      summary: "Delete My Api Collection Endpoint"
      description: "<p>glossary-item-not-found</p><p>Delete Api Collection Endpoint\
        \ By OPERATION_ID</p><p>Authentication is Mandatory</p>"
      operationId: "deleteMyApiCollectionEndpoint"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/Full"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/api-collections/name/API_COLLECTION_NAME:
    get:
      tags:
      - "Api-Collection"
      summary: "Get My Api Collection By Name"
      description: "<p>Get Api Collection By API_COLLECTION_NAME.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getMyApiCollectionByName"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account:
    get:
      tags:
      - "Account"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Get Account by Id (Core)"
      description: "<p>Information returned about the account specified by ACCOUNT_ID:</p><ul><li>Number\
        \ - The human readable account number given by the bank that identifies the\
        \ account.</li><li>Label - A label given by the owner of the account</li><li>Owners\
        \ - Users that own this account</li><li>Type - The type of account</li><li>Balance\
        \ - Currency and Value</li><li>Account Routings - A list that might include\
        \ IBAN or national account identifiers</li><li>Account Rules - A list that\
        \ might include Overdraft and other bank specific rules</li><li>Tags - A list\
        \ of Tags assigned to this account</li></ul><p>This call returns the owner\
        \ view and requires access to that view.</p><p>Authentication is Mandatory</p>"
      operationId: "getCoreAccountById"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ModeratedCoreAccountJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions:
    get:
      tags:
      - "Transaction"
      - "Account Information Service (AIS)"
      - "Account"
      - "PSD2"
      summary: "Get Transactions for Account (Core)"
      description: "<p>Returns transactions list (Core info) of the account specified\
        \ by ACCOUNT_ID.</p><p>Authentication is Mandatory</p><p>Possible custom url\
        \ parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value:\
        \ 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE\
        \ =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is\
        \ one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example\
        \ value: 2024-02-05T14:15:55.255Z. NOTE! The default value is now (2024-02-05T14:15:55.255Z).</li></ul><p>Date\
        \ format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z)\
        \ ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>"
      operationId: "getCoreTransactionsForBankAccount"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      - name: "BANK_ID"
        in: "path"
        description: "The bank id"
        required: true
        type: "string"
        x-exportParamName: "BANKID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CoreTransactionsJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorFilterSortDirectionError"
  /obp/v5.1.0/my/consent/current:
    delete:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Revoke Consent used in the Current Call"
      description: "<p>Revoke Consent specified by Consent-Id at Request Header</p><p>There\
        \ are a few reasons you might need to revoke an application’s access to a\
        \ user’s account:<br />- The user explicitly wishes to revoke the application’\
        s access<br />- You as the service provider have determined an application\
        \ is compromised or malicious, and want to disable it<br />- etc.</p><p>OBP\
        \ as a resource server stores access tokens in a database, then it is relatively\
        \ easy to revoke some token that belongs to a particular user.<br />The status\
        \ of the token is changed to &quot;REVOKED&quot; so the next time the revoked\
        \ client makes a request, their token will fail to validate.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "selfRevokeConsent"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/ConsentJsonV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/correlated-entities:
    get:
      tags:
      - "Customer"
      summary: "Get Correlated Entities for the current User"
      description: "<p>Correlated Entities are users and customers linked to the currently\
        \ authenticated user via User-Customer-Links</p><p>Authentication is Mandatory</p>"
      operationId: "getMyCorrelatedEntities"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CorrelatedEntities"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/customers:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get My Customers"
      description: "<p>Gets all Customers that are linked to me.</p><p>Authentication\
        \ via OAuth is required.</p><p>Authentication is Mandatory</p>"
      operationId: "getMyCustomersAtAnyBank"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerJsonV210"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/dynamic-endpoints:
    get:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: "Get My Dynamic Endpoints"
      description: "<p>Get My Dynamic Endpoints.</p><p>Authentication is Mandatory</p>"
      operationId: "getMyDynamicEndpoints"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_12"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/dynamic-endpoints/DYNAMIC_ENDPOINT_ID:
    delete:
      tags:
      - "Dynamic-Endpoint-Manage"
      - "API"
      summary: "Delete My Dynamic Endpoint"
      description: "<p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteMyDynamicEndpoint"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/dynamic-entities:
    get:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Get My Dynamic Entities"
      description: "<p>Get all my Dynamic Entities.</p><p>Authentication is Mandatory</p>"
      operationId: "getMyDynamicEntities"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_4"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}:
    put:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Update My Dynamic Entity"
      description: "<p>Update my DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update\
        \ one of my DynamicEntity, after update finished, the corresponding CRUD endpoints\
        \ will be changed.</p><p>Current support filed types as follow:<br />[number,\
        \ integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY\
        \ format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite\
        \ foreign keys are supported. The value you need to supply as the (composite)\
        \ foreign key is a UUID (or several UUIDs in the case of a composite key)\
        \ that match value in another Entity..<br />The following list shows all the\
        \ possible reference types in the system with corresponding examples values\
        \ so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField1&quot;:\
        \ {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField2&quot;:\
        \ {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField3&quot;:\
        \ {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField4&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField5&quot;:\
        \ {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField6&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField7&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField8&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField9&quot;:\
        \ {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField10&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField11&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField12&quot;:\
        \ {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField13&quot;:\
        \ {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField14&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField15&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField16&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField17&quot;:\
        \ {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField18&quot;:\
        \ {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField19&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField20&quot;:\
        \ {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField21&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField22&quot;:\
        \ {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField23&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField24&quot;:\
        \ {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField25&quot;:\
        \ {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField26&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;:\
        \ &quot;c18a77b4-5d30-4fcb-84a0-dca287871a4f&quot;}&quot;someField27&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\
        \    &quot;example&quot;: &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;branchId=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&quot;}&quot;someField28&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;:\
        \ &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;atmId=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&quot;}&quot;someField29&quot;:\
        \ {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\
        \    &quot;example&quot;: &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;accountId=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&quot;}&quot;someField30&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\
        \    &quot;example&quot;: &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;productCode=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&quot;}&quot;someField31&quot;:\
        \ {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\
        \    &quot;example&quot;: &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;cardId=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&quot;}&quot;someField32&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\
        \    &quot;example&quot;: &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;accountId=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&amp;transactionId=48e0d625-eae0-4c74-89e6-b99e67e2ab55&quot;}&quot;someField33&quot;:\
        \ {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\
        \    &quot;example&quot;: &quot;bankId=c18a77b4-5d30-4fcb-84a0-dca287871a4f&amp;accountId=bb989f3d-6fb8-45b7-b60d-c20e6ae9f21f&amp;counterpartyId=48e0d625-eae0-4c74-89e6-b99e67e2ab55&quot;}</code></pre>"
      operationId: "updateMyDynamicEntity"
      parameters:
      - in: "body"
        name: "body"
        description: "DynamicEntityFooBar object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/DynamicEntityFooBar"
        x-exportParamName: "Body"
      - name: "DYNAMIC_ENTITY_ID"
        in: "path"
        description: "the dynamic entity id "
        required: true
        type: "string"
        x-exportParamName: "DYNAMICENTITYID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DynamicEntityFooBar"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "Dynamic-Entity-Manage"
      - "API"
      summary: "Delete My Dynamic Entity"
      description: "<p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteMyDynamicEntity"
      parameters:
      - name: "DYNAMIC_ENTITY_ID"
        in: "path"
        description: "the dynamic entity id "
        required: true
        type: "string"
        x-exportParamName: "DYNAMICENTITYID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/entitlement-requests:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlement Requests for the current User"
      description: "<p>Get Entitlement Requests for the current User.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getEntitlementRequestsForCurrentUser"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementRequestsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/entitlements:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlements for the current User"
      description: "<p>Get Entitlements for the current User.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getEntitlementsForCurrentUser"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementJSONs"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/mtls/certificate/current:
    get:
      tags:
      - "Consent"
      - "Account Information Service (AIS)"
      - "PSD2"
      summary: "Provide client's certificate info of a current call"
      description: "<p>Provide client's certificate info of a current call specified\
        \ by PSD2-CERT value at Request Header</p><p>Authentication is Mandatory</p>"
      operationId: "mtlsClientCertificateInfo"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CertificateInfoJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/spaces:
    get:
      tags:
      - "User"
      summary: "Get My Spaces"
      description: "<p>Get My Spaces.</p><p>Authentication is Mandatory</p>"
      operationId: "getMySpaces"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MySpaces"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/user/attributes:
    get:
      tags:
      - "User"
      summary: "Get My Personal User Attributes"
      description: "<p>Get My Personal User Attributes.</p><p>Authentication is Mandatory</p>"
      operationId: "getMyPersonalUserAttributes"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAttributesResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "User"
      summary: "Create My Personal User Attribute"
      description: "<p>Create My Personal User Attribute</p><p>The <code>type</code>\
        \ field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot;\
        \ or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>"
      operationId: "createMyPersonalUserAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "UserAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UserAttributeJsonV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/my/user/attributes/USER_ATTRIBUTE_ID:
    put:
      tags:
      - "User"
      summary: "Update My Personal User Attribute"
      description: "<p>Update My Personal User Attribute for current user by USER_ATTRIBUTE_ID</p><p>The\
        \ type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot;\
        \ or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>"
      operationId: "updateMyPersonalUserAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "UserAttributeJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UserAttributeJsonV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAttributeResponseJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/rate-limiting:
    get:
      tags:
      - "API"
      - "Rate-Limits"
      summary: "Get Rate Limiting Info"
      description: "<p>Get information about the Rate Limiting setup on this OBP Instance\
        \ such as:</p><p>Is rate limiting enabled and active?<br />What backend is\
        \ used to keep track of the API calls (e.g. REDIS).</p><p>Note: Rate limiting\
        \ can be set at the Consumer level and also for anonymous calls.</p><p>See\
        \ the consumer rate limits / call limits endpoints.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getRateLimitingInfo"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/RateLimitingInfoV310"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/regulated-entities:
    get:
      tags:
      - "Directory"
      - "API"
      summary: "Get Regulated Entities"
      description: "<p>Returns information about:</p><ul><li>Regulated Entities</li></ul><p>Authentication\
        \ is Optional</p>"
      operationId: "regulatedEntities"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/RegulatedEntitiesJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
    post:
      tags:
      - "Directory"
      - "API"
      summary: "Create Regulated Entity"
      description: "<p>Create Regulated Entity</p><p>Authentication is Mandatory</p>"
      operationId: "createRegulatedEntity"
      parameters:
      - in: "body"
        name: "body"
        description: "RegulatedEntityPostJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/RegulatedEntityPostJsonV510"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/RegulatedEntitiesJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/regulated-entities/REGULATED_ENTITY_ID:
    get:
      tags:
      - "Directory"
      - "API"
      summary: "Get Regulated Entity"
      description: "<p>Get Regulated Entity By REGULATED_ENTITY_ID</p><p>Authentication\
        \ is Optional</p>"
      operationId: "getRegulatedEntityById"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/RegulatedEntitiesJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
    delete:
      tags:
      - "Directory"
      - "API"
      summary: "Delete Regulated Entity"
      description: "<p>Delete Regulated Entity specified by REGULATED_ENTITY_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteRegulatedEntity"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/resource-docs/{API_VERSION}/obp:
    get:
      tags:
      - "Documentation"
      - "API"
      summary: "Get Resource Docs"
      description: "<p>Get documentation about the RESTful resources on this server\
        \ including example bodies for POST and PUT requests.</p><p>This is the native\
        \ data format used to document OBP endpoints. Each endpoint has a Resource\
        \ Doc (a Scala case class) defined in the source code.</p><p>This endpoint\
        \ is used by OBP API Explorer to display and work with the API documentation.</p><p>Most\
        \ (but not all) fields are also available in swagger format. (The Swagger\
        \ endpoint is built from Resource Docs.)</p><p>API_VERSION is the version\
        \ you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint\
        \ with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint\
        \ with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For\
        \ possible function values, see implemented_by.function in the JSON returned\
        \ by this endpoint or the OBP source code or the footer of the API Explorer\
        \ which produces a comma separated list of functions that reflect the server\
        \ or filtering by API Explorer based on tags etc.</p><p>You may filter this\
        \ endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if\
        \ set content=dynamic, only show dynamic endpoints, if content=static, only\
        \ show the static endpoints. if omit this parameter, we will show all the\
        \ endpoints.</p><p>You may need some other language resource docs, now we\
        \ support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id,\
        \ but api-collection-id can not be used with others together. If api-collection-id\
        \ is used in URL, it will ignore all other parameters.</p><p>See the Resource\
        \ Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are\
        \ cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is\
        \ 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\"\
        >https://apisandbox.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li>\
        \ operation_id is concatenation of \"v\", version and function and should\
        \ be unique (used for DOM element IDs etc. maybe used to link to source code)\
        \ </li><li> version references the version that the API call is defined in.</li><li>\
        \ function is the (scala) partial function that implements this endpoint.\
        \ It is unique per version of the API.</li><li> request_url is empty for the\
        \ root call, else the path. It contains the standard prefix (e.g. /obp) and\
        \ the implemented version (the version where this endpoint was defined) e.g.\
        \ /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty\
        \ for the root call, else the path. It contains the standard prefix (e.g.\
        \ /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In\
        \ OBP, endpoints are first made available at the request_url, but the same\
        \ resource (function call) is often made available under later versions (specified_url).\
        \ To access the latest version of all endpoints use the latest version available\
        \ on your OBP instance e.g. /obp/v3.1.0 - To get the original version use\
        \ the request_url. We recommend to use the specified_url since non semantic\
        \ improvements are more likely to be applied to later implementations of the\
        \ call.</li><li> summary is a short description inline with the swagger terminology.\
        \ </li><li> description may contain html markup (generated from markdown on\
        \ the server).</li></ul><p>Authentication is Mandatory</p>"
      operationId: "getResourceDocsObpV400"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "API_VERSION"
        in: "path"
        description: "eg:v2.2.0, v3.0.0"
        required: true
        type: "string"
        x-exportParamName: "APIVERSION"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ResourceDocsJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/resource-docs/{API_VERSION}/swagger:
    get:
      tags:
      - "Documentation"
      - "API"
      summary: "Get Swagger documentation"
      description: "<p>Returns documentation about the RESTful resources on this server\
        \ in Swagger format.</p><p>API_VERSION is the version you want documentation\
        \ about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url\
        \ parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or\
        \ more tags which for used in grouping)</p><p>You may filter this endpoint\
        \ using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each\
        \ endpoint is implemented in the OBP Scala code by a 'function')</p><p>See\
        \ the Resource Doc endpoint for more information.</p><p>Note: Resource Docs\
        \ are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a\
        \ href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br\
        \ /><a href=\"https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\"\
        >https://apisandbox.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>Authentication\
        \ is Optional</p>"
      operationId: "getResourceDocsSwagger"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "API_VERSION"
        in: "path"
        description: "eg:v2.2.0, v3.0.0"
        required: true
        type: "string"
        x-exportParamName: "APIVERSION"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/roles:
    get:
      tags:
      - "Role"
      summary: "Get Roles"
      description: "<p>Returns all available roles</p><p>Authentication is Mandatory</p>"
      operationId: "getRoles"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AvailableRolesJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/root:
    get:
      tags:
      - "API"
      summary: "Get API Info (root)"
      description: "<p>Returns information about:</p><ul><li>API version</li><li>Hosted\
        \ by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git\
        \ Commit</li></ul><p>Authentication is Optional</p>"
      operationId: "root"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/APIInfoJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/sandbox/data-import:
    post:
      tags:
      - "Sandbox"
      summary: "Create sandbox"
      description: "<p>Import bulk data into the sandbox (Authenticated access).</p><p>This\
        \ call can be used to create banks, users, accounts and transactions which\
        \ are stored in the local RDBMS.</p><p>The user needs to have CanCreateSandbox\
        \ entitlement.</p><p>Note: This is a monolithic call. You could also use a\
        \ combination of endpoints including create bank, create user, create account\
        \ and create transaction request to create similar data.</p><p>An example\
        \ of an import set of data (json) can be found <a href=\"https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/obp-api/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json\"\
        >here</a><br />Authentication is Mandatory</p>"
      operationId: "sandboxDataImport"
      parameters:
      - in: "body"
        name: "body"
        description: "SandboxDataImport object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/SandboxDataImport"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SuccessMessage"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/search/metrics:
    get:
      tags:
      - "Metric"
      - "API"
      - "Old-Style"
      summary: "Search API Metrics via Elasticsearch"
      description: "<p>Search the API calls made to this API instance via Elastic\
        \ Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required\
        \ to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch\
        \ type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df     \
        \ - default field to search</p><p>sort    - field to sort on</p><p>size  \
        \  - number of hits returned, default 10</p><p>from    - show hits starting\
        \ from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example\
        \ usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The\
        \ whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For\
        \ }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only\
        \ q, source and esType are passed to Elastic</p><p>Elastic simple query: <a\
        \ href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\"\
        >https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic\
        \ JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\"\
        >https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "elasticSearchMetrics"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/search/warehouse/{INDEX}:
    post:
      tags:
      - "Data-Warehouse"
      summary: "Data Warehouse Search"
      description: "<p>Search the data warehouse and get row level results.</p><p>Authentication\
        \ is Mandatory</p><p>CanSearchWarehouse entitlement is required. You can request\
        \ the Role below.</p><p>Elastic (search) is used in the background. See links\
        \ below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST\
        \ /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{\
        \ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\"\
        >Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\"\
        >Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\"\
        >Elastic aggregations</a></p>"
      operationId: "dataWarehouseSearch"
      parameters:
      - in: "body"
        name: "body"
        description: "ElasticSearchJsonV300 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ElasticSearchJsonV300"
        x-exportParamName: "Body"
      - name: "INDEX"
        in: "path"
        description: "the elastic search index"
        required: true
        type: "string"
        x-exportParamName: "INDEX"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/search/warehouse/statistics/{INDEX}/{FIELD}:
    post:
      tags:
      - "Data-Warehouse"
      summary: "Data Warehouse Statistics"
      description: "<p>Search the data warehouse and get statistical aggregations\
        \ over a warehouse field</p><p>Does a stats aggregation over some numeric\
        \ field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\"\
        >https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>Authentication\
        \ is Mandatory</p><p>CanSearchWarehouseStats Role is required. You can request\
        \ this below.</p><p>Elastic (search) is used in the background. See links\
        \ below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST\
        \ /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query\
        \ DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\"\
        >Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\"\
        >Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\"\
        >Elastic aggregations</a></p>"
      operationId: "dataWarehouseStatistics"
      parameters:
      - in: "body"
        name: "body"
        description: "ElasticSearchJsonV300 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/ElasticSearchJsonV300"
        x-exportParamName: "Body"
      - name: "FIELD"
        in: "path"
        description: "the elastic search field"
        required: true
        type: "string"
        x-exportParamName: "FIELD"
      - name: "INDEX"
        in: "path"
        description: "the elastic search index"
        required: true
        type: "string"
        x-exportParamName: "INDEX"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/system-views:
    post:
      tags:
      - "View-System"
      summary: "Create System View"
      description: "<p>Create a system view</p><p>Authentication is Mandatory and\
        \ the user needs to have access to the CanCreateSystemView entitlement.<br\
        \ />The 'alias' field in the JSON can take one of two values:</p><ul><li><em>public</em>:\
        \ to use the public alias if there is one specified for the other account.</li><li><em>private</em>:\
        \ to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty\
        \ string)</em>: to use no alias; the view shows the real name of the other\
        \ account.</p></li></ul><p>The 'hide_metadata_if_alias_used' field in the\
        \ JSON can take boolean values. If it is set to <code>true</code> and there\
        \ is an alias on the other account then the other accounts' metadata (like\
        \ more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise\
        \ the metadata will be shown.</p><p>The 'allowed_actions' field is a list\
        \ containing the name of the actions allowed on this view, all the actions\
        \ contained will be set to <code>true</code> on the view creation, the rest\
        \ will be set to <code>false</code>.</p><p>Please note that system views cannot\
        \ be public. In case you try to set it you will get the error OBP-30258: System\
        \ view cannot be public</p>"
      operationId: "createSystemView"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateViewJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateViewJsonV500"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/system-views-ids:
    get:
      tags:
      - "View-System"
      summary: "Get Ids of System Views"
      description: "<p>Get Ids of System Views</p><p>Authentication is Mandatory</p>"
      operationId: "getSystemViewsIds"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewsIdsJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/system-views/{VIEW_ID}:
    get:
      tags:
      - "View-System"
      summary: "Get System View"
      description: "<p>Get System View</p><p>Authentication is Mandatory</p>"
      operationId: "getSystemView"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "View-System"
      summary: "Update System View"
      description: "<p>Update an existing view on a bank account</p><p>Authentication\
        \ is Mandatory and the user needs to have access to the owner view.</p><p>The\
        \ json sent is the same as during view creation (above), with one difference:\
        \ the 'name' field<br />of a view is not editable (it is only set when a view\
        \ is created)</p>"
      operationId: "updateSystemView"
      parameters:
      - in: "body"
        name: "body"
        description: "UpdateViewJsonV500 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UpdateViewJsonV500"
        x-exportParamName: "Body"
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ViewJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorInvalidJsonFormat"
    delete:
      tags:
      - "View-System"
      summary: "Delete System View"
      description: "<p>Deletes the system view specified by VIEW_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteSystemView"
      parameters:
      - name: "VIEW_ID"
        in: "path"
        description: "The view id"
        required: true
        type: "string"
        x-exportParamName: "VIEWID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/transaction-request-types/CARD/transaction-requests:
    post:
      tags:
      - "Transaction-Request"
      - "Payment Initiation Service (PIS)"
      - "PSD2"
      summary: "Create Transaction Request (CARD)"
      description: "<p>When using CARD, the payee is set in the request body .</p><p>Money\
        \ goes into the Counterparty in the request body.</p><p>Initiate a Payment\
        \ via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code>\
        \ may or may not result in a <code>transaction</code>. However, a <code>transaction</code>\
        \ only has one possible state: completed.</p><p>A <code>Transaction Request</code>\
        \ can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code>\
        \ are modeled on items in a bank statement that represent the movement of\
        \ money.</p><p><code>Transaction Requests</code> are requests to move money\
        \ which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A\
        \ <code>Transaction Request</code> might create a security challenge that\
        \ needs to be answered before the <code>Transaction Request</code> proceeds.<br\
        \ />In case 1 person needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br\
        \ />In case n persons needs to answer security challenge we have next flow\
        \ of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING\
        \ =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security\
        \ challenge is bound to a user i.e. in case of right answer and the user is\
        \ different than expected one the challenge will fail.</p><p>Rule for calculating\
        \ number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N\
        \ then create N challenges<br />(one for every user that has a View where\
        \ permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br\
        \ />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute\
        \ default value is 1.</p><p>Transaction Requests contain charge information\
        \ giving the client the opportunity to proceed or not (as long as the challenge\
        \ level is appropriate).</p><p>Transaction Requests can have one of several\
        \ Transaction Request Types which expect different bodies. The escaped body\
        \ is returned in the details key of the GET response.<br />This provides some\
        \ commonality and one URL for many different payment or transfer types with\
        \ enough flexibility to validate them differently.</p><p>The payer is set\
        \ in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the\
        \ URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to\
        \ ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported\
        \ types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency,\
        \ unless it is set differently on this server), the transaction request will\
        \ create a transaction without a challenge, else the Transaction Request will\
        \ be set to INITIALISED and a challenge will need to be answered.</p><p>If\
        \ a challenge is created you must answer it using Answer Transaction Request\
        \ Challenge before the Transaction is created.</p><p>You can transfer between\
        \ different currency accounts. (new in 2.0.0). The currency in body must match\
        \ the sending account.</p><p>The following static FX rates are available in\
        \ sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\"\
        >https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction\
        \ Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated\
        \ by a third party application.</p><p>2) The customer is informed of the charge\
        \ that will incurred.</p><p>3) The call supports delegated authentication\
        \ (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\"\
        >this python code</a> for a complete example of this flow.</p><p>There is\
        \ further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\"\
        >here</a></p><p>Authentication is Mandatory</p>"
      operationId: "createTransactionRequestCard"
      parameters:
      - in: "body"
        name: "body"
        description: "TransactionRequestBodyCardJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/TransactionRequestBodyCardJsonV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/TransactionRequestWithChargeJSON400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/transactions/{TRANSACTION_ID}/balancing-transaction:
    get:
      tags:
      - "Transaction"
      summary: "Get Balancing Transaction"
      description: "<p>Get Balancing Transaction</p><p>Authentication is Mandatory</p>"
      operationId: "getBalancingTransaction"
      parameters:
      - name: "TRANSACTION_ID"
        in: "path"
        description: "The transaction id"
        required: true
        type: "string"
        x-exportParamName: "TRANSACTIONID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DoubleEntryTransactionJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/ui/suggested-session-timeout:
    get:
      tags:
      - "API"
      summary: "Get Suggested Session Timeout"
      description: "<p>Returns information about:</p><ul><li>Suggested session timeout\
        \ in case of a user inactivity</li></ul><p>Authentication is Optional</p>"
      operationId: "suggestedSessionTimeout"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SuggestedSessionTimeoutV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/user-entitlements:
    post:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      - "DAuth"
      summary: "Create (DAuth) User with Roles"
      description: "<p>This endpoint is used as part of the DAuth solution to grant\
        \ Entitlements for Roles to a smart contract on the blockchain.</p><p>Put\
        \ the smart contract address in username</p><p>For provider use &quot;dauth&quot;</p><p>This\
        \ endpoint will create the User with username and provider if the User does\
        \ not already exist.</p><p>Then it will create Entitlements i.e. grant Roles\
        \ to the User.</p><p>Entitlements are used to grant System or Bank level roles\
        \ to Users. (For Account level privileges, see Views)</p><p>i.e. Entitlements\
        \ are used to create / consume system or bank level resources where as views\
        \ / account access are used to consume / create customer level resources.</p><p>For\
        \ a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string\
        \ i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g.\
        \ CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Note:\
        \ The Roles actually granted will depend on the Roles that the calling user\
        \ has.</p><p>If you try to grant Entitlements to a user that already exist\
        \ (duplicate entitilements) you will get an error.</p><p>For information about\
        \ DAuth see below:</p><details>  <summary style=\"display:list-item;cursor:s-resize;\"\
        >DAuth</summary>  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"\
        dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3><p>DAuth\
        \ is an experimental authentication mechanism that aims to pin an ethereum\
        \ or other blockchain Smart Contract to an OBP &quot;User&quot;.</p><p>In\
        \ the future, it might be possible to be more specific and pin specific actors\
        \ (wallets) that are acting within the smart contract, but so far, one smart\
        \ contract acts on behalf of one User.</p><p>Thus, if a smart contract &quot;X&quot;\
        \ calls the OBP API using the DAuth header, OBP will get or create a user\
        \ called X and the call will proceed in the context of that User &quot;X&quot;.</p><p>DAuth\
        \ is invoked by the REST client (caller) including a specific header (see\
        \ step 3 below) in any OBP REST call.</p><p>When OBP receives the DAuth token,\
        \ it creates or gets a User with a username based on the smart_contract_address\
        \ and the provider based on the network_name. The combination of username\
        \ and provider is unique in OBP.</p><p>If you are calling OBP-API via an API3\
        \ Airnode, the Airnode will take care of constructing the required header.</p><p>When\
        \ OBP detects a DAuth header / token it first checks if the Consumer is allowed\
        \ to make such a call. OBP will validate the Consumer ip address and signature\
        \ etc.</p><p>Note: The DAuth flow does <em>not</em> require an explicit POST\
        \ like Direct Login to create the token.</p><p>Permissions may be assigned\
        \ to an OBP User at any time, via the UserAuthContext, Views, Entitlements\
        \ to Roles or Consents.</p><p>Note: <em>DAuth is NOT enabled on this instance!</em></p><p>Note:\
        \ <em>The DAuth client is responsible for creating a token which will be trusted\
        \ by OBP absolutely</em>!</p><p>To use DAuth:</p><h3><a href=\"#1-configure-obp-api-to-accept-dauth\"\
        \ id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept\
        \ DAuth.</a></h3><p>Set up properties in your props file</p><pre><code># --\
        \ DAuth --------------------------------------# Define secret used to validate\
        \ JWT token# jwt.public_key_rsa=path-to-the-pem-file# Enable/Disable DAuth\
        \ communication at all# In case isn't defined default value is false# allow_dauth=false#\
        \ Define comma separated list of allowed IP addresses# dauth.host=127.0.0.1#\
        \ -------------------------------------- DAuth--</code></pre><p>Please keep\
        \ in mind that property jwt.public_key_rsa is used to validate JWT token to\
        \ check it is not changed or corrupted during transport.</p><h3><a href=\"\
        #2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create\
        \ / have access to a JWT</a></h3><p>The following videos are available:<br\
        \ />* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p><p>HEADER:ALGORITHM\
        \ &amp; TOKEN TYPE</p><pre><code>{  &quot;alg&quot;: &quot;RS256&quot;,  &quot;typ&quot;:\
        \ &quot;JWT&quot;}</code></pre><p>PAYLOAD:DATA</p><pre><code>{  &quot;smart_contract_address&quot;:\
        \ &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,  &quot;network_name&quot;:\
        \ &quot;AIRNODE.TESTNET.ETHEREUM&quot;,  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,\
        \  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,\
        \  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,  &quot;request_id&quot;:\
        \ &quot;0Xe876987694328763492876348928736497869273649&quot;}</code></pre><p>VERIFY\
        \ SIGNATURE</p><pre><code>RSASHA256(  base64UrlEncode(header) + &quot;.&quot;\
        \ +  base64UrlEncode(payload),<p>) your-RSA-key-pair</p></code></pre><p>Here\
        \ is an example token:</p><pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</code></pre><h3><a\
        \ href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\"\
        >3) Try a REST call using the header</a></h3><p>Using your favorite http client:</p><p>GET\
        \ <a href=\"https://apisandbox.openbankproject.com/obp/v3.0.0/users/current\">https://apisandbox.openbankproject.com/obp/v3.0.0/users/current</a></p><p>Body</p><p>Leave\
        \ Empty!</p><p>Headers:</p><pre><code>   DAuth: your-jwt-from-step-above</code></pre><p>Here\
        \ is it all together:</p><p>GET <a href=\"https://apisandbox.openbankproject.com/obp/v3.0.0/users/current\"\
        >https://apisandbox.openbankproject.com/obp/v3.0.0/users/current</a> HTTP/1.1<br\
        \ />Host: localhost:8080<br />User-Agent: curl/7.47.0<br />Accept: <em>/</em><br\
        \ />DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p><p>CURL\
        \ example</p><pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k'\
        \ https://apisandbox.openbankproject.com/obp/v3.0.0/users/current</code></pre><p>You\
        \ should receive a response like:</p><pre><code>{    &quot;user_id&quot;:\
        \ &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,    &quot;email&quot;:\
        \ &quot;&quot;,    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\
        \    &quot;provider&quot;: &quot;ETHEREUM&quot;,    &quot;username&quot;:\
        \ &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,    &quot;entitlements&quot;:\
        \ {        &quot;list&quot;: []    }}</code></pre><h3><a href=\"#under-the-hood\"\
        \ id=\"under-the-hood\">Under the hood</a></h3><p>The file, dauth.scala handles\
        \ the DAuth,</p><p>We:</p><pre><code>-&gt; Check if Props allow_dauth is true\
        \  -&gt; Check if DAuth header exists    -&gt; Check if getRemoteIpAddress\
        \ is OK      -&gt; Look for &quot;token&quot;        -&gt; parse the JWT token\
        \ and getOrCreate the user          -&gt; get the data of the user</code></pre><h3><a\
        \ href=\"#more-information\" id=\"more-information\">More information</a></h3><p>Parameter\
        \ names and values are case sensitive.<br />Each parameter MUST NOT appear\
        \ more than once per request.</p></details><p><br></br></p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "createUserWithRoles"
      parameters:
      - in: "body"
        name: "body"
        description: "PostCreateUserWithRolesJsonV400 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostCreateUserWithRolesJsonV400"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users:
    get:
      tags:
      - "User"
      summary: "Get all Users"
      description: "<p>Get all users</p><p>Authentication is Mandatory</p><p>CanGetAnyUser\
        \ entitlement is required,</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER\
        \ ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC\
        \ ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>locked_status\
        \ (if null ignore)</li></ul>"
      operationId: "getUsers"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UsersJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "User"
      - "Onboarding"
      summary: "Create User"
      description: "<p>Creates OBP user.<br />No authorisation (currently) required.</p><p>Mimics\
        \ current webform to Register.</p><p>Requires username(email) and password.</p><p>Returns\
        \ 409 error if username not unique.</p><p>May require validation of email\
        \ address.</p><p>Authentication is Mandatory</p>"
      operationId: "createUser"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateUserJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateUserJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserJsonV200"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{PROVIDER}/{USERNAME}/lock-status:
    get:
      tags:
      - "User"
      summary: "Get User Lock Status"
      description: "<p>Get User Login Status.<br />Authentication is Mandatory</p>"
      operationId: "getUserLockStatus"
      parameters:
      - name: "PROVIDER"
        in: "path"
        description: "the user PROVIDER"
        required: true
        type: "string"
        x-exportParamName: "PROVIDER"
      - name: "USERNAME"
        in: "path"
        description: "the user name"
        required: true
        type: "string"
        x-exportParamName: "USERNAME"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BadLoginStatusJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "User"
      summary: "Unlock the user"
      description: "<p>Unlock a User.</p><p>(Perhaps the user was locked due to multiple\
        \ failed login attempts)</p><p>Authentication is Mandatory</p>"
      operationId: "unlockUserByProviderAndUsername"
      parameters:
      - name: "PROVIDER"
        in: "path"
        description: "the user PROVIDER"
        required: true
        type: "string"
        x-exportParamName: "PROVIDER"
      - name: "USERNAME"
        in: "path"
        description: "the user name"
        required: true
        type: "string"
        x-exportParamName: "USERNAME"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BadLoginStatusJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{PROVIDER}/{USERNAME}/locks:
    post:
      tags:
      - "User"
      summary: "Lock the user"
      description: "<p>Lock a User.</p><p>Authentication is Mandatory</p>"
      operationId: "lockUserByProviderAndUsername"
      parameters:
      - name: "PROVIDER"
        in: "path"
        description: "the user PROVIDER"
        required: true
        type: "string"
        x-exportParamName: "PROVIDER"
      - name: "USERNAME"
        in: "path"
        description: "the user name"
        required: true
        type: "string"
        x-exportParamName: "USERNAME"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserLockStatusJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}:
    delete:
      tags:
      - "User"
      summary: "Delete a User"
      description: "<p>Delete a User.</p><p>Authentication is Mandatory</p>"
      operationId: "deleteUser"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/api-collections:
    get:
      tags:
      - "Api-Collection"
      summary: "Get Api Collections for User"
      description: "<p>Get Api Collections for User.</p><p>Authentication is Mandatory</p>"
      operationId: "getApiCollectionsForUser"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ApiCollectionsJson400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotFoundByUserId"
  /obp/v5.1.0/users/{USER_ID}/attributes:
    get:
      tags:
      - "User"
      summary: "Get User with Attributes by USER_ID"
      description: "<p>Get User Attributes for the user defined via USER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getUserWithAttributes"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserWithAttributesResponseJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/auth-context:
    get:
      tags:
      - "User"
      summary: "Get User Auth Contexts"
      description: "<p>Get User Auth Contexts for a User.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getUserAuthContexts"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAuthContextJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "User"
      summary: "Create User Auth Context"
      description: "<p>Create User Auth Context. These key value pairs will be propagated\
        \ over connector to adapter. Normally used for mapping OBP user and<br />Bank\
        \ User/Customer.<br />Authentication is Mandatory</p>"
      operationId: "createUserAuthContext"
      parameters:
      - in: "body"
        name: "body"
        description: "PostUserAuthContextJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/PostUserAuthContextJson"
        x-exportParamName: "Body"
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAuthContextJsonV500"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "User"
      summary: "Delete User's Auth Contexts"
      description: "<p>Delete the Auth Contexts of a User specified by USER_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteUserAuthContexts"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/auth-context/{USER_AUTH_CONTEXT_ID}:
    delete:
      tags:
      - "User"
      summary: "Delete User Auth Context"
      description: "<p>Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteUserAuthContextById"
      parameters:
      - name: "USER_AUTH_CONTEXT_ID"
        in: "path"
        description: "the user auth context id"
        required: true
        type: "string"
        x-exportParamName: "USERAUTHCONTEXTID"
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/entitlement-requests:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlement Requests for a User"
      description: "<p>Get Entitlement Requests for a User.</p><p>Authentication is\
        \ Mandatory</p>"
      operationId: "getEntitlementRequests"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementRequestsJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/entitlement/{ENTITLEMENT_ID}:
    delete:
      tags:
      - "Role"
      - "User"
      - "Entitlement"
      summary: "Delete Entitlement"
      description: "<p>Delete Entitlement specified by ENTITLEMENT_ID for an user\
        \ specified by USER_ID</p><p>Authentication is required and the user needs\
        \ to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "deleteEntitlement"
      parameters:
      - in: "body"
        name: "body"
        description: "EmptyClassJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/EmptyClassJson"
        x-exportParamName: "Body"
      - name: "ENTITLEMENT_ID"
        in: "path"
        description: "The entitblement id"
        required: true
        type: "string"
        x-exportParamName: "ENTITLEMENTID"
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/EmptyClassJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/entitlements:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlements for User"
      description: "<p>Authentication is Mandatory</p>"
      operationId: "getEntitlements"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementsJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Add Entitlement for a User"
      description: "<p>Create Entitlement. Grant Role to User.</p><p>Entitlements\
        \ are used to grant System or Bank level roles to Users. (For Account level\
        \ privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser),\
        \ set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For\
        \ a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value\
        \ e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is\
        \ required and the user needs to be a Super Admin. Super Admins are listed\
        \ in the Props file.</p><p>Authentication is Mandatory</p>"
      operationId: "addEntitlement"
      parameters:
      - in: "body"
        name: "body"
        description: "CreateEntitlementJSON object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/CreateEntitlementJSON"
        x-exportParamName: "Body"
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/EntitlementJSON"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/entitlements-and-permissions:
    get:
      tags:
      - "Role"
      - "Entitlement"
      - "User"
      summary: "Get Entitlements and Permissions for a User"
      description: "<p>Authentication is Mandatory</p>"
      operationId: "getEntitlementsAndPermissions"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/non-personal/attributes:
    get:
      tags:
      - "User"
      summary: "Get Non Personal User Attributes"
      description: "<p>Get Non Personal User Attribute for a user specified by USER_ID</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getNonPersonalUserAttributes"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "User"
      summary: "Create Non Personal User Attribute"
      description: "<p>Create Non Personal User Attribute</p><p>The type field must\
        \ be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or\
        \ DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>"
      operationId: "createNonPersonalUserAttribute"
      parameters:
      - in: "body"
        name: "body"
        description: "UserAttributeJsonV510 object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/UserAttributeJsonV510"
        x-exportParamName: "Body"
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/UserAttributeResponseJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/non-personal/attributes/USER_ATTRIBUTE_ID:
    delete:
      tags:
      - "User"
      summary: "Delete Non Personal User Attribute"
      description: "<p>Delete the Non Personal User Attribute specified by ENTITLEMENT_REQUEST_ID\
        \ for a user specified by USER_ID</p><p>Authentication is Mandatory</p>"
      operationId: "deleteNonPersonalUserAttribute"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/{USER_ID}/refresh:
    post:
      tags:
      - "User"
      summary: "Refresh User"
      description: "<p>The endpoint is used for updating the accounts, views, account\
        \ holders for the user.<br />As to the Json body, you can leave it as Empty.<br\
        \ />This call will get data from backend, no need to prepare the json body\
        \ in api side.</p><p>Authentication is Mandatory</p>"
      operationId: "refreshUser"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/RefreshUserJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserHasMissingRoles"
  /obp/v5.1.0/users/current:
    get:
      tags:
      - "User"
      summary: "Get User (Current)"
      description: "<p>Get the logged in user</p><p>Authentication is Mandatory</p>"
      operationId: "getCurrentUser"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/current/customers:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get Customers for Current User"
      description: "<p>Gets all Customers that are linked to a User.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomersForUser"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomersWithAttributesJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/current/customers/customer_ids:
    get:
      tags:
      - "Customer"
      - "User"
      summary: "Get Customers for Current User (IDs only)"
      description: "<p>Gets all Customers Ids that are linked to a User.</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCustomersForUserIdsOnly"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomersWithAttributesJsonV300"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/current/logout-link:
    get:
      tags:
      - "User"
      summary: "Get Logout Link"
      description: "<p>Get the Logout Link</p><p>Authentication is Mandatory</p>"
      operationId: "getLogoutLink"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/LogoutLinkJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/current/user_id:
    get:
      tags:
      - "User"
      summary: "Get User Id (Current)"
      description: "<p>Get the USER_ID of the logged in user</p><p>Authentication\
        \ is Mandatory</p>"
      operationId: "getCurrentUserId"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserIdJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/email/EMAIL/terminator:
    get:
      tags:
      - "User"
      summary: "Get Users by Email Address"
      description: "<p>Get users by email address</p><p>Authentication is Mandatory<br\
        \ />CanGetAnyUser entitlement is required,</p>"
      operationId: "getUsersByEmail"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UsersJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/provider/{PROVIDER}/username/{USERNAME}:
    get:
      tags:
      - "User"
      summary: "Get User by USERNAME"
      description: "<p>Get user by PROVIDER and USERNAME</p><p>Authentication is Mandatory</p><p>CanGetAnyUser\
        \ entitlement is required,</p>"
      operationId: "getUserByProviderAndUsername"
      parameters:
      - name: "PROVIDER"
        in: "path"
        description: "the user PROVIDER"
        required: true
        type: "string"
        x-exportParamName: "PROVIDER"
      - name: "USERNAME"
        in: "path"
        description: "the user name"
        required: true
        type: "string"
        x-exportParamName: "USERNAME"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/users/user_id/{USER_ID}:
    get:
      tags:
      - "User"
      summary: "Get User by USER_ID"
      description: "<p>Get user by USER_ID</p><p>Authentication is Mandatory<br />CanGetAnyUser\
        \ entitlement is required,</p>"
      operationId: "getUserByUserId"
      parameters:
      - name: "USER_ID"
        in: "path"
        description: "The user id"
        required: true
        type: "string"
        x-exportParamName: "USERID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserJsonV400"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /obp/v5.1.0/waiting-for-godot:
    get:
      tags:
      - "API"
      summary: "Waiting For Godot"
      description: "<p>Waiting For Godot</p><p>Uses query parameter &quot;sleep&quot;\
        \ in milliseconds.<br />For instance: .../waiting-for-godot?sleep=50 means\
        \ postpone response in 50 milliseconds.</p><p>Authentication is Optional</p>"
      operationId: "waitingForGodot"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/WaitingForGodotJsonV510"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /obp/v5.1.0/web-hooks/account/notifications/on-create-transaction:
    post:
      tags:
      - "Webhook"
      - "Bank"
      summary: "Create system level Account Notification Webhook"
      description: "<p>Create a notification Webhook that will fire for all accounts\
        \ on the system.</p><p>Webhooks are used to call external web services when\
        \ certain events happen.</p><p>For instance, a webhook can be used to notify\
        \ an external service if a transaction is created on an account.</p><p>When\
        \ an account notification webhook fires it will POST to the URL you specify\
        \ during the creation of the webhook.</p><p>Inside the payload you will find\
        \ account_id and transaction_id and also user_ids and customer_ids of the\
        \ Users / Customers linked to the Account.</p><p>The webhook will POST the\
        \ following structure to your service:</p><p>{<br />&quot;event_name&quot;:\
        \ &quot;OnCreateTransaction&quot;,<br />&quot;event_id&quot;: &quot;9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br\
        \ />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;:\
        \ &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;transaction_id&quot;:\
        \ &quot;7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;related_entities&quot;:\
        \ [<br />{<br />&quot;user_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br\
        \ />&quot;customer_ids&quot;: [&quot;3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;]<br\
        \ />}<br />]<br />}</p><p>Thus, your service should accept the above POST\
        \ body structure.</p><p>In this way, your web service can be informed about\
        \ an event on an account and act accordingly.</p><p>Further information about\
        \ the account, transaction or related entities can then be retrieved using\
        \ the standard REST APIs.</p><p>Authentication is Mandatory</p>"
      operationId: "createSystemAccountNotificationWebhook"
      parameters:
      - in: "body"
        name: "body"
        description: "AccountNotificationWebhookPostJson object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/AccountNotificationWebhookPostJson"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/SystemAccountNotificationWebhookJson"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /CovidAPIDays:
    get:
      tags:
      - "_Covid APIDays"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Covid APIDays List"
      description: "<p>Get Covid APIDays List.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /CovidAPIDays?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getCovidAPIDaysList_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_13"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Covid APIDays"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Covid APIDays"
      description: "<p>Create new Covid APIDays.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createCovidAPIDays_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_6"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_13_covid_api_days_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /CovidAPIDays/COVID_API_DAYS_ID:
    get:
      tags:
      - "_Covid APIDays"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Covid APIDays by id"
      description: "<p>Get Covid APIDays by id.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleCovidAPIDays_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_13_covid_api_days_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Covid APIDays"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Covid APIDays"
      description: "<p>Update Covid APIDays.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateCovidAPIDays_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_7"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_13_covid_api_days_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Covid APIDays"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Covid APIDays by id"
      description: "<p>Delete Covid APIDays by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;CovidAPIDays&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteCovidAPIDays_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_8"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_13_covid_api_days_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /FishPort:
    get:
      tags:
      - "_Fish Port"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Fish Port List"
      description: "<p>Get Fish Port List.</p><p>Portfolio of fishbased values</p><p><strong>Property\
        \ List:</strong></p><ul><li>fish: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p><p>Can do filter on the fields<br />e.g: /FishPort?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getFishPortList_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_14"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Fish Port"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Fish Port"
      description: "<p>Create new Fish Port.</p><p>Portfolio of fishbased values</p><p><strong>Property\
        \ List:</strong></p><ul><li>fish: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_createFishPort_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_9"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_14_fish_port_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /FishPort/FISH_PORT_ID:
    get:
      tags:
      - "_Fish Port"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Fish Port by id"
      description: "<p>Get Fish Port by id.</p><p>Portfolio of fishbased values</p><p><strong>Property\
        \ List:</strong></p><ul><li>fish: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_getSingleFishPort_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_14_fish_port_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Fish Port"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Fish Port"
      description: "<p>Update Fish Port.</p><p>Portfolio of fishbased values</p><p><strong>Property\
        \ List:</strong></p><ul><li>fish: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_updateFishPort_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_10"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_14_fish_port_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Fish Port"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Fish Port by id"
      description: "<p>Delete Fish Port by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteFishPort_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_11"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_14_fish_port_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /FooBar:
    get:
      tags:
      - "_Foo Bar"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Foo Bar List"
      description: "<p>Get Foo Bar List.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /FooBar?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getFooBarList_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_15"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Foo Bar"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Foo Bar"
      description: "<p>Create new Foo Bar.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createFooBar_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_12"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_15_foo_bar_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /FooBar/FOO_BAR_ID:
    get:
      tags:
      - "_Foo Bar"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Foo Bar by id"
      description: "<p>Get Foo Bar by id.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleFooBar_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_15_foo_bar_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Foo Bar"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Foo Bar"
      description: "<p>Update Foo Bar.</p><p>Description of this entity, can be markdown\
        \ text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateFooBar_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_13"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_15_foo_bar_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Foo Bar"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Foo Bar by id"
      description: "<p>Delete Foo Bar by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;FooBar&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteFooBar_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_14"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_15_foo_bar_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /SimonCovid:
    get:
      tags:
      - "_Simon Covid"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Simon Covid List"
      description: "<p>Get Simon Covid List.</p><p>Let's put Covid99 stuff here</p><p><strong>Property\
        \ List:</strong></p><ul><li>name: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p><p>Can do filter on the fields<br />e.g: /SimonCovid?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getSimonCovidList_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_16"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Simon Covid"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Simon Covid"
      description: "<p>Create new Simon Covid.</p><p>Let's put Covid99 stuff here</p><p><strong>Property\
        \ List:</strong></p><ul><li>name: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_createSimonCovid_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_15"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_16_simon_covid_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /SimonCovid/SIMON_COVID_ID:
    get:
      tags:
      - "_Simon Covid"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Simon Covid by id"
      description: "<p>Get Simon Covid by id.</p><p>Let's put Covid99 stuff here</p><p><strong>Property\
        \ List:</strong></p><ul><li>name: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_getSingleSimonCovid_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_16_simon_covid_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Simon Covid"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Simon Covid"
      description: "<p>Update Simon Covid.</p><p>Let's put Covid99 stuff here</p><p><strong>Property\
        \ List:</strong></p><ul><li>name: description of <strong>name</strong> field,\
        \ can be markdown text.</li><li>number: description of <strong>number</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_updateSimonCovid_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_16"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_16_simon_covid_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Simon Covid"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Simon Covid by id"
      description: "<p>Delete Simon Covid by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteSimonCovid_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_17"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_16_simon_covid_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /accounts:
    post:
      tags:
      - "Bank Accounts (Dynamic Endpoint)"
      - "Dynamic-Endpoint"
      - "Dynamic"
      summary: "Post Accounts"
      description: "<p>POST Accounts</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEndpointProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;url_pattern&quot;,\
        \        &quot;value&quot;:&quot;http://obp_mock//accounts&quot;    },   \
        \ {        &quot;key&quot;:&quot;http_method&quot;,        &quot;value&quot;:&quot;POST&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEndpoint_POST_accounts"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_201_2"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /accounts/{ACCOUNT_ID}:
    get:
      tags:
      - "Bank Accounts (Dynamic Endpoint)"
      - "Dynamic-Endpoint"
      - "Dynamic"
      summary: "Get Bank Account By Id"
      description: "<p>Get Bank Account</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEndpointProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;url_pattern&quot;,\
        \        &quot;value&quot;:&quot;http://obp_mock//accounts/{account_id}&quot;\
        \    },    {        &quot;key&quot;:&quot;http_method&quot;,        &quot;value&quot;:&quot;GET&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEndpoint_GET_accounts_ACCOUNT_ID"
      parameters:
      - name: "ACCOUNT_ID"
        in: "path"
        description: "The account id"
        required: true
        type: "string"
        x-exportParamName: "ACCOUNTID"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_201_2"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/D-Entity1:
    get:
      tags:
      - "_D Entity1(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get D Entity1 List"
      description: "<p>Get D Entity1 List.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /D-Entity1?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getD-Entity1List_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_17"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_D Entity1(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new D Entity1"
      description: "<p>Create new D Entity1.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createD-Entity1_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_18"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_17_dentity1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/D-Entity1/D-ENTITY1_ID:
    get:
      tags:
      - "_D Entity1(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get D Entity1 by id"
      description: "<p>Get D Entity1 by id.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleD-Entity1_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_17_dentity1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_D Entity1(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update D Entity1"
      description: "<p>Update D Entity1.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateD-Entity1_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_19"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_17_dentity1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_D Entity1(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete D Entity1 by id"
      description: "<p>Delete D Entity1 by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;D-Entity1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteD-Entity1_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_20"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_17_dentity1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/InsurancePolicy:
    get:
      tags:
      - "_Insurance Policy(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Insurance Policy List"
      description: "<p>Get Insurance Policy List.</p><p>Which insurance policies the\
        \ customer already has.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /InsurancePolicy?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getInsurancePolicyList_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_18"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Insurance Policy(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Insurance Policy"
      description: "<p>Create new Insurance Policy.</p><p>Which insurance policies\
        \ the customer already has.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createInsurancePolicy_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_21"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_18_insurance_policy_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/InsurancePolicy/INSURANCE_POLICY_ID:
    get:
      tags:
      - "_Insurance Policy(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Insurance Policy by id"
      description: "<p>Get Insurance Policy by id.</p><p>Which insurance policies\
        \ the customer already has.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleInsurancePolicy_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_18_insurance_policy_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Insurance Policy(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Insurance Policy"
      description: "<p>Update Insurance Policy.</p><p>Which insurance policies the\
        \ customer already has.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateInsurancePolicy_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_22"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_18_insurance_policy_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Insurance Policy(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Insurance Policy by id"
      description: "<p>Delete Insurance Policy by id</p><p>MethodRouting settings\
        \ example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_deleteInsurancePolicy_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_23"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_18_insurance_policy_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/InsurancePremium:
    get:
      tags:
      - "_Insurance Premium(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Insurance Premium List"
      description: "<p>Get Insurance Premium List.</p><p>Retrive the premium for the\
        \ customer.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /InsurancePremium?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getInsurancePremiumList_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_19"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Insurance Premium(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Insurance Premium"
      description: "<p>Create new Insurance Premium.</p><p>Retrive the premium for\
        \ the customer.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createInsurancePremium_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_24"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_19_insurance_premium_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/InsurancePremium/INSURANCE_PREMIUM_ID:
    get:
      tags:
      - "_Insurance Premium(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Insurance Premium by id"
      description: "<p>Get Insurance Premium by id.</p><p>Retrive the premium for\
        \ the customer.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleInsurancePremium_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_19_insurance_premium_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Insurance Premium(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Insurance Premium"
      description: "<p>Update Insurance Premium.</p><p>Retrive the premium for the\
        \ customer.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateInsurancePremium_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_25"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_19_insurance_premium_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Insurance Premium(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Insurance Premium by id"
      description: "<p>Delete Insurance Premium by id</p><p>MethodRouting settings\
        \ example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_deleteInsurancePremium_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_26"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_19_insurance_premium_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/MarchHare:
    get:
      tags:
      - "_March Hare(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get March Hare List"
      description: "<p>Get March Hare List.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /MarchHare?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getMarchHareList_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_20"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_March Hare(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new March Hare"
      description: "<p>Create new March Hare.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createMarchHare_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_27"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_20_march_hare_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/MarchHare/MARCH_HARE_ID:
    get:
      tags:
      - "_March Hare(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get March Hare by id"
      description: "<p>Get March Hare by id.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleMarchHare_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_20_march_hare_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_March Hare(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update March Hare"
      description: "<p>Update March Hare.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateMarchHare_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_28"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_20_march_hare_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_March Hare(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete March Hare by id"
      description: "<p>Delete March Hare by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;MarchHare&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteMarchHare_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_29"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_20_march_hare_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/Odometer:
    get:
      tags:
      - "_Odometer(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Odometer List"
      description: "<p>Get Odometer List.</p><p>Verify odometer information for flexible\
        \ contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /Odometer?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getOdometerList_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_21"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Odometer(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Odometer"
      description: "<p>Create new Odometer.</p><p>Verify odometer information for\
        \ flexible contracts.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createOdometer_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_30"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_21_odometer_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/gh.29.uk/Odometer/ODOMETER_ID:
    get:
      tags:
      - "_Odometer(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Odometer by id"
      description: "<p>Get Odometer by id.</p><p>Verify odometer information for flexible\
        \ contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleOdometer_gh.29.uk"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_21_odometer_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Odometer(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Odometer"
      description: "<p>Update Odometer.</p><p>Verify odometer information for flexible\
        \ contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateOdometer_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_31"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_21_odometer_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Odometer(gh.29.uk)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Odometer by id"
      description: "<p>Delete Odometer by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;Odometer&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteOdometer_gh.29.uk"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_32"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_21_odometer_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/obp.testing.01/ObpActivity:
    get:
      tags:
      - "_Obp Activity(obp.testing.01)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Obp Activity List"
      description: "<p>Get Obp Activity List.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>username:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>created_date:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /ObpActivity?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getObpActivityList_obp.testing.01"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_22"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Obp Activity(obp.testing.01)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Obp Activity"
      description: "<p>Create new Obp Activity.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>username:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>created_date:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createObpActivity_obp.testing.01"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_33"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_22_obp_activity_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /banks/obp.testing.01/ObpActivity/OBP_ACTIVITY_ID:
    get:
      tags:
      - "_Obp Activity(obp.testing.01)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Obp Activity by id"
      description: "<p>Get Obp Activity by id.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>username:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>created_date:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleObpActivity_obp.testing.01"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_22_obp_activity_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Obp Activity(obp.testing.01)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Obp Activity"
      description: "<p>Update Obp Activity.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>username:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>created_date:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateObpActivity_obp.testing.01"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_34"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_22_obp_activity_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Obp Activity(obp.testing.01)"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Obp Activity by id"
      description: "<p>Delete Obp Activity by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;ObpActivity&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deleteObpActivity_obp.testing.01"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_35"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_22_obp_activity_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /customer_cars:
    get:
      tags:
      - "_Customer Cars"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Customer Cars List"
      description: "<p>Get Customer Cars List.</p><p>The car the customer arrived\
        \ in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier:\
        \ description of <strong>customer_identifier</strong> field, can be markdown\
        \ text.</li><li>manufacturer: description of <strong>manufacturer</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p><p>Can do filter on the fields<br />e.g: /customer_cars?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getcustomer_carsList_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_23"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Customer Cars"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Customer Cars"
      description: "<p>Create new Customer Cars.</p><p>The car the customer arrived\
        \ in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier:\
        \ description of <strong>customer_identifier</strong> field, can be markdown\
        \ text.</li><li>manufacturer: description of <strong>manufacturer</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_createcustomer_cars_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_36"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_23_customer_cars_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /customer_cars/CUSTOMER_CARS_ID:
    get:
      tags:
      - "_Customer Cars"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Customer Cars by id"
      description: "<p>Get Customer Cars by id.</p><p>The car the customer arrived\
        \ in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier:\
        \ description of <strong>customer_identifier</strong> field, can be markdown\
        \ text.</li><li>manufacturer: description of <strong>manufacturer</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_getSinglecustomer_cars_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_23_customer_cars_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Customer Cars"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Customer Cars"
      description: "<p>Update Customer Cars.</p><p>The car the customer arrived in</p><p><strong>Property\
        \ List:</strong></p><ul><li>customer_identifier: description of <strong>customer_identifier</strong>\
        \ field, can be markdown text.</li><li>manufacturer: description of <strong>manufacturer</strong>\
        \ field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_updatecustomer_cars_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_37"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_23_customer_cars_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Customer Cars"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Customer Cars by id"
      description: "<p>Delete Customer Cars by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deletecustomer_cars_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_38"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_23_customer_cars_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /my/test_daniel707:
    get:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get My Test Daniel707 List"
      description: "<p>Get My Test Daniel707 List.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /test_daniel707?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getMytest_daniel707List_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new My Test Daniel707"
      description: "<p>Create new My Test Daniel707.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createMytest_daniel707_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_39"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /my/test_daniel707/TEST_DANIEL707_ID:
    get:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get My Test Daniel707 by id"
      description: "<p>Get My Test Daniel707 by id.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingleMytest_daniel707_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update My Test Daniel707"
      description: "<p>Update My Test Daniel707.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updateMytest_daniel707_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_40"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete My Test Daniel707 by id"
      description: "<p>Delete My Test Daniel707 by id</p><p>MethodRouting settings\
        \ example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_deleteMytest_daniel707_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_41"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /sustrans:
    get:
      tags:
      - "_Sustrans"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Sustrans List"
      description: "<p>Get Sustrans List.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /sustrans?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_getsustransList_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_25"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Sustrans"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Sustrans"
      description: "<p>Create new Sustrans.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createsustrans_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_42"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_25_sustrans_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /sustrans/SUSTRANS_ID:
    get:
      tags:
      - "_Sustrans"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Sustrans by id"
      description: "<p>Get Sustrans by id.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSinglesustrans_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_25_sustrans_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Sustrans"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Sustrans"
      description: "<p>Update Sustrans.</p><p>Description of this entity, can be markdown\
        \ text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updatesustrans_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_43"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_25_sustrans_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Sustrans"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Sustrans by id"
      description: "<p>Delete Sustrans by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;sustrans&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deletesustrans_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_44"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_25_sustrans_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /test-dynamic-resource-doc/my_user/MY_USER_ID:
    post:
      tags:
      - "Dynamic-Resource-Doc"
      summary: "A test endpoint"
      description: "<p>A test endpoint.</p><p>Just for debug method body of dynamic\
        \ resource doc.<br />better watch the following introduction video first<br\
        \ />* <a href=\"https://vimeo.com/623381607\">Dynamic resourceDoc version1</a></p><p>The\
        \ endpoint return the response from PractiseEndpoint code.<br />Here, code.api.DynamicEndpoints.dynamic.practise.PractiseEndpoint.process<br\
        \ />You can test the method body grammar, and try the business logic, but\
        \ need to restart the OBP-API code .</p><p>Authentication is Optional</p>"
      operationId: "test-dynamic-resource-doc"
      parameters:
      - in: "body"
        name: "body"
        description: "RequestRootJsonClass object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/RequestRootJsonClass"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/RequestRootJsonClass"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUnknownError"
  /test1:
    get:
      tags:
      - "_Test1"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Test1 List"
      description: "<p>Get Test1 List.</p><p>Description of this entity, can be markdown\
        \ text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /test1?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_gettest1List_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_26"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Test1"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Test1"
      description: "<p>Create new Test1.</p><p>Description of this entity, can be\
        \ markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createtest1_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_45"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_26_test1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /test1/TEST1_ID:
    get:
      tags:
      - "_Test1"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Test1 by id"
      description: "<p>Get Test1 by id.</p><p>Description of this entity, can be markdown\
        \ text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingletest1_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_26_test1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Test1"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Test1"
      description: "<p>Update Test1.</p><p>Description of this entity, can be markdown\
        \ text.</p><p><strong>Property List:</strong></p><ul><li>name: description\
        \ of <strong>name</strong> field, can be markdown text.</li><li>number: description\
        \ of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updatetest1_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_46"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_26_test1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Test1"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Test1 by id"
      description: "<p>Delete Test1 by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;test1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deletetest1_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_47"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_26_test1_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /test_daniel707:
    get:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Test Daniel707 List"
      description: "<p>Get Test Daniel707 List.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can\
        \ do filter on the fields<br />e.g: /test_daniel707?name=James%20Brown&amp;number=123.456&amp;number=11.11<br\
        \ />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp;\
        \ (number==123.456 || number=11.11)</p>"
      operationId: "dynamicEntity_gettest_daniel707List_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    post:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Create new Test Daniel707"
      description: "<p>Create new Test Daniel707.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_createtest_daniel707_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_48"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
  /test_daniel707/TEST_DANIEL707_ID:
    get:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Get Test Daniel707 by id"
      description: "<p>Get Test Daniel707 by id.</p><p>Description of this entity,\
        \ can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_getSingletest_daniel707_"
      parameters: []
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    put:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Update Test Daniel707"
      description: "<p>Update Test Daniel707.</p><p>Description of this entity, can\
        \ be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name:\
        \ description of <strong>name</strong> field, can be markdown text.</li><li>number:\
        \ description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting\
        \ settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,\
        \  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,\
        \  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[ \
        \   {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;\
        \    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;\
        \    }  ]}</code></pre></details><p>Authentication is Mandatory</p>"
      operationId: "dynamicEntity_updatetest_daniel707_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_49"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
    delete:
      tags:
      - "_Test Daniel707"
      - "Dynamic-Entity"
      - "Dynamic"
      summary: "Delete Test Daniel707 by id"
      description: "<p>Delete Test Daniel707 by id</p><p>MethodRouting settings example:</p><details><pre><code>{\
        \  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,\
        \  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,\
        \  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,\
        \        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,\
        \        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication\
        \ is Mandatory</p>"
      operationId: "dynamicEntity_deletetest_daniel707_"
      parameters:
      - in: "body"
        name: "body"
        description: "JObject object that needs to be added."
        required: true
        schema:
          $ref: "#/definitions/body_50"
        x-exportParamName: "Body"
      security:
      - directLogin: []
        gatewayLogin: []
      responses:
        "204":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
        "400":
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorUserNotLoggedIn"
securityDefinitions:
  directLogin:
    description: "https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login"
    type: "apiKey"
    name: "Authorization"
    in: "header"
  gatewayLogin:
    description: "https://github.com/OpenBankProject/OBP-API/wiki/Gateway-Login"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  ErrorInvalidJsonFormat:
    properties:
      message:
        type: "string"
        example: "OBP-10001: Incorrect json format."
  ErrorInvalidISOCurrencyCode:
    properties:
      message:
        type: "string"
        example: "OBP-10003: Invalid Currency Value. It should be three letters ISO\
          \ Currency Code. "
  ErrorInvalidDateFormat:
    properties:
      message:
        type: "string"
        example: "OBP-10005: Invalid Date Format. Could not convert value to a Date."
  ErrorFilterSortDirectionError:
    properties:
      message:
        type: "string"
        example: "OBP-10023: obp_sort_direction parameter can only take two values:\
          \ DESC or ASC!"
  ErrorUserNotLoggedIn:
    properties:
      message:
        type: "string"
        example: "OBP-20001: User not logged in. Authentication is required!"
  ErrorUserHasMissingRoles:
    properties:
      message:
        type: "string"
        example: "OBP-20006: User is missing one or more roles: "
  ErrorUserNotFoundByUserId:
    properties:
      message:
        type: "string"
        example: "OBP-20057: User not found by userId."
  ErrorBankNotFound:
    properties:
      message:
        type: "string"
        example: "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
  ErrorUserCustomerLinksNotFoundForUser:
    properties:
      message:
        type: "string"
        example: "OBP-30008: User Customer Link not found by USER_ID"
  ErrorBranchNotFoundByBranchId:
    properties:
      message:
        type: "string"
        example: "OBP-300010: Branch not found. Please specify a valid value for BRANCH_ID.\
          \ Or License may not be set. meta.license.id and meta.license.name can not\
          \ be empty"
  ErrorProductNotFoundByProductCode:
    properties:
      message:
        type: "string"
        example: "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE."
  ErrorBankAccountNotFound:
    properties:
      message:
        type: "string"
        example: "OBP-30018: Bank Account not found. Please specify valid values for\
          \ BANK_ID and ACCOUNT_ID. "
  ErrorNoViewPermission:
    properties:
      message:
        type: "string"
        example: "OBP-30022: The current view does not have the permission:"
  ErrorCannotGetAccounts:
    properties:
      message:
        type: "string"
        example: "OBP-30066: Could not get accounts."
  ErrorUnknownError:
    properties:
      message:
        type: "string"
        example: "OBP-50000: Unknown Error."
  NotSupportedYet: {}
  BankAccountNotificationWebhookJson:
    required:
    - "bank_id"
    - "created_by_user_id"
    - "http_method"
    - "http_protocol"
    - "trigger_name"
    - "url"
    - "webhook_id"
    properties:
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      url:
        type: "string"
        example: "https://localhost.openbankproject.com"
      trigger_name:
        type: "string"
        example: "OnCreateTransaction"
      http_protocol:
        type: "string"
        example: "HTTP/1.1"
      http_method:
        type: "string"
        example: "POST"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      webhook_id:
        type: "string"
        example: "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
    example:
      trigger_name: "OnCreateTransaction"
      http_method: "POST"
      http_protocol: "HTTP/1.1"
      webhook_id: "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
      bank_id: "gh.29.uk"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      url: "https://localhost.openbankproject.com"
  AttributeDefinitionResponseJsonV400:
    required:
    - "alias"
    - "attribute_definition_id"
    - "bank_id"
    - "can_be_seen_on_views"
    - "category"
    - "description"
    - "is_active"
    - "name"
    - "type"
    properties:
      name:
        type: "string"
        example: "SPECIAL_TAX_NUMBER"
      is_active:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "description"
      attribute_definition_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      alias:
        type: "string"
        example: "STRING"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      can_be_seen_on_views:
        type: "array"
        items:
          type: "string"
      category:
        type: "string"
        example: "Card"
      type:
        type: "string"
        example: "STRING"
    example:
      is_active: true
      can_be_seen_on_views:
      - "can_be_seen_on_views"
      - "can_be_seen_on_views"
      bank_id: "gh.29.uk"
      name: "SPECIAL_TAX_NUMBER"
      description: "description"
      alias: "STRING"
      attribute_definition_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      category: "Card"
      type: "STRING"
  EndpointTagJson400:
    required:
    - "tag_name"
    properties:
      tag_name:
        type: "string"
        example: "BankAccountTag1"
  ProductAttributeResponseWithoutBankIdJson:
    required:
    - "name"
    - "product_attribute_id"
    - "product_code"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      product_attribute_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_code:
        type: "string"
        example: "1234BW"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "2012-04-23"
    example:
      name: "OVERDRAFT_START_DATE"
      product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_code: "1234BW"
      type: "DATE_WITH_DAY"
      value: "2012-04-23"
  PostCreateUserWithRolesJsonV400:
    required:
    - "provider"
    - "roles"
    - "username"
    properties:
      username:
        type: "string"
        example: "felixsmith"
      provider:
        type: "string"
        example: "dauth.ETHEREUM"
      roles:
        type: "array"
        items:
          $ref: "#/definitions/CreateEntitlementJSON"
  CreateAccountRequestJsonV500:
    required:
    - "label"
    - "product_code"
    properties:
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      product_code:
        type: "string"
        example: "1234BW"
  AkkaJSON:
    required:
    - "log_level"
    - "ports"
    properties:
      ports:
        type: "array"
        items:
          $ref: "#/definitions/PortJSON"
      log_level:
        type: "string"
        example: "Debug"
      remote_data_secret_matched:
        type: "boolean"
        example: true
    example:
      remote_data_secret_matched: true
      log_level: "Debug"
      ports:
      - property: "default"
        value: "8080"
      - property: "default"
        value: "8080"
  TransactionRequestRefundFrom:
    required:
    - "counterparty_id"
    properties:
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  PostRevokeGrantAccountAccessJsonV400:
    required:
    - "views"
    properties:
      views:
        type: "array"
        items:
          type: "string"
  AddCustomerMessageJson:
    required:
    - "from_department"
    - "from_person"
    - "message"
    properties:
      message:
        type: "string"
        example: "String"
      from_department:
        type: "string"
        example: "String"
      from_person:
        type: "string"
        example: "String"
  TransactionRequestBodyFreeFormJSON:
    required:
    - "description"
    - "value"
    properties:
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      description:
        type: "string"
        example: "This is a FREE_FORM Transaction Request"
  ProductsJsonV400:
    required:
    - "products"
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductJsonV400"
    example:
      products:
      - fees:
        - is_active: true
          name: "ACCOUNT_MANAGEMENT_FEE"
          more_info: "More information about this fee"
          value:
            amount: "10.12"
            currency: "EUR"
            type: ""
            frequency: "DAILY"
          product_fee_id: "696hlAHLFKUHE37469287634"
        - is_active: true
          name: "ACCOUNT_MANAGEMENT_FEE"
          more_info: "More information about this fee"
          value:
            amount: "10.12"
            currency: "EUR"
            type: ""
            frequency: "DAILY"
          product_fee_id: "696hlAHLFKUHE37469287634"
        bank_id: "gh.29.uk"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Deposit Account 1"
        parent_product_code: "787LOW"
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        attributes:
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        terms_and_conditions_url: "www.example.com/xyz"
        product_code: "1234BW"
        more_info_url: "www.example.com/abc"
      - fees:
        - is_active: true
          name: "ACCOUNT_MANAGEMENT_FEE"
          more_info: "More information about this fee"
          value:
            amount: "10.12"
            currency: "EUR"
            type: ""
            frequency: "DAILY"
          product_fee_id: "696hlAHLFKUHE37469287634"
        - is_active: true
          name: "ACCOUNT_MANAGEMENT_FEE"
          more_info: "More information about this fee"
          value:
            amount: "10.12"
            currency: "EUR"
            type: ""
            frequency: "DAILY"
          product_fee_id: "696hlAHLFKUHE37469287634"
        bank_id: "gh.29.uk"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Deposit Account 1"
        parent_product_code: "787LOW"
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        attributes:
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        terms_and_conditions_url: "www.example.com/xyz"
        product_code: "1234BW"
        more_info_url: "www.example.com/abc"
  TransactionAttributeJsonV400:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "HOUSE_RENT"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "123456789"
  PhysicalCardsJsonV310:
    required:
    - "cards"
    properties:
      cards:
        type: "array"
        items:
          $ref: "#/definitions/PhysicalCardJsonV310"
    example:
      cards:
      - allows:
        - "allows"
        - "allows"
        card_number: "364435172576215"
        expires_date: "1100-01-01T00:00:00Z"
        collected: "1100-01-01T00:00:00Z"
        serial_number: "1324234"
        technology: "technologyString1"
        networks:
        - "networks"
        - "networks"
        card_type: "Credit"
        enabled: true
        card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
        pin_reset:
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        valid_from_date: "1100-01-01T00:00:00Z"
        posted: "1100-01-01T00:00:00Z"
        issue_number: "1"
        bank_id: "gh.29.uk"
        cancelled: true
        on_hot_list: true
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        replacement:
          requested_date: "1100-01-01T00:00:00Z"
          reason_requested: "RENEW"
        account:
          views_available:
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          bank_id: "gh.29.uk"
          id: "123"
          label: "OBP"
        name_on_card: "SusanSmith"
      - allows:
        - "allows"
        - "allows"
        card_number: "364435172576215"
        expires_date: "1100-01-01T00:00:00Z"
        collected: "1100-01-01T00:00:00Z"
        serial_number: "1324234"
        technology: "technologyString1"
        networks:
        - "networks"
        - "networks"
        card_type: "Credit"
        enabled: true
        card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
        pin_reset:
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        valid_from_date: "1100-01-01T00:00:00Z"
        posted: "1100-01-01T00:00:00Z"
        issue_number: "1"
        bank_id: "gh.29.uk"
        cancelled: true
        on_hot_list: true
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        replacement:
          requested_date: "1100-01-01T00:00:00Z"
          reason_requested: "RENEW"
        account:
          views_available:
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          bank_id: "gh.29.uk"
          id: "123"
          label: "OBP"
        name_on_card: "SusanSmith"
  PostCustomerAddressJsonV310:
    required:
    - "city"
    - "country_code"
    - "county"
    - "line_1"
    - "line_2"
    - "line_3"
    - "postcode"
    - "state"
    - "status"
    - "tags"
    properties:
      city:
        type: "string"
        example: "Berlin"
      line_2:
        type: "string"
        example: "The Place"
      state:
        type: "string"
        example: "Brandenburg"
      tags:
        type: "array"
        items:
          type: "string"
      postcode:
        type: "string"
        example: "13359"
      county:
        type: "string"
        example: ""
      country_code:
        type: "string"
        example: "DE"
      status:
        type: "string"
        example: "OK"
      line_3:
        type: "string"
        example: "The Hill"
      line_1:
        type: "string"
        example: "No 1 the Road"
  BankLevelEndpointTagResponseJson400:
    required:
    - "bank_id"
    - "endpoint_tag_id"
    - "operation_id"
    - "tag_name"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      endpoint_tag_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      operation_id:
        type: "string"
        example: "OBPv4.0.0-getBanks"
      tag_name:
        type: "string"
        example: "BankAccountTag1"
    example:
      bank_id: "gh.29.uk"
      tag_name: "BankAccountTag1"
      operation_id: "OBPv4.0.0-getBanks"
      endpoint_tag_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  AccessibilityFeaturesJson:
    required:
    - "accessibility_features"
    properties:
      accessibility_features:
        type: "array"
        items:
          type: "string"
  AmountOfMoneyJsonV121:
    required:
    - "amount"
    - "currency"
    properties:
      currency:
        type: "string"
        example: "EUR"
      amount:
        type: "string"
        example: "0"
    example:
      amount: "0"
      currency: "EUR"
  PostApiCollectionEndpointJson400:
    required:
    - "operation_id"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-getBanks"
  PutUpdateCustomerNumberJsonV310:
    required:
    - "customer_number"
    properties:
      customer_number:
        type: "string"
        example: "5987953"
  SupportedLanguagesJson:
    required:
    - "supported_languages"
    properties:
      supported_languages:
        type: "array"
        items:
          type: "string"
  ProductCollectionJsonV310:
    required:
    - "collection_code"
    - "items"
    - "product_code"
    properties:
      collection_code:
        type: "string"
        example: "C"
      product_code:
        type: "string"
        example: "1234BW"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ProductCollectionItemJsonV310"
    example:
      collection_code: "C"
      product_code: "1234BW"
      items:
      - member_product_code: "A"
      - member_product_code: "A"
  CustomerWithAttributesJsonV300:
    required:
    - "bank_id"
    - "branch_id"
    - "customer_attributes"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "dependants"
    - "dob_of_dependants"
    - "email"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "kyc_status"
    - "last_ok_date"
    - "legal_name"
    - "mobile_phone_number"
    - "name_suffix"
    - "relationship_status"
    - "title"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      customer_attributes:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAttributeResponseJsonV300"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        example: "19900101"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      title:
        type: "string"
        example: "Dr."
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
    example:
      kyc_status: true
      highest_education_attained: "Master"
      name_suffix: "Sr"
      customer_number: "5987953"
      date_of_birth: "19900101"
      face_image:
        date: "1100-01-01T00:00:00Z"
        url: "www.openbankproject"
      title: "Dr."
      mobile_phone_number: "+44 07972 444 876"
      dob_of_dependants:
      - "dob_of_dependants"
      - "dob_of_dependants"
      credit_rating:
        rating: "OBP"
        source: "OBP"
      relationship_status: "single"
      branch_id: "DERBY6"
      last_ok_date: "2023-02-05T14:15:53Z"
      dependants: 1
      bank_id: "gh.29.uk"
      credit_limit:
        amount: "0"
        currency: "EUR"
      customer_attributes:
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      employment_status: "worker"
      legal_name: "Eveline Tripman"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email: "felixsmith@example.com"
  WarehouseJSON:
    required:
    - "property"
    - "value"
    properties:
      property:
        type: "string"
        example: "String"
      value:
        type: "string"
        example: "ElasticSearch"
    example:
      property: "String"
      value: "ElasticSearch"
  PostCustomerNumberJsonV310:
    required:
    - "customer_number"
    properties:
      customer_number:
        type: "string"
        example: "5987953"
  LogoutLinkJson:
    required:
    - "link"
    properties:
      link:
        type: "string"
        example: "127.0.0.1:8080/user_mgt/logout"
    example:
      link: "127.0.0.1:8080/user_mgt/logout"
  AtmAttributesResponseJsonV510:
    required:
    - "atm_attributes"
    properties:
      atm_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AtmAttributeResponseJsonV510"
    example:
      atm_attributes:
      - is_active: true
        atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
        bank_id: "gh.29.uk"
        name: "ACCOUNT_MANAGEMENT_FEE"
        atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        type: ""
        value: "5987953"
      - is_active: true
        atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
        bank_id: "gh.29.uk"
        name: "ACCOUNT_MANAGEMENT_FEE"
        atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        type: ""
        value: "5987953"
  JsonValidationV400:
    required:
    - "json_schema"
    - "operation_id"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-createXxx"
      json_schema:
        $ref: "#/definitions/JsonSchemaV400"
    example:
      json_schema:
        $schema: "http://json-schema.org/draft-07/schema"
        description: "The demo json-schema"
        additionalProperties: true
        title: "The demo schema"
        type: "object"
        properties:
          xxx_id:
            examples:
            - "examples"
            - "examples"
            minLength: 2
            type: "string"
            maxLength: 50
        required:
        - "required"
        - "required"
      operation_id: "OBPv4.0.0-createXxx"
  TransactionRequestWithChargeJSONs210:
    required:
    - "transaction_requests_with_charges"
    properties:
      transaction_requests_with_charges:
        type: "array"
        items:
          $ref: "#/definitions/TransactionRequestWithChargeJSON210"
    example:
      transaction_requests_with_charges:
      - end_date: "1100-01-01T00:00:00Z"
        charge:
          summary: "Rent the flat"
          value:
            amount: "0"
            currency: "EUR"
        challenge:
          challenge_type: "SANDBOX_TAN"
          allowed_attempts: 3
          id: "be1a183d-b301-4b83-b855-5eeffdd3526f"
        from:
          account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
          bank_id: "gh.29.uk"
        details:
          to_sepa_credit_transfers:
            debtorAccount:
              iban: "GB33BUKB20201555555555"
            creditorName: "John Miles"
            creditorAccount:
              iban: "GB33BUKB20201555555555"
            instructedAmount:
              amount: "0"
              currency: "EUR"
          to_counterparty:
            counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          to_sandbox_tan:
            account_id: "String"
            bank_id: "String"
          description: "This an optional field. Maximum length is 2000. It can be\
            \ any characters here."
          to_transfer_to_account:
            description: "String"
            to:
              bank_code: "String"
              branch_number: "String"
              name: "String"
              account:
                number: "String"
                iban: "String"
            transfer_type: "String"
            value:
              amount: "0"
              currency: "EUR"
            future_date: "20181230"
          to_simple:
            otherBranchRoutingAddress: "DERBY6"
            otherBankRoutingScheme: "BIC"
            otherBranchRoutingScheme: "BRANCH-CODE"
            otherBankRoutingAddress: "GENODEM1GLS"
            otherAccountSecondaryRoutingScheme: "IBAN"
            otherAccountRoutingAddress: "DE91 1000 0000 0123 4567 89"
            otherAccountSecondaryRoutingAddress: "DE91 1000 0000 0123 4567 89"
            otherAccountRoutingScheme: "IBAN"
          to_sepa:
            iban: "String"
          to_transfer_to_phone:
            description: "String"
            from:
              nickname: "String"
              mobile_phone_number: "+44 07972 444 876"
            to:
              mobile_phone_number: "+44 07972 444 876"
            message: "String"
            value:
              amount: "0"
              currency: "EUR"
          to_transfer_to_atm:
            description: "String"
            from:
              nickname: "String"
              mobile_phone_number: "+44 07972 444 876"
            to:
              kyc_document:
                number: "String"
                type: "String"
              date_of_birth: "20181230"
              legal_name: "Eveline Tripman"
              mobile_phone_number: "+44 07972 444 876"
            message: "String"
            value:
              amount: "0"
              currency: "EUR"
          value:
            amount: "100"
            currency: "EUR"
        id: "4050046c-63b3-4868-8a22-14b4181d33a6"
        transaction_ids:
        - "transaction_ids"
        - "transaction_ids"
        type: "SANDBOX_TAN"
        start_date: "1100-01-01T00:00:00Z"
        status: "COMPLETED"
      - end_date: "1100-01-01T00:00:00Z"
        charge:
          summary: "Rent the flat"
          value:
            amount: "0"
            currency: "EUR"
        challenge:
          challenge_type: "SANDBOX_TAN"
          allowed_attempts: 3
          id: "be1a183d-b301-4b83-b855-5eeffdd3526f"
        from:
          account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
          bank_id: "gh.29.uk"
        details:
          to_sepa_credit_transfers:
            debtorAccount:
              iban: "GB33BUKB20201555555555"
            creditorName: "John Miles"
            creditorAccount:
              iban: "GB33BUKB20201555555555"
            instructedAmount:
              amount: "0"
              currency: "EUR"
          to_counterparty:
            counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          to_sandbox_tan:
            account_id: "String"
            bank_id: "String"
          description: "This an optional field. Maximum length is 2000. It can be\
            \ any characters here."
          to_transfer_to_account:
            description: "String"
            to:
              bank_code: "String"
              branch_number: "String"
              name: "String"
              account:
                number: "String"
                iban: "String"
            transfer_type: "String"
            value:
              amount: "0"
              currency: "EUR"
            future_date: "20181230"
          to_simple:
            otherBranchRoutingAddress: "DERBY6"
            otherBankRoutingScheme: "BIC"
            otherBranchRoutingScheme: "BRANCH-CODE"
            otherBankRoutingAddress: "GENODEM1GLS"
            otherAccountSecondaryRoutingScheme: "IBAN"
            otherAccountRoutingAddress: "DE91 1000 0000 0123 4567 89"
            otherAccountSecondaryRoutingAddress: "DE91 1000 0000 0123 4567 89"
            otherAccountRoutingScheme: "IBAN"
          to_sepa:
            iban: "String"
          to_transfer_to_phone:
            description: "String"
            from:
              nickname: "String"
              mobile_phone_number: "+44 07972 444 876"
            to:
              mobile_phone_number: "+44 07972 444 876"
            message: "String"
            value:
              amount: "0"
              currency: "EUR"
          to_transfer_to_atm:
            description: "String"
            from:
              nickname: "String"
              mobile_phone_number: "+44 07972 444 876"
            to:
              kyc_document:
                number: "String"
                type: "String"
              date_of_birth: "20181230"
              legal_name: "Eveline Tripman"
              mobile_phone_number: "+44 07972 444 876"
            message: "String"
            value:
              amount: "0"
              currency: "EUR"
          value:
            amount: "100"
            currency: "EUR"
        id: "4050046c-63b3-4868-8a22-14b4181d33a6"
        transaction_ids:
        - "transaction_ids"
        - "transaction_ids"
        type: "SANDBOX_TAN"
        start_date: "1100-01-01T00:00:00Z"
        status: "COMPLETED"
  LicenseJsonV140:
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        example: "ODbL-1.0"
      name:
        type: "string"
        example: "Open Database License"
    example:
      name: "Open Database License"
      id: "ODbL-1.0"
  AvailableRolesJSON:
    required:
    - "roles"
    properties:
      roles:
        type: "array"
        items:
          $ref: "#/definitions/AvailableRoleJSON"
    example:
      roles:
      - role: "CanCreateBranch"
        requires_bank_id: true
      - role: "CanCreateBranch"
        requires_bank_id: true
  CounterpartyMetadataJson:
    required:
    - "corporate_location"
    - "image_url"
    - "more_info"
    - "open_corporates_url"
    - "physical_location"
    - "private_alias"
    - "public_alias"
    - "url"
    properties:
      public_alias:
        type: "string"
        example: "String"
      physical_location:
        $ref: "#/definitions/LocationJsonV210"
      image_url:
        type: "string"
        example: "String"
      private_alias:
        type: "string"
        example: "String"
      url:
        type: "string"
        example: "String"
      more_info:
        type: "string"
        example: "String"
      corporate_location:
        $ref: "#/definitions/LocationJsonV210"
      open_corporates_url:
        type: "string"
        example: "String"
    example:
      open_corporates_url: "String"
      private_alias: "String"
      image_url: "String"
      corporate_location:
        date: "1100-01-01T00:00:00Z"
        latitude: 11.45
        user:
          provider: "http://127.0.0.1:8080"
          id: "123"
          username: "felixsmith"
        longitude: 11.45
      more_info: "String"
      public_alias: "String"
      url: "String"
      physical_location:
        date: "1100-01-01T00:00:00Z"
        latitude: 11.45
        user:
          provider: "http://127.0.0.1:8080"
          id: "123"
          username: "felixsmith"
        longitude: 11.45
  CorporateLocationJSON:
    required:
    - "corporate_location"
    properties:
      corporate_location:
        $ref: "#/definitions/LocationPlainJSON"
  AccountMinimalJson400:
    required:
    - "account_id"
    - "bank_id"
    - "view_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      view_id:
        type: "string"
        example: "owner"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      bank_id: "gh.29.uk"
      view_id: "owner"
  AccountWebhookJson:
    required:
    - "account_id"
    - "account_webhook_id"
    - "bank_id"
    - "created_by_user_id"
    - "http_method"
    - "http_protocol"
    - "is_active"
    - "trigger_name"
    - "url"
    properties:
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      is_active:
        type: "boolean"
        example: true
      url:
        type: "string"
        example: "https://localhost.openbankproject.com"
      trigger_name:
        type: "string"
        example: "OnBalanceChange"
      http_protocol:
        type: "string"
        example: "HTTP/1.1"
      account_webhook_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      http_method:
        type: "string"
        example: "POST"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      trigger_name: "OnBalanceChange"
      is_active: true
      http_method: "POST"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      http_protocol: "HTTP/1.1"
      account_webhook_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      bank_id: "gh.29.uk"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      url: "https://localhost.openbankproject.com"
  SupportedCurrenciesJson:
    required:
    - "supported_currencies"
    properties:
      supported_currencies:
        type: "array"
        items:
          type: "string"
  AccountApplicationJson:
    required:
    - "product_code"
    properties:
      product_code:
        type: "string"
        example: "1234BW"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  FastFirehoseAccountJsonV400:
    required:
    - "account_attributes"
    - "account_routings"
    - "balance"
    - "bank_id"
    - "id"
    - "label"
    - "number"
    - "owners"
    - "product_code"
    properties:
      number:
        type: "string"
        example: ""
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/FastFirehoseAttributes"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/FastFirehoseRoutings"
      label:
        type: "string"
        example: "My Account"
      owners:
        type: "array"
        items:
          $ref: "#/definitions/FastFirehoseOwners"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      product_code:
        type: "string"
        example: "1234BW"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      number: ""
      account_attributes:
      - code: "Loan1"
        type: "INTEGER"
        value: "0"
      - code: "Loan1"
        type: "INTEGER"
        value: "0"
      balance:
        amount: "0"
        currency: "EUR"
      account_routings:
      - account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
        bank_id: "bisb.com"
      - account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
        bank_id: "bisb.com"
      bank_id: "gh.29.uk"
      owners:
      - user_id: "b27327a2-a822-41e5-a909-0150da688939"
        provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
        user_name: ""
      - user_id: "b27327a2-a822-41e5-a909-0150da688939"
        provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
        user_name: ""
      label: "My Account"
      id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      product_code: "1234BW"
  CustomerMinimalJsonV400:
    required:
    - "bank_id"
    - "customer_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
    example:
      bank_id: "gh.29.uk"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  GlossaryDescriptionJsonV300:
    required:
    - "html"
    - "markdown"
    properties:
      markdown:
        type: "string"
        example: "String"
      html:
        type: "string"
        example: "String"
    example:
      markdown: "String"
      html: "String"
  TransactionRequestTransferToAccount:
    required:
    - "description"
    - "future_date"
    - "to"
    - "transfer_type"
    - "value"
    properties:
      description:
        type: "string"
        example: "String"
      future_date:
        type: "string"
        example: "20181230"
      to:
        $ref: "#/definitions/ToAccountTransferToAccount"
      transfer_type:
        type: "string"
        example: "String"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
    example:
      description: "String"
      to:
        bank_code: "String"
        branch_number: "String"
        name: "String"
        account:
          number: "String"
          iban: "String"
      transfer_type: "String"
      value:
        amount: "0"
        currency: "EUR"
      future_date: "20181230"
  ViewIdJsonV500:
    required:
    - "id"
    properties:
      id:
        type: "string"
        example: "owner"
    example:
      id: "owner"
  ChallengeAnswerJson400:
    required:
    - "answer"
    - "id"
    properties:
      id:
        type: "string"
        example: "This is challenge.id, you can get it from `Create Transaction Request.`\
          \ response, only is useful if status ==`INITIATED` there."
      answer:
        type: "string"
        example: "123"
      reason_code:
        type: "string"
        example: "[Optional] Reason code for REJECT answer (e.g. 'CUST')"
      additional_information:
        type: "string"
        example: "[Optional] Additional description for REJECT answer"
  TopConsumerJson:
    required:
    - "app_name"
    - "consumer_id"
    - "count"
    - "developer_email"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 7076
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      app_name:
        type: "string"
        example: "Api Explorer"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
    example:
      consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      app_name: "Api Explorer"
      developer_email: "felixsmith@example.com"
      count: 7076
  AttributeDefinitionJsonV400:
    required:
    - "alias"
    - "can_be_seen_on_views"
    - "category"
    - "description"
    - "is_active"
    - "name"
    - "type"
    properties:
      name:
        type: "string"
        example: "SPECIAL_TAX_NUMBER"
      is_active:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "description"
      alias:
        type: "string"
        example: "STRING"
      can_be_seen_on_views:
        type: "array"
        items:
          type: "string"
      category:
        type: "string"
        example: "TransactionRequest"
      type:
        type: "string"
        example: "STRING"
    example:
      is_active: true
      can_be_seen_on_views:
      - "can_be_seen_on_views"
      - "can_be_seen_on_views"
      name: "SPECIAL_TAX_NUMBER"
      description: "description"
      alias: "STRING"
      category: "TransactionRequest"
      type: "STRING"
  AccountNotificationWebhookPostJson:
    required:
    - "http_method"
    - "http_protocol"
    - "url"
    properties:
      url:
        type: "string"
        example: "https://localhost.openbankproject.com"
      http_method:
        type: "string"
        example: "POST"
      http_protocol:
        type: "string"
        example: "HTTP/1.1"
  ResourceUserJSON:
    required:
    - "email"
    - "provider"
    - "provider_id"
    - "user_id"
    - "username"
    properties:
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      email:
        type: "string"
        example: "felixsmith@example.com"
      username:
        type: "string"
        example: "felixsmith"
      provider_id:
        type: "string"
        example: "Chris"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
    example:
      provider: "http://127.0.0.1:8080"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      provider_id: "Chris"
      email: "felixsmith@example.com"
      username: "felixsmith"
  OtherAccountJsonV300:
    required:
    - "account_routings"
    - "bank_routing"
    - "holder"
    - "id"
    - "metadata"
    properties:
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      holder:
        $ref: "#/definitions/AccountHolderJSON"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      metadata:
        $ref: "#/definitions/OtherAccountMetadataJSON"
      bank_routing:
        $ref: "#/definitions/BankRoutingJsonV121"
    example:
      metadata:
        open_corporates_URL: "www.openbankproject.com"
        private_alias: "NONE"
        image_URL: "www.openbankproject.com"
        corporate_location:
          date: "1100-01-01T00:00:00Z"
          latitude: 1.231
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          longitude: 1.231
        more_info: "www.openbankproject.com"
        public_alias: "NONE"
        URL: "www.openbankproject.com"
        physical_location:
          date: "1100-01-01T00:00:00Z"
          latitude: 1.231
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          longitude: 1.231
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      holder:
        is_alias: true
        name: "OBP"
      bank_routing:
        address: ""
        scheme: "scheme value"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  AttributeDefinitionsResponseJsonV400:
    required:
    - "attributes"
    properties:
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/AttributeDefinitionResponseJsonV400"
    example:
      attributes:
      - is_active: true
        can_be_seen_on_views:
        - "can_be_seen_on_views"
        - "can_be_seen_on_views"
        bank_id: "gh.29.uk"
        name: "SPECIAL_TAX_NUMBER"
        description: "description"
        alias: "STRING"
        attribute_definition_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        category: "Card"
        type: "STRING"
      - is_active: true
        can_be_seen_on_views:
        - "can_be_seen_on_views"
        - "can_be_seen_on_views"
        bank_id: "gh.29.uk"
        name: "SPECIAL_TAX_NUMBER"
        description: "description"
        alias: "STRING"
        attribute_definition_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        category: "Card"
        type: "STRING"
  PostKycDocumentJSON:
    required:
    - "customer_number"
    - "expiry_date"
    - "issue_date"
    - "issue_place"
    - "number"
    - "type"
    properties:
      number:
        type: "string"
        example: "12345"
      customer_number:
        type: "string"
        example: "5987953"
      issue_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      type:
        type: "string"
        example: "passport"
      issue_place:
        type: "string"
        example: "Berlin"
      expiry_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
  ChallengeJsonV400:
    required:
    - "allowed_attempts"
    - "challenge_type"
    - "id"
    - "link"
    - "user_id"
    properties:
      allowed_attempts:
        type: "integer"
        format: "int32"
        example: 3
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      id:
        type: "string"
        example: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      link:
        type: "string"
        example: "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
      challenge_type:
        type: "string"
        example: "OBP_TRANSACTION_REQUEST_CHALLENGE"
    example:
      challenge_type: "OBP_TRANSACTION_REQUEST_CHALLENGE"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      link: "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
      allowed_attempts: 3
      id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
  PhysicalCardJsonV500:
    required:
    - "account"
    - "allows"
    - "bank_id"
    - "brand"
    - "cancelled"
    - "card_id"
    - "card_number"
    - "card_type"
    - "collected"
    - "customer_id"
    - "cvv"
    - "enabled"
    - "expires_date"
    - "issue_number"
    - "name_on_card"
    - "networks"
    - "on_hot_list"
    - "pin_reset"
    - "posted"
    - "replacement"
    - "serial_number"
    - "technology"
    - "valid_from_date"
    properties:
      allows:
        type: "array"
        items:
          type: "string"
      cvv:
        type: "string"
        example: "123"
      expires_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      networks:
        type: "array"
        items:
          type: "string"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      issue_number:
        type: "string"
        example: "1"
      replacement:
        $ref: "#/definitions/ReplacementJSON"
      enabled:
        type: "boolean"
        example: true
      collected:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      brand:
        type: "string"
        example: "Visa"
      card_number:
        type: "string"
        example: "364435172576215"
      technology:
        type: "string"
        example: "technology1"
      cancelled:
        type: "boolean"
        example: true
      bank_id:
        type: "string"
        example: "gh.29.uk"
      card_id:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      pin_reset:
        type: "array"
        items:
          $ref: "#/definitions/PinResetJSON"
      serial_number:
        type: "string"
        example: "1324234"
      account:
        $ref: "#/definitions/AccountJSON"
      valid_from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      name_on_card:
        type: "string"
        example: "SusanSmith"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_type:
        type: "string"
        example: "Credit"
      on_hot_list:
        type: "boolean"
        example: true
    example:
      allows:
      - "allows"
      - "allows"
      cvv: "123"
      card_number: "364435172576215"
      expires_date: "1100-01-01T00:00:00Z"
      collected: "1100-01-01T00:00:00Z"
      serial_number: "1324234"
      technology: "technology1"
      networks:
      - "networks"
      - "networks"
      card_type: "Credit"
      enabled: true
      card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      pin_reset:
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      valid_from_date: "1100-01-01T00:00:00Z"
      posted: "1100-01-01T00:00:00Z"
      issue_number: "1"
      bank_id: "gh.29.uk"
      cancelled: true
      on_hot_list: true
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      replacement:
        requested_date: "1100-01-01T00:00:00Z"
        reason_requested: "RENEW"
      brand: "Visa"
      account:
        views_available:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        bank_id: "gh.29.uk"
        id: "123"
        label: "OBP"
      name_on_card: "SusanSmith"
  AtmAccessibilityFeaturesJson:
    required:
    - "accessibility_features"
    - "atm_id"
    properties:
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      accessibility_features:
        type: "array"
        items:
          type: "string"
    example:
      accessibility_features:
      - "accessibility_features"
      - "accessibility_features"
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
  TransactionMetadataJSON:
    required:
    - "comments"
    - "images"
    - "narrative"
    - "tags"
    - "where"
    properties:
      narrative:
        type: "string"
        example: "NONE"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/TransactionTagJSON"
      where:
        $ref: "#/definitions/LocationJSONV121"
      images:
        type: "array"
        items:
          $ref: "#/definitions/TransactionImageJSON"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/TransactionCommentJSON"
    example:
      images:
      - date: "1100-01-01T00:00:00Z"
        label: "NONE"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        URL: "www.openbankproject.com"
      - date: "1100-01-01T00:00:00Z"
        label: "NONE"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        URL: "www.openbankproject.com"
      comments:
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
      narrative: "NONE"
      where:
        date: "1100-01-01T00:00:00Z"
        latitude: 1.231
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        longitude: 1.231
      tags:
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
  TransactionRequestTypeJsonV140:
    required:
    - "charge"
    - "value"
    properties:
      value:
        type: "string"
        example: "10"
      charge:
        $ref: "#/definitions/TransactionRequestChargeJsonV140"
    example:
      charge:
        summary: "The bank fixed charge"
        value:
          amount: "0"
          currency: "EUR"
      value: "10"
  KycStatusesJSON:
    required:
    - "statuses"
    properties:
      statuses:
        type: "array"
        items:
          $ref: "#/definitions/KycStatusJSON"
    example:
      statuses:
      - date: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        ok: true
      - date: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        ok: true
  OpenCorporateUrlJSON:
    required:
    - "open_corporates_URL"
    properties:
      open_corporates_URL:
        type: "string"
        example: "String"
  ConsentInfoJsonV400:
    required:
    - "api_standard"
    - "api_version"
    - "consent_id"
    - "consumer_id"
    - "created_by_user_id"
    - "last_action_date"
    - "last_usage_date"
    - "status"
    properties:
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      api_version:
        type: "string"
        example: "v1.3"
      last_usage_date:
        type: "string"
        example: "2021-04-08T09:12:27Z"
      status:
        type: "string"
        example: "INITIATED"
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      api_standard:
        type: "string"
        example: "Berlin Group"
      consent_id:
        type: "string"
        example: "9d429899-24f5-42c8-8565-943ffa6a7945"
      last_action_date:
        type: "string"
        example: "2020-01-27"
    example:
      consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      last_action_date: "2020-01-27"
      api_version: "v1.3"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      last_usage_date: "2021-04-08T09:12:27Z"
      api_standard: "Berlin Group"
      consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
      status: "INITIATED"
  RateLimitingInfoV310:
    required:
    - "enabled"
    - "is_active"
    - "service_available"
    - "technology"
    properties:
      enabled:
        type: "boolean"
        example: true
      technology:
        type: "string"
        example: "REDIS"
      service_available:
        type: "boolean"
        example: true
      is_active:
        type: "boolean"
        example: true
    example:
      is_active: true
      service_available: true
      technology: "REDIS"
      enabled: true
  EntitlementRequestsJSON:
    required:
    - "entitlement_requests"
    properties:
      entitlement_requests:
        type: "array"
        items:
          $ref: "#/definitions/EntitlementRequestJSON"
    example:
      entitlement_requests:
      - role_name: "CanQueryOtherUser"
        bank_id: "gh.29.uk"
        created: "1100-01-01T00:00:00Z"
        entitlement_request_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
        user:
          entitlements:
            list:
            - role_name: "CanQueryOtherUser"
              entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
              bank_id: "gh.29.uk"
            - role_name: "CanQueryOtherUser"
              entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
              bank_id: "gh.29.uk"
          provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          email: "felixsmith@example.com"
          username: "felixsmith"
      - role_name: "CanQueryOtherUser"
        bank_id: "gh.29.uk"
        created: "1100-01-01T00:00:00Z"
        entitlement_request_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
        user:
          entitlements:
            list:
            - role_name: "CanQueryOtherUser"
              entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
              bank_id: "gh.29.uk"
            - role_name: "CanQueryOtherUser"
              entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
              bank_id: "gh.29.uk"
          provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          email: "felixsmith@example.com"
          username: "felixsmith"
  PinResetJSON:
    required:
    - "reason_requested"
    - "requested_date"
    properties:
      requested_date:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:52Z"
      reason_requested:
        type: "string"
        example: "GOOD_SECURITY_PRACTICE"
    example:
      requested_date: "2024-02-05T14:15:52Z"
      reason_requested: "GOOD_SECURITY_PRACTICE"
  CreateEntitlementJSON:
    required:
    - "bank_id"
    - "role_name"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      role_name:
        type: "string"
        example: "CanCreateBranch"
  AccountWebhookPutJson:
    required:
    - "account_webhook_id"
    - "is_active"
    properties:
      account_webhook_id:
        type: "string"
        example: "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
      is_active:
        type: "string"
        example: "true"
  ProductFeeResponseJsonV400:
    required:
    - "bank_id"
    - "is_active"
    - "more_info"
    - "name"
    - "product_code"
    - "product_fee_id"
    - "value"
    properties:
      name:
        type: "string"
        example: "ACCOUNT_MANAGEMENT_FEE"
      is_active:
        type: "boolean"
        example: true
      product_code:
        type: "string"
        example: "1234BW"
      more_info:
        type: "string"
        example: "More information about this fee"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      product_fee_id:
        type: "string"
        example: "696hlAHLFKUHE37469287634"
      value:
        $ref: "#/definitions/ProductFeeValueJsonV400"
    example:
      is_active: true
      bank_id: "gh.29.uk"
      name: "ACCOUNT_MANAGEMENT_FEE"
      more_info: "More information about this fee"
      product_code: "1234BW"
      value:
        amount: "10.12"
        currency: "EUR"
        type: ""
        frequency: "DAILY"
      product_fee_id: "696hlAHLFKUHE37469287634"
  UsersJsonV400:
    required:
    - "users"
    properties:
      users:
        type: "array"
        items:
          $ref: "#/definitions/UserJsonV400"
    example:
      users:
      - entitlements:
          list:
          - role_name: "CanQueryOtherUser"
            entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
            bank_id: "gh.29.uk"
          - role_name: "CanQueryOtherUser"
            entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
            bank_id: "gh.29.uk"
        is_locked: false
        is_deleted: false
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        last_marketing_agreement_signed_date: "1100-01-01T00:00:00Z"
        provider_id: "Chris"
        agreements:
        - text: ""
          type: ""
        - text: ""
          type: ""
        email: "felixsmith@example.com"
        views:
          list:
          - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
            bank_id: "gh.29.uk"
            view_id: "owner"
          - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
            bank_id: "gh.29.uk"
            view_id: "owner"
        username: "felixsmith"
      - entitlements:
          list:
          - role_name: "CanQueryOtherUser"
            entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
            bank_id: "gh.29.uk"
          - role_name: "CanQueryOtherUser"
            entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
            bank_id: "gh.29.uk"
        is_locked: false
        is_deleted: false
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        last_marketing_agreement_signed_date: "1100-01-01T00:00:00Z"
        provider_id: "Chris"
        agreements:
        - text: ""
          type: ""
        - text: ""
          type: ""
        email: "felixsmith@example.com"
        views:
          list:
          - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
            bank_id: "gh.29.uk"
            view_id: "owner"
          - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
            bank_id: "gh.29.uk"
            view_id: "owner"
        username: "felixsmith"
  AtmNotesResponseJsonV400:
    required:
    - "atm_id"
    - "notes"
    properties:
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      notes:
        type: "array"
        items:
          type: "string"
    example:
      notes:
      - "notes"
      - "notes"
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
  CustomerAddressesJsonV310:
    required:
    - "addresses"
    properties:
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAddressJsonV310"
    example:
      addresses:
      - line_1: "No 1 the Road"
        line_2: "The Place"
        customer_address_id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        city: "Berlin"
        insert_date: "1100-01-01T00:00:00Z"
        postcode: "13359"
        county: ""
        line_3: "The Hill"
        tags:
        - "tags"
        - "tags"
        country_code: "DE"
        state: "Brandenburg"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        status: "OK"
      - line_1: "No 1 the Road"
        line_2: "The Place"
        customer_address_id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        city: "Berlin"
        insert_date: "1100-01-01T00:00:00Z"
        postcode: "13359"
        county: ""
        line_3: "The Hill"
        tags:
        - "tags"
        - "tags"
        country_code: "DE"
        state: "Brandenburg"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        status: "OK"
  UpdateViewJsonV300:
    required:
    - "allowed_actions"
    - "description"
    - "hide_metadata_if_alias_used"
    - "is_public"
    - "metadata_view"
    - "which_alias_to_use"
    properties:
      description:
        type: "string"
        example: "this is for family"
      is_public:
        type: "boolean"
        example: true
      hide_metadata_if_alias_used:
        type: "boolean"
        example: true
      which_alias_to_use:
        type: "string"
        example: "family"
      is_firehose:
        type: "boolean"
      metadata_view:
        type: "string"
        example: "owner"
      allowed_actions:
        type: "array"
        items:
          type: "string"
  CustomerJsonV300:
    required:
    - "bank_id"
    - "branch_id"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "dependants"
    - "dob_of_dependants"
    - "email"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "kyc_status"
    - "last_ok_date"
    - "legal_name"
    - "mobile_phone_number"
    - "name_suffix"
    - "relationship_status"
    - "title"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        example: "19900101"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      title:
        type: "string"
        example: "Dr."
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
    example:
      kyc_status: true
      highest_education_attained: "Master"
      name_suffix: "Sr"
      customer_number: "5987953"
      date_of_birth: "19900101"
      face_image:
        date: "1100-01-01T00:00:00Z"
        url: "www.openbankproject"
      title: "Dr."
      mobile_phone_number: "+44 07972 444 876"
      dob_of_dependants:
      - "dob_of_dependants"
      - "dob_of_dependants"
      credit_rating:
        rating: "OBP"
        source: "OBP"
      relationship_status: "single"
      branch_id: "DERBY6"
      last_ok_date: "2023-02-05T14:15:53Z"
      dependants: 1
      bank_id: "gh.29.uk"
      credit_limit:
        amount: "0"
        currency: "EUR"
      employment_status: "worker"
      legal_name: "Eveline Tripman"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email: "felixsmith@example.com"
  CounterpartyIdJson:
    required:
    - "counterparty_id"
    properties:
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  AccountWebhookPostJson:
    required:
    - "account_id"
    - "http_method"
    - "http_protocol"
    - "is_active"
    - "trigger_name"
    - "url"
    properties:
      is_active:
        type: "string"
        example: "true"
      url:
        type: "string"
        example: "https://localhost.openbankproject.com"
      trigger_name:
        type: "string"
        example: "OnBalanceChange"
      http_protocol:
        type: "string"
        example: "HTTP/1.1"
      http_method:
        type: "string"
        example: "POST"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
  OrderObjectJson:
    required:
    - "distribution_channel"
    - "first_check_number"
    - "number_of_checkbooks"
    - "order_date"
    - "order_id"
    - "shipping_code"
    - "status"
    properties:
      order_id:
        type: "string"
        example: "xjksajfkj"
      number_of_checkbooks:
        type: "string"
        example: "4"
      first_check_number:
        type: "string"
        example: "5165276"
      order_date:
        type: "string"
        example: "07082013"
      status:
        type: "string"
        example: "2"
      shipping_code:
        type: "string"
        example: "1"
      distribution_channel:
        type: "string"
        example: "1201"
    example:
      number_of_checkbooks: "4"
      order_date: "07082013"
      shipping_code: "1"
      distribution_channel: "1201"
      first_check_number: "5165276"
      order_id: "xjksajfkj"
      status: "2"
  AtmAttributeResponseJsonV510:
    required:
    - "atm_attribute_id"
    - "atm_id"
    - "bank_id"
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "ACCOUNT_MANAGEMENT_FEE"
      is_active:
        type: "boolean"
        example: true
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      type:
        type: "string"
        example: ""
      atm_attribute_id:
        type: "string"
        example: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
      value:
        type: "string"
        example: "5987953"
    example:
      is_active: true
      atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
      bank_id: "gh.29.uk"
      name: "ACCOUNT_MANAGEMENT_FEE"
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
      type: ""
      value: "5987953"
  AdapterImplementationJson:
    required:
    - "group"
    - "suggested_order"
    properties:
      group:
        type: "string"
        example: "CORE"
      suggested_order:
        type: "integer"
        format: "int32"
        example: 3
    example:
      group: "CORE"
      suggested_order: 3
  ProductTreeJsonV310:
    required:
    - "bank_id"
    - "category"
    - "code"
    - "description"
    - "details"
    - "family"
    - "meta"
    - "more_info_url"
    - "name"
    - "super_family"
    properties:
      name:
        type: "string"
        example: "product name"
      description:
        type: "string"
        example: "Description"
      parent_product:
        $ref: "#/definitions/ProductTreeJsonV310"
      more_info_url:
        type: "string"
        example: "www.example.com/prod1/more-info.html"
      super_family:
        type: "string"
        example: "super family"
      code:
        type: "string"
        example: "PARENT_CODE"
      bank_id:
        type: "string"
        example: "testBank2"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      details:
        type: "string"
        example: "Details"
      category:
        type: "string"
        example: "category"
      family:
        type: "string"
        example: "family"
    example:
      code: "PARENT_CODE"
      bank_id: "testBank2"
      meta:
        license:
          name: "Open Database License"
          id: "ODbL-1.0"
      name: "product name"
      description: "Description"
      super_family: "super family"
      details: "Details"
      category: "category"
      family: "family"
      more_info_url: "www.example.com/prod1/more-info.html"
  ViewJsonV500:
    required:
    - "alias"
    - "can_add_comment"
    - "can_add_corporate_location"
    - "can_add_counterparty"
    - "can_add_image"
    - "can_add_image_url"
    - "can_add_more_info"
    - "can_add_open_corporates_url"
    - "can_add_physical_location"
    - "can_add_private_alias"
    - "can_add_public_alias"
    - "can_add_tag"
    - "can_add_transaction_request_to_any_account"
    - "can_add_transaction_request_to_own_account"
    - "can_add_url"
    - "can_add_where_tag"
    - "can_create_direct_debit"
    - "can_create_standing_order"
    - "can_delete_comment"
    - "can_delete_corporate_location"
    - "can_delete_image"
    - "can_delete_physical_location"
    - "can_delete_tag"
    - "can_delete_where_tag"
    - "can_edit_owner_comment"
    - "can_grant_access_to_views"
    - "can_query_available_funds"
    - "can_revoke_access_to_views"
    - "can_see_bank_account_balance"
    - "can_see_bank_account_bank_name"
    - "can_see_bank_account_credit_limit"
    - "can_see_bank_account_currency"
    - "can_see_bank_account_iban"
    - "can_see_bank_account_label"
    - "can_see_bank_account_national_identifier"
    - "can_see_bank_account_number"
    - "can_see_bank_account_owners"
    - "can_see_bank_account_routing_address"
    - "can_see_bank_account_routing_scheme"
    - "can_see_bank_account_swift_bic"
    - "can_see_bank_account_type"
    - "can_see_bank_routing_address"
    - "can_see_bank_routing_scheme"
    - "can_see_comments"
    - "can_see_corporate_location"
    - "can_see_image_url"
    - "can_see_images"
    - "can_see_more_info"
    - "can_see_open_corporates_url"
    - "can_see_other_account_bank_name"
    - "can_see_other_account_iban"
    - "can_see_other_account_kind"
    - "can_see_other_account_metadata"
    - "can_see_other_account_national_identifier"
    - "can_see_other_account_number"
    - "can_see_other_account_routing_address"
    - "can_see_other_account_routing_scheme"
    - "can_see_other_account_swift_bic"
    - "can_see_other_bank_routing_address"
    - "can_see_other_bank_routing_scheme"
    - "can_see_owner_comment"
    - "can_see_physical_location"
    - "can_see_private_alias"
    - "can_see_public_alias"
    - "can_see_tags"
    - "can_see_transaction_amount"
    - "can_see_transaction_balance"
    - "can_see_transaction_currency"
    - "can_see_transaction_description"
    - "can_see_transaction_finish_date"
    - "can_see_transaction_metadata"
    - "can_see_transaction_other_bank_account"
    - "can_see_transaction_start_date"
    - "can_see_transaction_this_bank_account"
    - "can_see_transaction_type"
    - "can_see_url"
    - "can_see_where_tag"
    - "description"
    - "hide_metadata_if_alias_used"
    - "id"
    - "is_public"
    - "is_system"
    - "metadata_view"
    - "short_name"
    properties:
      can_see_transaction_start_date:
        type: "boolean"
        example: true
      can_add_url:
        type: "boolean"
        example: true
      can_add_where_tag:
        type: "boolean"
        example: true
      can_see_transaction_this_bank_account:
        type: "boolean"
        example: true
      can_grant_access_to_views:
        type: "array"
        items:
          type: "string"
      can_see_bank_account_owners:
        type: "boolean"
        example: true
      can_see_bank_routing_address:
        type: "boolean"
        example: true
      can_see_private_alias:
        type: "boolean"
        example: true
      can_edit_owner_comment:
        type: "boolean"
        example: true
      is_system:
        type: "boolean"
        example: true
      can_see_other_account_national_identifier:
        type: "boolean"
        example: true
      can_see_bank_routing_scheme:
        type: "boolean"
        example: true
      can_see_public_alias:
        type: "boolean"
        example: true
      can_see_physical_location:
        type: "boolean"
        example: true
      can_see_owner_comment:
        type: "boolean"
        example: true
      can_see_bank_account_iban:
        type: "boolean"
        example: true
      can_see_corporate_location:
        type: "boolean"
        example: true
      can_see_bank_account_number:
        type: "boolean"
        example: true
      can_see_other_account_bank_name:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "description"
      can_see_bank_account_routing_scheme:
        type: "boolean"
        example: true
      can_see_transaction_other_bank_account:
        type: "boolean"
        example: true
      can_delete_corporate_location:
        type: "boolean"
        example: true
      can_see_comments:
        type: "boolean"
        example: true
      can_see_bank_account_bank_name:
        type: "boolean"
        example: true
      can_add_more_info:
        type: "boolean"
        example: true
      can_create_direct_debit:
        type: "boolean"
        example: true
      can_see_other_account_number:
        type: "boolean"
        example: true
      can_see_other_account_swift_bic:
        type: "boolean"
        example: true
      can_add_open_corporates_url:
        type: "boolean"
        example: true
      can_see_other_account_kind:
        type: "boolean"
        example: true
      can_add_transaction_request_to_own_account:
        type: "boolean"
        example: true
      can_delete_physical_location:
        type: "boolean"
        example: true
      can_see_bank_account_label:
        type: "boolean"
        example: true
      can_see_transaction_currency:
        type: "boolean"
        example: true
      is_public:
        type: "boolean"
        example: true
      can_see_transaction_finish_date:
        type: "boolean"
        example: true
      can_see_bank_account_routing_address:
        type: "boolean"
        example: true
      can_add_tag:
        type: "boolean"
        example: true
      can_see_images:
        type: "boolean"
        example: true
      can_query_available_funds:
        type: "boolean"
        example: true
      can_see_bank_account_credit_limit:
        type: "boolean"
        example: true
      can_see_bank_account_currency:
        type: "boolean"
        example: true
      hide_metadata_if_alias_used:
        type: "boolean"
        example: true
      can_delete_where_tag:
        type: "boolean"
        example: true
      alias:
        type: "string"
        example: "No"
      can_add_image_url:
        type: "boolean"
        example: true
      can_add_comment:
        type: "boolean"
        example: true
      can_see_image_url:
        type: "boolean"
        example: true
      id:
        type: "string"
        example: "1234"
      can_create_standing_order:
        type: "boolean"
        example: true
      can_see_bank_account_national_identifier:
        type: "boolean"
        example: true
      can_add_counterparty:
        type: "boolean"
        example: true
      can_add_transaction_request_to_any_account:
        type: "boolean"
        example: true
      can_revoke_access_to_views:
        type: "array"
        items:
          type: "string"
      can_see_tags:
        type: "boolean"
        example: true
      can_see_open_corporates_url:
        type: "boolean"
        example: true
      short_name:
        type: "string"
        example: "short_name"
      can_delete_tag:
        type: "boolean"
        example: true
      can_see_other_account_routing_scheme:
        type: "boolean"
        example: true
      can_see_more_info:
        type: "boolean"
        example: true
      can_see_transaction_metadata:
        type: "boolean"
        example: true
      can_delete_comment:
        type: "boolean"
        example: true
      can_see_where_tag:
        type: "boolean"
        example: true
      can_add_private_alias:
        type: "boolean"
        example: true
      is_firehose:
        type: "boolean"
      can_add_public_alias:
        type: "boolean"
        example: true
      can_see_bank_account_swift_bic:
        type: "boolean"
        example: true
      can_add_image:
        type: "boolean"
        example: true
      can_see_transaction_type:
        type: "boolean"
        example: true
      can_see_other_account_routing_address:
        type: "boolean"
        example: true
      can_see_other_account_iban:
        type: "boolean"
        example: true
      can_add_physical_location:
        type: "boolean"
        example: true
      can_add_corporate_location:
        type: "boolean"
        example: true
      can_delete_image:
        type: "boolean"
        example: true
      can_see_url:
        type: "boolean"
        example: true
      can_see_bank_account_balance:
        type: "boolean"
        example: true
      can_see_other_bank_routing_address:
        type: "boolean"
        example: true
      can_see_transaction_balance:
        type: "boolean"
        example: true
      metadata_view:
        type: "string"
        example: "owner"
      can_see_transaction_amount:
        type: "boolean"
        example: true
      can_see_other_account_metadata:
        type: "boolean"
        example: true
      can_see_bank_account_type:
        type: "boolean"
        example: true
      can_see_other_bank_routing_scheme:
        type: "boolean"
        example: true
      can_see_transaction_description:
        type: "boolean"
        example: true
    example:
      can_see_bank_account_type: true
      can_see_tags: true
      can_see_other_account_iban: true
      can_delete_tag: true
      can_create_standing_order: true
      can_see_other_bank_routing_address: true
      can_add_corporate_location: true
      can_see_images: true
      can_see_transaction_type: true
      can_see_bank_account_credit_limit: true
      can_see_other_account_routing_address: true
      can_see_other_account_kind: true
      can_edit_owner_comment: true
      can_add_physical_location: true
      can_see_bank_account_number: true
      can_see_corporate_location: true
      metadata_view: "owner"
      can_see_comments: true
      can_see_transaction_description: true
      id: "1234"
      can_see_transaction_amount: true
      can_see_bank_account_bank_name: true
      is_system: true
      can_see_bank_account_routing_scheme: true
      can_add_url: true
      can_see_url: true
      can_see_public_alias: true
      can_see_other_account_number: true
      can_see_other_account_routing_scheme: true
      can_see_bank_routing_address: true
      can_add_more_info: true
      can_delete_physical_location: true
      can_delete_where_tag: true
      can_add_comment: true
      can_see_more_info: true
      can_add_public_alias: true
      short_name: "short_name"
      can_see_bank_account_currency: true
      can_see_bank_account_swift_bic: true
      can_query_available_funds: true
      can_see_bank_account_balance: true
      can_see_open_corporates_url: true
      can_delete_comment: true
      can_see_other_account_bank_name: true
      can_add_transaction_request_to_own_account: true
      can_add_tag: true
      can_grant_access_to_views:
      - "can_grant_access_to_views"
      - "can_grant_access_to_views"
      description: "description"
      can_see_physical_location: true
      can_delete_image: true
      can_see_bank_account_label: true
      can_see_image_url: true
      can_add_transaction_request_to_any_account: true
      can_see_transaction_other_bank_account: true
      hide_metadata_if_alias_used: true
      can_add_open_corporates_url: true
      alias: "No"
      is_firehose: true
      can_see_bank_account_routing_address: true
      can_see_bank_account_national_identifier: true
      can_revoke_access_to_views:
      - "can_revoke_access_to_views"
      - "can_revoke_access_to_views"
      can_see_other_account_swift_bic: true
      can_add_image: true
      can_add_where_tag: true
      can_see_owner_comment: true
      can_create_direct_debit: true
      can_see_transaction_this_bank_account: true
      can_add_image_url: true
      can_see_other_account_metadata: true
      can_see_other_bank_routing_scheme: true
      can_see_transaction_start_date: true
      can_see_private_alias: true
      can_see_transaction_finish_date: true
      can_see_bank_account_iban: true
      can_add_private_alias: true
      can_see_other_account_national_identifier: true
      can_see_bank_routing_scheme: true
      is_public: true
      can_see_transaction_balance: true
      can_add_counterparty: true
      can_see_where_tag: true
      can_see_bank_account_owners: true
      can_delete_corporate_location: true
      can_see_transaction_currency: true
      can_see_transaction_metadata: true
  TransactionRequestRefundTo:
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  UserAttributeResponseJsonV510:
    required:
    - "insert_date"
    - "is_personal"
    - "name"
    - "type"
    - "user_attribute_id"
    - "value"
    properties:
      name:
        type: "string"
        example: "BATTERY_LEVEL"
      insert_date:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      user_attribute_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      is_personal:
        type: "boolean"
        example: false
      type:
        type: "string"
        example: "STRING"
      value:
        type: "string"
        example: "90"
    example:
      insert_date: "2024-02-05T14:15:53Z"
      user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name: "BATTERY_LEVEL"
      type: "STRING"
      value: "90"
      is_personal: false
  JsonConnectorMethodMethodBody:
    required:
    - "method_body"
    - "programming_lang"
    properties:
      method_body:
        type: "string"
        example: "%7B%0A%20%20%20%20const%20%5BbankId%5D%20%3D%20args%3B%0A%20%20%20%20%2F%2F%20call%20java%20or%20scala%20type%20in%20this%20way%0A%20%20%20%20const%20BigDecimal%20%3D%20Java.type(%27java.math.BigDecimal%27)%3B%0A%20%20%20%20%2F%2F%20define%20a%20class%0A%20%20%20%20class%20SwiftBic%7B%0A%20%20%20%20%20%20%20%20constructor(name%2C%20value)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.name%20%3D%20name%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.value%20%3D%20value%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20define%20async%20function%0A%20%20%20%20const%20someAsyncFn%20%3D%20async%20()%20%3D%3E%20new%20BigDecimal(%27123.456%27)%0A%20%20%20%20%2F%2F%20call%20other%20async%20methods%0A%20%20%20%20const%20data%20%3D%20await%20someAsyncFn()%3B%0A%0A%20%20%20%20const%20bank%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%22bankId%22%3A%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%22value%22%3A%22HelloJsBank%3A%22%2B%20bankId%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%22shortName%22%3A%22The%20Js%20Bank%20of%20Scotland%22%20%2Bdata.toString()%2C%0A%20%20%20%20%20%20%20%20%22fullName%22%3A%22The%20Js%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%22logoUrl%22%3A%22http%3A%2F%2Fwww.red-bank-shoreditch.com%2Flogo.gif%22%2C%0A%20%20%20%20%20%20%20%20%22websiteUrl%22%3A%22http%3A%2F%2Fwww.red-bank-shoreditch.com%22%2C%0A%20%20%20%20%20%20%20%20%22bankRoutingScheme%22%3A%22OBP%22%2C%0A%20%20%20%20%20%20%20%20%22bankRoutingAddress%22%3A%22Js%22%2C%0A%20%20%20%20%20%20%20%20%22swiftBic%22%3A%20new%20SwiftBic(%22Mock%20Swift%22%2C%2010).name%2C%0A%20%20%20%20%20%20%20%20%22nationalIdentifier%22%3A%22Js%22%2C%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20bank%3B%0A%7D"
      programming_lang:
        type: "string"
        example: "Js"
  AccountTagsJSON:
    required:
    - "tags"
    properties:
      tags:
        type: "array"
        items:
          $ref: "#/definitions/AccountTagJSON"
    example:
      tags:
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
  ImageUrlJSON:
    required:
    - "image_URL"
    properties:
      image_URL:
        type: "string"
        example: "String"
  CreateViewJsonV300:
    required:
    - "allowed_actions"
    - "description"
    - "hide_metadata_if_alias_used"
    - "is_public"
    - "metadata_view"
    - "name"
    - "which_alias_to_use"
    properties:
      name:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "This view is for family"
      is_public:
        type: "boolean"
        example: false
      hide_metadata_if_alias_used:
        type: "boolean"
        example: false
      which_alias_to_use:
        type: "string"
        example: "family"
      metadata_view:
        type: "string"
        example: "test"
      allowed_actions:
        type: "array"
        items:
          type: "string"
  ApiCollectionJson400:
    required:
    - "api_collection_id"
    - "api_collection_name"
    - "description"
    - "is_sharable"
    - "user_id"
    properties:
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      is_sharable:
        type: "boolean"
        example: true
      api_collection_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      api_collection_name:
        type: "string"
        example: "Favourites"
    example:
      api_collection_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      api_collection_name: "Favourites"
      description: "This an optional field. Maximum length is 2000. It can be any\
        \ characters here."
      is_sharable: true
  EntitlementJsonV400:
    required:
    - "bank_id"
    - "entitlement_id"
    - "role_name"
    - "user_id"
    properties:
      entitlement_id:
        type: "string"
        example: ""
      role_name:
        type: "string"
        example: ""
      bank_id:
        type: "string"
        example: "gh.29.uk"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
    example:
      role_name: ""
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      entitlement_id: ""
      bank_id: "gh.29.uk"
  ViewsJsonV500:
    required:
    - "views"
    properties:
      views:
        type: "array"
        items:
          $ref: "#/definitions/ViewJsonV500"
    example:
      views:
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_create_standing_order: true
        can_see_other_bank_routing_address: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_bank_account_credit_limit: true
        can_see_other_account_routing_address: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        metadata_view: "owner"
        can_see_comments: true
        can_see_transaction_description: true
        id: "1234"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        is_system: true
        can_see_bank_account_routing_scheme: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_see_other_account_routing_scheme: true
        can_see_bank_routing_address: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_query_available_funds: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_transaction_request_to_own_account: true
        can_add_tag: true
        can_grant_access_to_views:
        - "can_grant_access_to_views"
        - "can_grant_access_to_views"
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_add_transaction_request_to_any_account: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "No"
        is_firehose: true
        can_see_bank_account_routing_address: true
        can_see_bank_account_national_identifier: true
        can_revoke_access_to_views:
        - "can_revoke_access_to_views"
        - "can_revoke_access_to_views"
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_create_direct_debit: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_other_bank_routing_scheme: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        can_see_bank_routing_scheme: true
        is_public: true
        can_see_transaction_balance: true
        can_add_counterparty: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_create_standing_order: true
        can_see_other_bank_routing_address: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_bank_account_credit_limit: true
        can_see_other_account_routing_address: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        metadata_view: "owner"
        can_see_comments: true
        can_see_transaction_description: true
        id: "1234"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        is_system: true
        can_see_bank_account_routing_scheme: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_see_other_account_routing_scheme: true
        can_see_bank_routing_address: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_query_available_funds: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_transaction_request_to_own_account: true
        can_add_tag: true
        can_grant_access_to_views:
        - "can_grant_access_to_views"
        - "can_grant_access_to_views"
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_add_transaction_request_to_any_account: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "No"
        is_firehose: true
        can_see_bank_account_routing_address: true
        can_see_bank_account_national_identifier: true
        can_revoke_access_to_views:
        - "can_revoke_access_to_views"
        - "can_revoke_access_to_views"
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_create_direct_debit: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_other_bank_routing_scheme: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        can_see_bank_routing_scheme: true
        is_public: true
        can_see_transaction_balance: true
        can_add_counterparty: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
  AccountApplicationsJsonV310:
    required:
    - "account_applications"
    properties:
      account_applications:
        type: "array"
        items:
          $ref: "#/definitions/AccountApplicationResponseJson"
    example:
      account_applications:
      - account_application_id: "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
        date_of_application: "1100-01-01T00:00:00Z"
        product_code: "1234BW"
        user:
          provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          email: "felixsmith@example.com"
          username: "felixsmith"
        status: "REQUESTED"
        customer:
          kyc_status: true
          highest_education_attained: "Master"
          name_suffix: "Sr"
          customer_number: "5987953"
          date_of_birth: "1100-01-01T00:00:00Z"
          face_image:
            date: "1100-01-01T00:00:00Z"
            url: "www.openbankproject"
          title: "Dr."
          mobile_phone_number: "+44 07972 444 876"
          dob_of_dependants:
          - "2000-01-23"
          - "2000-01-23"
          credit_rating:
            rating: "OBP"
            source: "OBP"
          relationship_status: "single"
          branch_id: "DERBY6"
          last_ok_date: "2023-02-05T14:15:53Z"
          dependants: 1
          bank_id: "gh.29.uk"
          credit_limit:
            amount: "0"
            currency: "EUR"
          employment_status: "worker"
          legal_name: "Eveline Tripman"
          customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          email: "felixsmith@example.com"
      - account_application_id: "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
        date_of_application: "1100-01-01T00:00:00Z"
        product_code: "1234BW"
        user:
          provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          email: "felixsmith@example.com"
          username: "felixsmith"
        status: "REQUESTED"
        customer:
          kyc_status: true
          highest_education_attained: "Master"
          name_suffix: "Sr"
          customer_number: "5987953"
          date_of_birth: "1100-01-01T00:00:00Z"
          face_image:
            date: "1100-01-01T00:00:00Z"
            url: "www.openbankproject"
          title: "Dr."
          mobile_phone_number: "+44 07972 444 876"
          dob_of_dependants:
          - "2000-01-23"
          - "2000-01-23"
          credit_rating:
            rating: "OBP"
            source: "OBP"
          relationship_status: "single"
          branch_id: "DERBY6"
          last_ok_date: "2023-02-05T14:15:53Z"
          dependants: 1
          bank_id: "gh.29.uk"
          credit_limit:
            amount: "0"
            currency: "EUR"
          employment_status: "worker"
          legal_name: "Eveline Tripman"
          customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          email: "felixsmith@example.com"
  PutUpdateCustomerBranchJsonV310:
    required:
    - "branch_id"
    properties:
      branch_id:
        type: "string"
        example: "123"
  CustomerMessagesJsonV400:
    required:
    - "messages"
    properties:
      messages:
        type: "array"
        items:
          $ref: "#/definitions/CustomerMessageJsonV400"
    example:
      messages:
      - date: "1100-01-01T00:00:00Z"
        from_department: "Open Bank"
        from_person: "Tom"
        transport: "SMS"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        message: "123456"
      - date: "1100-01-01T00:00:00Z"
        from_department: "Open Bank"
        from_person: "Tom"
        transport: "SMS"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        message: "123456"
  CustomerCreditRatingJSON:
    required:
    - "rating"
    - "source"
    properties:
      rating:
        type: "string"
        example: "OBP"
      source:
        type: "string"
        example: "OBP"
    example:
      rating: "OBP"
      source: "OBP"
  UserJsonV400:
    required:
    - "email"
    - "entitlements"
    - "is_deleted"
    - "is_locked"
    - "provider"
    - "provider_id"
    - "user_id"
    - "username"
    properties:
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      email:
        type: "string"
        example: "felixsmith@example.com"
      username:
        type: "string"
        example: "felixsmith"
      is_deleted:
        type: "boolean"
        example: false
      provider_id:
        type: "string"
        example: "Chris"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      views:
        $ref: "#/definitions/ViewsJSON300"
      is_locked:
        type: "boolean"
        example: false
      entitlements:
        $ref: "#/definitions/EntitlementJSONs"
      last_marketing_agreement_signed_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      agreements:
        type: "array"
        items:
          $ref: "#/definitions/UserAgreementJson"
    example:
      entitlements:
        list:
        - role_name: "CanQueryOtherUser"
          entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
          bank_id: "gh.29.uk"
        - role_name: "CanQueryOtherUser"
          entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
          bank_id: "gh.29.uk"
      is_locked: false
      is_deleted: false
      provider: "http://127.0.0.1:8080"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      last_marketing_agreement_signed_date: "1100-01-01T00:00:00Z"
      provider_id: "Chris"
      agreements:
      - text: ""
        type: ""
      - text: ""
        type: ""
      email: "felixsmith@example.com"
      views:
        list:
        - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
          bank_id: "gh.29.uk"
          view_id: "owner"
        - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
          bank_id: "gh.29.uk"
          view_id: "owner"
      username: "felixsmith"
  TransactionRequestChargeJsonV140:
    required:
    - "summary"
    - "value"
    properties:
      summary:
        type: "string"
        example: "The bank fixed charge"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
    example:
      summary: "The bank fixed charge"
      value:
        amount: "0"
        currency: "EUR"
  PostTransactionCommentJSON:
    required:
    - "value"
    properties:
      value:
        type: "string"
        example: "String"
  ViewJSON300:
    required:
    - "account_id"
    - "bank_id"
    - "view_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      view_id:
        type: "string"
        example: "owner"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      bank_id: "gh.29.uk"
      view_id: "owner"
  BranchJsonV300:
    required:
    - "accessibleFeatures"
    - "address"
    - "bank_id"
    - "branch_routing"
    - "branch_type"
    - "drive_up"
    - "id"
    - "is_accessible"
    - "lobby"
    - "location"
    - "meta"
    - "more_info"
    - "name"
    - "phone_number"
    properties:
      name:
        type: "string"
        example: "Branch by the Lake"
      phone_number:
        type: "string"
        example: "+381631954907"
      location:
        $ref: "#/definitions/LocationJsonV140"
      branch_type:
        type: "string"
        example: "Full service store"
      branch_routing:
        $ref: "#/definitions/BranchRoutingJsonV141"
      drive_up:
        $ref: "#/definitions/DriveUpJsonV330"
      more_info:
        type: "string"
        example: "short walk to the lake from here"
      bank_id:
        type: "string"
        example: "bank-id-123"
      id:
        type: "string"
        example: "branch-id-123"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      lobby:
        $ref: "#/definitions/LobbyJsonV330"
      accessibleFeatures:
        type: "string"
        example: "wheelchair, atm usuable by the visually impaired"
      address:
        $ref: "#/definitions/AddressJsonV300"
      is_accessible:
        type: "string"
        example: "true"
    example:
      address:
        line_1: "No 1 the Road"
        line_2: "The Place"
        country_code: "DE"
        city: "Berlin"
        postcode: "13359"
        county: ""
        state: "Brandenburg"
        line_3: "The Hill"
      branch_routing:
        address: "678"
        scheme: "BranchNumber"
      drive_up:
        sunday:
          closing_time: "18:00"
          opening_time: "10:00"
        saturday:
          closing_time: "18:00"
          opening_time: "10:00"
        tuesday:
          closing_time: "18:00"
          opening_time: "10:00"
        wednesday:
          closing_time: "18:00"
          opening_time: "10:00"
        friday:
          closing_time: "18:00"
          opening_time: "10:00"
        thursday:
          closing_time: "18:00"
          opening_time: "10:00"
        monday:
          closing_time: "18:00"
          opening_time: "10:00"
      more_info: "short walk to the lake from here"
      accessibleFeatures: "wheelchair, atm usuable by the visually impaired"
      is_accessible: "true"
      lobby:
        sunday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
        saturday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
        tuesday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
        wednesday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
        friday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
        thursday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
        monday:
        - closing_time: "18:00"
          opening_time: "10:00"
        - closing_time: "18:00"
          opening_time: "10:00"
      branch_type: "Full service store"
      bank_id: "bank-id-123"
      meta:
        license:
          name: "Open Database License"
          id: "ODbL-1.0"
      name: "Branch by the Lake"
      phone_number: "+381631954907"
      location:
        latitude: 11.45
        longitude: 11.45
      id: "branch-id-123"
  ElasticSearchJsonV300:
    required:
    - "query"
    properties:
      query:
        $ref: "#/definitions/ElasticSearchQuery"
  UserInvitationJsonV400:
    required:
    - "company"
    - "country"
    - "email"
    - "first_name"
    - "last_name"
    - "purpose"
    - "status"
    properties:
      first_name:
        type: "string"
        example: "Tom"
      email:
        type: "string"
        example: "felixsmith@example.com"
      country:
        type: "string"
        example: "Germany"
      purpose:
        type: "string"
        example: "DEVELOPER"
      company:
        type: "string"
        example: "Tesobe GmbH"
      last_name:
        type: "string"
        example: "Smith"
      status:
        type: "string"
        example: ""
    example:
      country: "Germany"
      purpose: "DEVELOPER"
      last_name: "Smith"
      company: "Tesobe GmbH"
      first_name: "Tom"
      email: "felixsmith@example.com"
      status: ""
  ThisAccountJsonV300:
    required:
    - "account_routings"
    - "bank_routing"
    - "holders"
    - "id"
    properties:
      id:
        type: "string"
        example: "String"
      bank_routing:
        $ref: "#/definitions/BankRoutingJsonV121"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      holders:
        type: "array"
        items:
          $ref: "#/definitions/AccountHolderJSON"
    example:
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      holders:
      - is_alias: true
        name: "OBP"
      - is_alias: true
        name: "OBP"
      bank_routing:
        address: ""
        scheme: "scheme value"
      id: "String"
  ProductFeeJsonV400:
    required:
    - "is_active"
    - "more_info"
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        example: "ACCOUNT_MANAGEMENT_FEE"
      is_active:
        type: "boolean"
        example: true
      more_info:
        type: "string"
        example: "More information about this fee"
      product_fee_id:
        type: "string"
        example: "696hlAHLFKUHE37469287634"
      value:
        $ref: "#/definitions/ProductFeeValueJsonV400"
    example:
      is_active: true
      name: "ACCOUNT_MANAGEMENT_FEE"
      more_info: "More information about this fee"
      value:
        amount: "10.12"
        currency: "EUR"
        type: ""
        frequency: "DAILY"
      product_fee_id: "696hlAHLFKUHE37469287634"
  PortJSON:
    required:
    - "property"
    - "value"
    properties:
      property:
        type: "string"
        example: "default"
      value:
        type: "string"
        example: "8080"
    example:
      property: "default"
      value: "8080"
  BasicAccountJSON:
    required:
    - "bank_id"
    - "id"
    - "label"
    - "views_available"
    properties:
      id:
        type: "string"
        example: "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
      label:
        type: "string"
        example: "NoneLabel"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      views_available:
        type: "array"
        items:
          $ref: "#/definitions/BasicViewJson"
    example:
      bank_id: "gh.29.uk"
      views_available:
      - is_public: true
        short_name: "HHH"
        id: "1"
      - is_public: true
        short_name: "HHH"
        id: "1"
      id: "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
      label: "NoneLabel"
  OrderJson:
    required:
    - "order"
    properties:
      order:
        $ref: "#/definitions/OrderObjectJson"
    example:
      order:
        number_of_checkbooks: "4"
        order_date: "07082013"
        shipping_code: "1"
        distribution_channel: "1201"
        first_check_number: "5165276"
        order_id: "xjksajfkj"
        status: "2"
  AdapterInfoJsonV300:
    required:
    - "date"
    - "git_commit"
    - "name"
    - "version"
    properties:
      name:
        type: "string"
        example: "String"
      version:
        type: "string"
        example: "String"
      git_commit:
        type: "string"
        example: "String"
      date:
        type: "string"
        example: "2013-01-21T23:08:00Z"
    example:
      date: "2013-01-21T23:08:00Z"
      git_commit: "String"
      name: "String"
      version: "String"
  AmountOfMoney:
    required:
    - "amount"
    - "currency"
    properties:
      currency:
        type: "string"
        example: "EUR"
      amount:
        type: "string"
        example: "100"
    example:
      amount: "100"
      currency: "EUR"
  CoreAccountJson:
    required:
    - "account_routings"
    - "account_type"
    - "bank_id"
    - "id"
    - "label"
    - "views"
    properties:
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "String"
      account_type:
        type: "string"
        example: "330"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      views:
        type: "array"
        items:
          $ref: "#/definitions/ViewBasicV300"
    example:
      account_type: "330"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "gh.29.uk"
      label: "String"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      views:
      - is_public: false
        description: "This view is for the owner for the account."
        short_name: "Owner"
        id: "owner"
      - is_public: false
        description: "This view is for the owner for the account."
        short_name: "Owner"
        id: "owner"
  UserJsonV300:
    required:
    - "email"
    - "entitlements"
    - "provider"
    - "provider_id"
    - "user_id"
    - "username"
    properties:
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      email:
        type: "string"
        example: "felixsmith@example.com"
      username:
        type: "string"
        example: "felixsmith"
      provider_id:
        type: "string"
        example: "Chris"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      views:
        $ref: "#/definitions/ViewsJSON300"
      entitlements:
        $ref: "#/definitions/EntitlementJSONs"
    example:
      entitlements:
        list:
        - role_name: "CanQueryOtherUser"
          entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
          bank_id: "gh.29.uk"
        - role_name: "CanQueryOtherUser"
          entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
          bank_id: "gh.29.uk"
      provider: "http://127.0.0.1:8080"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      provider_id: "Chris"
      email: "felixsmith@example.com"
      views:
        list:
        - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
          bank_id: "gh.29.uk"
          view_id: "owner"
        - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
          bank_id: "gh.29.uk"
          view_id: "owner"
      username: "felixsmith"
  SuccessMessage:
    required:
    - "success"
    properties:
      success:
        type: "string"
        example: "Success"
    example:
      success: "Success"
  IbanCheckerJsonV400:
    required:
    - "is_valid"
    properties:
      is_valid:
        type: "boolean"
        example: true
      details:
        $ref: "#/definitions/IbanDetailsJsonV400"
    example:
      is_valid: true
      details:
        country: "Germany"
        bank: "Societe Generale"
        address: "Neue mainzer strasse 46-50"
        city: "Frankfurt am Main"
        phone: ""
        postcode: "60311"
        bank_routings:
        - address: ""
          scheme: "scheme value"
        - address: ""
          scheme: "scheme value"
        attributes:
        - name: "country_iso"
          value: ""
        - name: "country_iso"
          value: ""
        branch: ""
  PostTransactionImageJSON:
    required:
    - "URL"
    - "label"
    properties:
      label:
        type: "string"
        example: "String"
      URL:
        type: "string"
        example: "String"
  UserCustomerLinkJson:
    required:
    - "customer_id"
    - "date_inserted"
    - "is_active"
    - "user_customer_link_id"
    - "user_id"
    properties:
      is_active:
        type: "boolean"
        example: true
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      date_inserted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user_customer_link_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
    example:
      date_inserted: "1100-01-01T00:00:00Z"
      is_active: true
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      user_customer_link_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
  KycDocumentJSON:
    required:
    - "bank_id"
    - "customer_id"
    - "customer_number"
    - "expiry_date"
    - "id"
    - "issue_date"
    - "issue_place"
    - "number"
    - "type"
    properties:
      number:
        type: "string"
        example: "PlaceholderString"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      customer_number:
        type: "string"
        example: "5987953"
      issue_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "PlaceholderString"
      type:
        type: "string"
        example: "PlaceholderString"
      issue_place:
        type: "string"
        example: "PlaceholderString"
      expiry_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      issue_place: "PlaceholderString"
      number: "PlaceholderString"
      issue_date: "1100-01-01T00:00:00Z"
      customer_number: "5987953"
      bank_id: "gh.29.uk"
      expiry_date: "1100-01-01T00:00:00Z"
      id: "PlaceholderString"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      type: "PlaceholderString"
  TransactionRequestAttributesResponseJson:
    required:
    - "transaction_request_attributes"
    properties:
      transaction_request_attributes:
        type: "array"
        items:
          $ref: "#/definitions/TransactionRequestAttributeResponseJson"
    example:
      transaction_request_attributes:
      - transaction_request_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
      - transaction_request_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
  JsonCodeTemplateJson:
    required:
    - "code"
    properties:
      code:
        type: "string"
        example: "println%28%22hello%22%29"
    example:
      code: "println%28%22hello%22%29"
  CustomersMinimalJsonV400:
    required:
    - "customers"
    properties:
      customers:
        type: "array"
        items:
          $ref: "#/definitions/CustomerMinimalJsonV400"
    example:
      customers:
      - bank_id: "gh.29.uk"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - bank_id: "gh.29.uk"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  TransactionRequestBodyJsonV200:
    required:
    - "description"
    - "to"
    - "value"
    properties:
      to:
        $ref: "#/definitions/TransactionRequestAccountJsonV140"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      description:
        type: "string"
        example: "this is for work"
  UpdateAccountRequestJsonV310:
    required:
    - "account_routings"
    - "branch_id"
    - "label"
    - "type"
    properties:
      label:
        type: "string"
        example: "Label"
      type:
        type: "string"
        example: "CURRENT"
      branch_id:
        type: "string"
        example: "1234"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
  UserLockStatusJson:
    required:
    - "last_lock_date"
    - "type_of_lock"
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      type_of_lock:
        type: "string"
        example: "lock_via_api"
      last_lock_date:
        type: "string"
        format: "date"
        example: "1100-01-01T01:01:01Z"
    example:
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      type_of_lock: "lock_via_api"
      last_lock_date: "1100-01-01T01:01:01Z"
  IbanJson:
    required:
    - "iban"
    properties:
      iban:
        type: "string"
        example: "123"
  PostTransactionWhereJSON:
    required:
    - "where"
    properties:
      where:
        $ref: "#/definitions/LocationPlainJSON"
  RevokedJsonV400:
    required:
    - "revoked"
    properties:
      revoked:
        type: "boolean"
        example: true
    example:
      revoked: true
  TransactionTypesJsonV200:
    required:
    - "transaction_types"
    properties:
      transaction_types:
        type: "array"
        items:
          $ref: "#/definitions/TransactionTypeJsonV200"
    example:
      transaction_types:
      - summary: "PlaceholderString"
        charge:
          amount: "0"
          currency: "EUR"
        bank_id: "gh.29.uk"
        description: "PlaceholderString"
        id:
          value: "123"
        short_code: "PlaceholderString"
      - summary: "PlaceholderString"
        charge:
          amount: "0"
          currency: "EUR"
        bank_id: "gh.29.uk"
        description: "PlaceholderString"
        id:
          value: "123"
        short_code: "PlaceholderString"
  EmptyElasticSearch:
    properties:
      none:
        type: "string"
  CustomerOverviewJsonV500:
    required:
    - "accounts"
    - "bank_id"
    - "branch_id"
    - "customer_attributes"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "dependants"
    - "dob_of_dependants"
    - "email"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "kyc_status"
    - "last_ok_date"
    - "legal_name"
    - "mobile_phone_number"
    - "name_suffix"
    - "relationship_status"
    - "title"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      customer_attributes:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAttributeResponseJsonV300"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
          format: "date"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      title:
        type: "string"
        example: "Dr."
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/AccountResponseJson500"
    example:
      kyc_status: true
      highest_education_attained: "Master"
      name_suffix: "Sr"
      customer_number: "5987953"
      date_of_birth: "1100-01-01T00:00:00Z"
      face_image:
        date: "1100-01-01T00:00:00Z"
        url: "www.openbankproject"
      title: "Dr."
      mobile_phone_number: "+44 07972 444 876"
      dob_of_dependants:
      - "2000-01-23"
      - "2000-01-23"
      credit_rating:
        rating: "OBP"
        source: "OBP"
      relationship_status: "single"
      branch_id: "DERBY6"
      last_ok_date: "2023-02-05T14:15:53Z"
      dependants: 1
      bank_id: "gh.29.uk"
      credit_limit:
        amount: "0"
        currency: "EUR"
      customer_attributes:
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      employment_status: "worker"
      legal_name: "Eveline Tripman"
      accounts:
      - account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        balance:
          amount: "0"
          currency: "EUR"
        branch_id: "DERBY6"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        label: "My Account"
        contracts:
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        product_code: "787LOW"
      - account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        balance:
          amount: "0"
          currency: "EUR"
        branch_id: "DERBY6"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        label: "My Account"
        contracts:
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        product_code: "787LOW"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email: "felixsmith@example.com"
  ConsentJsonV500:
    required:
    - "consent_id"
    - "jwt"
    - "status"
    properties:
      consent_id:
        type: "string"
        example: "9d429899-24f5-42c8-8565-943ffa6a7945"
      jwt:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      status:
        type: "string"
        example: "INITIATED"
      consent_request_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      consent_request_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      jwt: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
      status: "INITIATED"
  CoreCounterpartyJsonV300:
    required:
    - "account_routings"
    - "bank_routing"
    - "holder"
    - "id"
    properties:
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      holder:
        $ref: "#/definitions/AccountHolderJSON"
      bank_routing:
        $ref: "#/definitions/BankRoutingJsonV121"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
    example:
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      holder:
        is_alias: true
        name: "OBP"
      bank_routing:
        address: ""
        scheme: "scheme value"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  ApiCollectionsJson400:
    required:
    - "api_collections"
    properties:
      api_collections:
        type: "array"
        items:
          $ref: "#/definitions/ApiCollectionJson400"
    example:
      api_collections:
      - api_collection_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        api_collection_name: "Favourites"
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        is_sharable: true
      - api_collection_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        api_collection_name: "Favourites"
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        is_sharable: true
  AtmLocationCategoriesJsonV400:
    required:
    - "location_categories"
    properties:
      location_categories:
        type: "array"
        items:
          type: "string"
  ConsumerJson:
    required:
    - "app_name"
    - "app_type"
    - "client_certificate"
    - "consumer_id"
    - "created"
    - "created_by_user"
    - "created_by_user_id"
    - "description"
    - "developer_email"
    - "enabled"
    - "key"
    - "redirect_url"
    - "secret"
    properties:
      secret:
        type: "string"
        example: "bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq"
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      app_type:
        type: "string"
        example: "Web"
      description:
        type: "string"
        example: "Account Management"
      created_by_user:
        $ref: "#/definitions/ResourceUserJSON"
      enabled:
        type: "boolean"
        example: true
      client_certificate:
        type: "string"
        example: "-----BEGIN CERTIFICATE-----\nclient_certificate_content\n-----END\
          \ CERTIFICATE-----"
      redirect_url:
        type: "string"
        example: "www.openbankproject.com"
      key:
        type: "string"
        example: "xwdgylv3vau0n2gkxu1aize4glapftfldp5y1bic"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      app_name:
        type: "string"
        example: "SOFI"
      created:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      app_type: "Web"
      created: "1100-01-01T00:00:00Z"
      description: "Account Management"
      secret: "bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      enabled: true
      created_by_user:
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        email: "felixsmith@example.com"
        username: "felixsmith"
      consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      app_name: "SOFI"
      client_certificate: "-----BEGIN CERTIFICATE-----\nclient_certificate_content\n\
        -----END CERTIFICATE-----"
      developer_email: "felixsmith@example.com"
      redirect_url: "www.openbankproject.com"
      key: "xwdgylv3vau0n2gkxu1aize4glapftfldp5y1bic"
  TransactionTypeJsonV200:
    required:
    - "bank_id"
    - "charge"
    - "description"
    - "id"
    - "short_code"
    - "summary"
    properties:
      description:
        type: "string"
        example: "PlaceholderString"
      short_code:
        type: "string"
        example: "PlaceholderString"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        $ref: "#/definitions/TransactionTypeId"
      charge:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      summary:
        type: "string"
        example: "PlaceholderString"
    example:
      summary: "PlaceholderString"
      charge:
        amount: "0"
        currency: "EUR"
      bank_id: "gh.29.uk"
      description: "PlaceholderString"
      id:
        value: "123"
      short_code: "PlaceholderString"
  PhysicalCardWithAttributesJsonV310:
    required:
    - "account"
    - "allows"
    - "bank_id"
    - "cancelled"
    - "card_attributes"
    - "card_id"
    - "card_number"
    - "card_type"
    - "collected"
    - "customer_id"
    - "enabled"
    - "expires_date"
    - "issue_number"
    - "name_on_card"
    - "networks"
    - "on_hot_list"
    - "pin_reset"
    - "posted"
    - "replacement"
    - "serial_number"
    - "technology"
    - "valid_from_date"
    properties:
      allows:
        type: "array"
        items:
          type: "string"
      expires_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      networks:
        type: "array"
        items:
          type: "string"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      issue_number:
        type: "string"
        example: "1"
      replacement:
        $ref: "#/definitions/ReplacementJSON"
      enabled:
        type: "boolean"
        example: true
      collected:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_number:
        type: "string"
        example: "364435172576215"
      technology:
        type: "string"
        example: "technologyString1"
      cancelled:
        type: "boolean"
        example: true
      bank_id:
        type: "string"
        example: "gh.29.uk"
      card_id:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      pin_reset:
        type: "array"
        items:
          $ref: "#/definitions/PinResetJSON"
      serial_number:
        type: "string"
        example: "1324234"
      account:
        $ref: "#/definitions/AccountBasicV310"
      valid_from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_attributes:
        type: "array"
        items:
          $ref: "#/definitions/CardAttributeCommons"
      name_on_card:
        type: "string"
        example: "SusanSmith"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_type:
        type: "string"
        example: "Credit"
      on_hot_list:
        type: "boolean"
        example: true
    example:
      allows:
      - "allows"
      - "allows"
      card_number: "364435172576215"
      expires_date: "1100-01-01T00:00:00Z"
      collected: "1100-01-01T00:00:00Z"
      serial_number: "1324234"
      card_attributes:
      - bank_id:
          value: "gh.uk.9j"
        name: "OVERDRAFT_START_DATE"
        card_attribute_id: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
        attribute_type: "STRING"
        value: "2012-04-23"
        card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      - bank_id:
          value: "gh.uk.9j"
        name: "OVERDRAFT_START_DATE"
        card_attribute_id: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
        attribute_type: "STRING"
        value: "2012-04-23"
        card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      technology: "technologyString1"
      networks:
      - "networks"
      - "networks"
      card_type: "Credit"
      enabled: true
      card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      pin_reset:
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      valid_from_date: "1100-01-01T00:00:00Z"
      posted: "1100-01-01T00:00:00Z"
      issue_number: "1"
      bank_id: "gh.29.uk"
      cancelled: true
      on_hot_list: true
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      replacement:
        requested_date: "1100-01-01T00:00:00Z"
        reason_requested: "RENEW"
      account:
        views_available:
        - name: "Owner"
          description: "This view is for the owner for the account."
          id: "owner"
        - name: "Owner"
          description: "This view is for the owner for the account."
          id: "owner"
        bank_id: "gh.29.uk"
        id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        label: "My Account"
      name_on_card: "SusanSmith"
  AccountHeldJson:
    required:
    - "account_routings"
    - "bank_id"
    - "id"
    - "label"
    - "number"
    properties:
      number:
        type: "string"
        example: "123"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      bank_id:
        type: "string"
        example: "123"
      id:
        type: "string"
        example: "12314"
    example:
      number: "123"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "123"
      label: "My Account"
      id: "12314"
  JsonConnectorMethod:
    required:
    - "method_body"
    - "method_name"
    - "programming_lang"
    properties:
      connector_method_id:
        type: "string"
        example: "ace0352a-9a0f-4bfa-b30b-9003aa467f51"
      method_name:
        type: "string"
        example: "getBank"
      method_body:
        type: "string"
        example: "package%20code.bankconnectors%3B%0A%0Aimport%20com.openbankproject.commons.model.*%3B%0Aimport%20java.util.function.Function%3B%0Aimport%20java.util.function.Supplier%3B%0A%0A%2F**%0A%20*%20This%20is%20a%20java%20dynamic%20function%20template.%0A%20*%20Must%20copy%20the%20whole%20content%20of%20the%20file%20as%20%22dynamic%20method%20body%22.%0A%20*%20Currently%2C%20support%20Java%201.8%20version%20language%20features%0A%20*%2F%0Apublic%20class%20DynamicJavaConnector%20implements%20Supplier%3CFunction%3CObject%5B%5D%2C%20Object%3E%3E%20%7B%0A%20%20%20%20private%20Object%20apply(Object%5B%5D%20args)%20%7B%0A%20%20%20%20%20%20%20BankId%20bankId%20%3D%20(BankId)%20args%5B0%5D%3B%0A%0A%20%20%20%20%20%20%20Bank%20bank%20%3D%20new%20BankCommons(bankId%2C%20%22The%20Java%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22The%20Royal%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%2Flogo.gif%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22OBP%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Swift%20bic%20value%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20return%20bank%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%40Override%0A%20%20%20%20public%20Function%3CObject%5B%5D%2C%20Object%3E%20get()%20%7B%0A%20%20%20%20%20%20%20%20return%20this%3A%3Aapply%3B%0A%20%20%20%20%7D%0A%7D%0A"
      programming_lang:
        type: "string"
        example: "Java"
    example:
      connector_method_id: "ace0352a-9a0f-4bfa-b30b-9003aa467f51"
      method_name: "getBank"
      method_body: "package%20code.bankconnectors%3B%0A%0Aimport%20com.openbankproject.commons.model.*%3B%0Aimport%20java.util.function.Function%3B%0Aimport%20java.util.function.Supplier%3B%0A%0A%2F**%0A%20*%20This%20is%20a%20java%20dynamic%20function%20template.%0A%20*%20Must%20copy%20the%20whole%20content%20of%20the%20file%20as%20%22dynamic%20method%20body%22.%0A%20*%20Currently%2C%20support%20Java%201.8%20version%20language%20features%0A%20*%2F%0Apublic%20class%20DynamicJavaConnector%20implements%20Supplier%3CFunction%3CObject%5B%5D%2C%20Object%3E%3E%20%7B%0A%20%20%20%20private%20Object%20apply(Object%5B%5D%20args)%20%7B%0A%20%20%20%20%20%20%20BankId%20bankId%20%3D%20(BankId)%20args%5B0%5D%3B%0A%0A%20%20%20%20%20%20%20Bank%20bank%20%3D%20new%20BankCommons(bankId%2C%20%22The%20Java%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22The%20Royal%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%2Flogo.gif%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22OBP%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Swift%20bic%20value%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20return%20bank%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%40Override%0A%20%20%20%20public%20Function%3CObject%5B%5D%2C%20Object%3E%20get()%20%7B%0A%20%20%20%20%20%20%20%20return%20this%3A%3Aapply%3B%0A%20%20%20%20%7D%0A%7D%0A"
      programming_lang: "Java"
  CustomerWithAttributesJsonV310:
    required:
    - "bank_id"
    - "branch_id"
    - "customer_attributes"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "dependants"
    - "dob_of_dependants"
    - "email"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "kyc_status"
    - "last_ok_date"
    - "legal_name"
    - "mobile_phone_number"
    - "name_suffix"
    - "relationship_status"
    - "title"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      customer_attributes:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAttributeResponseJsonV300"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
          format: "date"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      title:
        type: "string"
        example: "Dr."
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
    example:
      kyc_status: true
      highest_education_attained: "Master"
      name_suffix: "Sr"
      customer_number: "5987953"
      date_of_birth: "1100-01-01T00:00:00Z"
      face_image:
        date: "1100-01-01T00:00:00Z"
        url: "www.openbankproject"
      title: "Dr."
      mobile_phone_number: "+44 07972 444 876"
      dob_of_dependants:
      - "2000-01-23"
      - "2000-01-23"
      credit_rating:
        rating: "OBP"
        source: "OBP"
      relationship_status: "single"
      branch_id: "DERBY6"
      last_ok_date: "2023-02-05T14:15:53Z"
      dependants: 1
      bank_id: "gh.29.uk"
      credit_limit:
        amount: "0"
        currency: "EUR"
      customer_attributes:
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      employment_status: "worker"
      legal_name: "Eveline Tripman"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email: "felixsmith@example.com"
  PostCustomerJsonV500:
    required:
    - "legal_name"
    - "mobile_phone_number"
    properties:
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+49 30 901820"
      customer_number:
        type: "string"
        example: "5987953"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
          format: "date"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      title:
        type: "string"
        example: "Dr."
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
  ProductJsonV310:
    required:
    - "bank_id"
    - "category"
    - "code"
    - "description"
    - "details"
    - "family"
    - "meta"
    - "more_info_url"
    - "name"
    - "parent_product_code"
    - "super_family"
    properties:
      name:
        type: "string"
        example: "product name"
      description:
        type: "string"
        example: "Description"
      more_info_url:
        type: "string"
        example: "www.example.com/prod1/more-info.html"
      super_family:
        type: "string"
        example: "super family"
      code:
        type: "string"
        example: "1234BW"
      product_attributes:
        type: "array"
        items:
          $ref: "#/definitions/ProductAttributeResponseWithoutBankIdJson"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      details:
        type: "string"
        example: "Details"
      category:
        type: "string"
        example: "category"
      family:
        type: "string"
        example: "family"
      parent_product_code:
        type: "string"
        example: "parent"
    example:
      code: "1234BW"
      bank_id: "gh.29.uk"
      meta:
        license:
          name: "Open Database License"
          id: "ODbL-1.0"
      product_attributes:
      - name: "OVERDRAFT_START_DATE"
        product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - name: "OVERDRAFT_START_DATE"
        product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      name: "product name"
      parent_product_code: "parent"
      description: "Description"
      super_family: "super family"
      details: "Details"
      category: "category"
      family: "family"
      more_info_url: "www.example.com/prod1/more-info.html"
  PostUserAuthContextUpdateJsonV310:
    required:
    - "answer"
    properties:
      answer:
        type: "string"
        example: "123"
  PostStandingOrderJsonV400:
    required:
    - "amount"
    - "counterparty_id"
    - "customer_id"
    - "date_starts"
    - "user_id"
    - "when"
    properties:
      date_starts:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      date_signed:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      amount:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      date_expires:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      when:
        $ref: "#/definitions/When"
  SettlementAccountRequestJson:
    required:
    - "account_routings"
    - "balance"
    - "branch_id"
    - "label"
    - "payment_system"
    - "user_id"
    properties:
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      payment_system:
        type: "string"
        example: "SEPA"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
  PostCreateUserAccountAccessJsonV400:
    required:
    - "provider"
    - "username"
    - "views"
    properties:
      username:
        type: "string"
        example: "felixsmith"
      provider:
        type: "string"
        example: "dauth.ETHEREUM"
      views:
        type: "array"
        items:
          $ref: "#/definitions/PostViewJsonV400"
  AccountRoutingJsonV121:
    required:
    - "address"
    - "scheme"
    properties:
      scheme:
        type: "string"
        example: "AccountNumber"
      address:
        type: "string"
        example: "4930396"
    example:
      address: "4930396"
      scheme: "AccountNumber"
  BankJson500:
    required:
    - "bank_code"
    - "bank_routings"
    - "full_name"
    - "id"
    - "logo"
    - "website"
    properties:
      bank_routings:
        type: "array"
        items:
          $ref: "#/definitions/BankRoutingJsonV121"
      website:
        type: "string"
        example: "bank logoUrl string"
      full_name:
        type: "string"
        example: "bank fullName string"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/BankAttributeBankResponseJsonV400"
      logo:
        type: "string"
        example: "bank logoUrl string"
      id:
        type: "string"
        example: "gh.29.uk"
      bank_code:
        type: "string"
        example: "CGHZ"
    example:
      bank_code: "CGHZ"
      website: "bank logoUrl string"
      full_name: "bank fullName string"
      bank_routings:
      - address: ""
        scheme: "scheme value"
      - address: ""
        scheme: "scheme value"
      logo: "bank logoUrl string"
      attributes:
      - name: "ACCOUNT_MANAGEMENT_FEE"
        value: "5987953"
      - name: "ACCOUNT_MANAGEMENT_FEE"
        value: "5987953"
      id: "gh.29.uk"
  EnergySource400:
    required:
    - "organisation"
    - "organisation_website"
    properties:
      organisation:
        type: "string"
        example: "Stromio"
      organisation_website:
        type: "string"
        example: "https://www.stromio.de/"
    example:
      organisation_website: "https://www.stromio.de/"
      organisation: "Stromio"
  PutProductCollectionsV310:
    required:
    - "children_product_codes"
    - "parent_product_code"
    properties:
      parent_product_code:
        type: "string"
        example: "A"
      children_product_codes:
        type: "array"
        items:
          type: "string"
  TransactionRequestChargeJsonV200:
    required:
    - "summary"
    - "value"
    properties:
      summary:
        type: "string"
        example: "Rent the flat"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
    example:
      summary: "Rent the flat"
      value:
        amount: "0"
        currency: "EUR"
  MoreInfoJSON:
    required:
    - "more_info"
    properties:
      more_info:
        type: "string"
        example: "String"
  TransactionAttributeResponseJson:
    required:
    - "name"
    - "transaction_attribute_id"
    - "type"
    - "value"
    properties:
      transaction_attribute_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name:
        type: "string"
        example: "HOUSE_RENT"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "123456789"
    example:
      name: "HOUSE_RENT"
      type: "DATE_WITH_DAY"
      value: "123456789"
      transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  TransactionTagJSON:
    required:
    - "date"
    - "id"
    - "user"
    - "value"
    properties:
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      value:
        type: "string"
        example: "OBP"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user:
        $ref: "#/definitions/UserJSONV121"
    example:
      date: "1100-01-01T00:00:00Z"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      value: "OBP"
      user:
        provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
  TransactionRequestTypeJSONV210:
    required:
    - "transaction_request_type"
    properties:
      transaction_request_type:
        type: "string"
        example: "SandboxTan"
    example:
      transaction_request_type: "SandboxTan"
  CustomersWithAttributesJsonV300:
    required:
    - "customers"
    properties:
      customers:
        type: "array"
        items:
          $ref: "#/definitions/CustomerWithAttributesJsonV300"
    example:
      customers:
      - kyc_status: true
        highest_education_attained: "Master"
        name_suffix: "Sr"
        customer_number: "5987953"
        date_of_birth: "19900101"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        title: "Dr."
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "dob_of_dependants"
        - "dob_of_dependants"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        branch_id: "DERBY6"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        customer_attributes:
        - name: "SPECIAL_TAX_NUMBER"
          type: "STRING"
          value: "123456789"
          customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        - name: "SPECIAL_TAX_NUMBER"
          type: "STRING"
          value: "123456789"
          customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
      - kyc_status: true
        highest_education_attained: "Master"
        name_suffix: "Sr"
        customer_number: "5987953"
        date_of_birth: "19900101"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        title: "Dr."
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "dob_of_dependants"
        - "dob_of_dependants"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        branch_id: "DERBY6"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        customer_attributes:
        - name: "SPECIAL_TAX_NUMBER"
          type: "STRING"
          value: "123456789"
          customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        - name: "SPECIAL_TAX_NUMBER"
          type: "STRING"
          value: "123456789"
          customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
  PutUpdateCustomerMobilePhoneNumberJsonV310:
    required:
    - "mobile_phone_number"
    properties:
      mobile_phone_number:
        type: "string"
        example: "+381631954907"
  RefreshUserJson:
    required:
    - "duration_time"
    properties:
      duration_time:
        type: "string"
        example: "10 ms"
    example:
      duration_time: "10 ms"
  LobbyJsonV330:
    required:
    - "friday"
    - "monday"
    - "saturday"
    - "sunday"
    - "thursday"
    - "tuesday"
    - "wednesday"
    properties:
      sunday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
      tuesday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
      wednesday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
      monday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
      friday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
      thursday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
      saturday:
        type: "array"
        items:
          $ref: "#/definitions/OpeningTimesV300"
    example:
      sunday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
      saturday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
      tuesday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
      wednesday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
      friday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
      thursday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
      monday:
      - closing_time: "18:00"
        opening_time: "10:00"
      - closing_time: "18:00"
        opening_time: "10:00"
  PostDirectDebitJsonV400:
    required:
    - "counterparty_id"
    - "customer_id"
    - "date_starts"
    - "user_id"
    properties:
      date_starts:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      date_signed:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      date_expires:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  CreateUserJson:
    required:
    - "email"
    - "first_name"
    - "last_name"
    - "password"
    - "username"
    properties:
      first_name:
        type: "string"
        example: "Simon"
      email:
        type: "string"
        example: "felixsmith@example.com"
      username:
        type: "string"
        example: "felixsmith"
      last_name:
        type: "string"
        example: "Redfern"
      password:
        type: "string"
        example: "String"
  PostKycMediaJSON:
    required:
    - "customer_number"
    - "date"
    - "relates_to_kyc_check_id"
    - "relates_to_kyc_document_id"
    - "type"
    - "url"
    properties:
      url:
        type: "string"
        example: "http://www.example.com/id-docs/123/image.png"
      customer_number:
        type: "string"
        example: "5987953"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      relates_to_kyc_document_id:
        type: "string"
        example: "123"
      relates_to_kyc_check_id:
        type: "string"
        example: "123"
      type:
        type: "string"
        example: "image"
  ConsumersJsonV310:
    required:
    - "consumers"
    properties:
      consumers:
        type: "array"
        items:
          $ref: "#/definitions/ConsumerJsonV310"
    example:
      consumers:
      - consumer_id: "8e716299-4668-4efd-976a-67f57a9984ec"
        app_name: "SOFI"
        app_type: "Web"
        developer_email: "felixsmith@example.com"
        created: "1100-01-01T00:00:00Z"
        description: "Account Management"
        enabled: true
        redirect_url: "www.openbankproject.com"
        created_by_user:
          provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          email: "felixsmith@example.com"
          username: "felixsmith"
      - consumer_id: "8e716299-4668-4efd-976a-67f57a9984ec"
        app_name: "SOFI"
        app_type: "Web"
        developer_email: "felixsmith@example.com"
        created: "1100-01-01T00:00:00Z"
        description: "Account Management"
        enabled: true
        redirect_url: "www.openbankproject.com"
        created_by_user:
          provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          email: "felixsmith@example.com"
          username: "felixsmith"
  AccountRouting:
    required:
    - "address"
    - "scheme"
    properties:
      scheme:
        type: "string"
        example: "accountNumber"
      address:
        type: "string"
        example: "123456"
    example:
      address: "123456"
      scheme: "accountNumber"
  UserJsonV200:
    required:
    - "email"
    - "entitlements"
    - "provider"
    - "provider_id"
    - "user_id"
    - "username"
    properties:
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      email:
        type: "string"
        example: "felixsmith@example.com"
      username:
        type: "string"
        example: "felixsmith"
      provider_id:
        type: "string"
        example: "Chris"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      entitlements:
        $ref: "#/definitions/EntitlementJSONs"
    example:
      entitlements:
        list:
        - role_name: "CanQueryOtherUser"
          entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
          bank_id: "gh.29.uk"
        - role_name: "CanQueryOtherUser"
          entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
          bank_id: "gh.29.uk"
      provider: "http://127.0.0.1:8080"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      provider_id: "Chris"
      email: "felixsmith@example.com"
      username: "felixsmith"
  ProductJsonV400:
    required:
    - "bank_id"
    - "description"
    - "meta"
    - "more_info_url"
    - "name"
    - "parent_product_code"
    - "product_code"
    - "terms_and_conditions_url"
    properties:
      name:
        type: "string"
        example: "Deposit Account 1"
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
      terms_and_conditions_url:
        type: "string"
        example: "www.example.com/xyz"
      more_info_url:
        type: "string"
        example: "www.example.com/abc"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ProductAttributeResponseWithoutBankIdJson"
      product_code:
        type: "string"
        example: "1234BW"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      fees:
        type: "array"
        items:
          $ref: "#/definitions/ProductFeeJsonV400"
      parent_product_code:
        type: "string"
        example: "787LOW"
    example:
      fees:
      - is_active: true
        name: "ACCOUNT_MANAGEMENT_FEE"
        more_info: "More information about this fee"
        value:
          amount: "10.12"
          currency: "EUR"
          type: ""
          frequency: "DAILY"
        product_fee_id: "696hlAHLFKUHE37469287634"
      - is_active: true
        name: "ACCOUNT_MANAGEMENT_FEE"
        more_info: "More information about this fee"
        value:
          amount: "10.12"
          currency: "EUR"
          type: ""
          frequency: "DAILY"
        product_fee_id: "696hlAHLFKUHE37469287634"
      bank_id: "gh.29.uk"
      meta:
        license:
          name: "Open Database License"
          id: "ODbL-1.0"
      name: "Deposit Account 1"
      parent_product_code: "787LOW"
      description: "This an optional field. Maximum length is 2000. It can be any\
        \ characters here."
      attributes:
      - name: "OVERDRAFT_START_DATE"
        product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - name: "OVERDRAFT_START_DATE"
        product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      terms_and_conditions_url: "www.example.com/xyz"
      product_code: "1234BW"
      more_info_url: "www.example.com/abc"
  SettlementAccountsJson:
    required:
    - "settlement_accounts"
    properties:
      settlement_accounts:
        type: "array"
        items:
          $ref: "#/definitions/SettlementAccountJson"
    example:
      settlement_accounts:
      - account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        payment_system: "SEPA"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        balance:
          amount: "0"
          currency: "EUR"
        branch_id: "DERBY6"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        label: "My Account"
      - account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        payment_system: "SEPA"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        balance:
          amount: "0"
          currency: "EUR"
        branch_id: "DERBY6"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        label: "My Account"
  TaxResidenceV310:
    required:
    - "domain"
    - "tax_number"
    - "tax_residence_id"
    properties:
      domain:
        type: "string"
        example: "Enter some domain"
      tax_number:
        type: "string"
        example: "Enter some number"
      tax_residence_id:
        type: "string"
        example: "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
    example:
      tax_residence_id: "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
      tax_number: "Enter some number"
      domain: "Enter some domain"
  RateLimit:
    properties:
      calls_made:
        type: "integer"
        format: "int64"
        example: -1
      reset_in_seconds:
        type: "integer"
        format: "int64"
        example: -1
    example:
      calls_made: -1
      reset_in_seconds: -1
  AtmServicesJsonV400:
    required:
    - "services"
    properties:
      services:
        type: "array"
        items:
          type: "string"
  DoubleEntryTransactionJson:
    required:
    - "credit_transaction"
    - "debit_transaction"
    - "transaction_request"
    properties:
      transaction_request:
        $ref: "#/definitions/TransactionRequestBankAccountJson"
      debit_transaction:
        $ref: "#/definitions/TransactionBankAccountJson"
      credit_transaction:
        $ref: "#/definitions/TransactionBankAccountJson"
    example:
      debit_transaction:
        transaction_id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
      transaction_request:
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        transaction_request_id: "8138a7e4-6d02-40e3-a129-0b2bf89de9f1"
        bank_id: "gh.29.uk"
      credit_transaction:
        transaction_id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
  MetaJsonV140:
    required:
    - "license"
    properties:
      license:
        $ref: "#/definitions/LicenseJsonV140"
    example:
      license:
        name: "Open Database License"
        id: "ODbL-1.0"
  CustomerAddressJsonV310:
    required:
    - "city"
    - "country_code"
    - "county"
    - "customer_address_id"
    - "customer_id"
    - "insert_date"
    - "line_1"
    - "line_2"
    - "line_3"
    - "postcode"
    - "state"
    - "status"
    - "tags"
    properties:
      city:
        type: "string"
        example: "Berlin"
      line_2:
        type: "string"
        example: "The Place"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      state:
        type: "string"
        example: "Brandenburg"
      insert_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      tags:
        type: "array"
        items:
          type: "string"
      customer_address_id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      postcode:
        type: "string"
        example: "13359"
      county:
        type: "string"
        example: ""
      country_code:
        type: "string"
        example: "DE"
      status:
        type: "string"
        example: "OK"
      line_3:
        type: "string"
        example: "The Hill"
      line_1:
        type: "string"
        example: "No 1 the Road"
    example:
      line_1: "No 1 the Road"
      line_2: "The Place"
      customer_address_id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      city: "Berlin"
      insert_date: "1100-01-01T00:00:00Z"
      postcode: "13359"
      county: ""
      line_3: "The Hill"
      tags:
      - "tags"
      - "tags"
      country_code: "DE"
      state: "Brandenburg"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      status: "OK"
  UpdateAccountJsonV400:
    required:
    - "label"
    properties:
      label:
        type: "string"
        example: "updated label"
  HistoricalTransactionAccountJsonV310:
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      bank_id: "gh.29.uk"
  AtmsJsonV510:
    required:
    - "atms"
    properties:
      atms:
        type: "array"
        items:
          $ref: "#/definitions/AtmJsonV510"
    example:
      atms:
      - supported_languages:
        - "supported_languages"
        - "supported_languages"
        accessibility_features:
        - "accessibility_features"
        - "accessibility_features"
        saturday:
          closing_time: "18:00"
          opening_time: "10:00"
        notes:
        - "notes"
        - "notes"
        more_info: "More information about this fee"
        balance_inquiry_fee: ""
        is_accessible: "true"
        supported_currencies:
        - "supported_currencies"
        - "supported_currencies"
        branch_identification: ""
        cash_withdrawal_national_fee: ""
        bank_id: "gh.29.uk"
        cash_withdrawal_international_fee: ""
        wednesday:
          closing_time: "18:00"
          opening_time: "10:00"
        friday:
          closing_time: "18:00"
          opening_time: "10:00"
        id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        monday:
          closing_time: "18:00"
          opening_time: "10:00"
        location_categories:
        - "location_categories"
        - "location_categories"
        minimum_withdrawal: "5"
        address:
          line_1: "No 1 the Road"
          line_2: "The Place"
          country_code: "DE"
          city: "Berlin"
          postcode: "13359"
          county: ""
          state: "Brandenburg"
          line_3: "The Hill"
        site_identification: ""
        located_at: ""
        atm_type: ""
        thursday:
          closing_time: "18:00"
          opening_time: "10:00"
        services:
        - "services"
        - "services"
        has_deposit_capability: "true"
        site_name: ""
        sunday:
          closing_time: "18:00"
          opening_time: "10:00"
        tuesday:
          closing_time: "18:00"
          opening_time: "10:00"
        phone: ""
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Atm by the Lake"
        location:
          latitude: 11.45
          longitude: 11.45
        attributes:
        - is_active: true
          atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
          bank_id: "gh.29.uk"
          name: "ACCOUNT_MANAGEMENT_FEE"
          atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
          type: ""
          value: "5987953"
        - is_active: true
          atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
          bank_id: "gh.29.uk"
          name: "ACCOUNT_MANAGEMENT_FEE"
          atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
          type: ""
          value: "5987953"
      - supported_languages:
        - "supported_languages"
        - "supported_languages"
        accessibility_features:
        - "accessibility_features"
        - "accessibility_features"
        saturday:
          closing_time: "18:00"
          opening_time: "10:00"
        notes:
        - "notes"
        - "notes"
        more_info: "More information about this fee"
        balance_inquiry_fee: ""
        is_accessible: "true"
        supported_currencies:
        - "supported_currencies"
        - "supported_currencies"
        branch_identification: ""
        cash_withdrawal_national_fee: ""
        bank_id: "gh.29.uk"
        cash_withdrawal_international_fee: ""
        wednesday:
          closing_time: "18:00"
          opening_time: "10:00"
        friday:
          closing_time: "18:00"
          opening_time: "10:00"
        id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        monday:
          closing_time: "18:00"
          opening_time: "10:00"
        location_categories:
        - "location_categories"
        - "location_categories"
        minimum_withdrawal: "5"
        address:
          line_1: "No 1 the Road"
          line_2: "The Place"
          country_code: "DE"
          city: "Berlin"
          postcode: "13359"
          county: ""
          state: "Brandenburg"
          line_3: "The Hill"
        site_identification: ""
        located_at: ""
        atm_type: ""
        thursday:
          closing_time: "18:00"
          opening_time: "10:00"
        services:
        - "services"
        - "services"
        has_deposit_capability: "true"
        site_name: ""
        sunday:
          closing_time: "18:00"
          opening_time: "10:00"
        tuesday:
          closing_time: "18:00"
          opening_time: "10:00"
        phone: ""
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Atm by the Lake"
        location:
          latitude: 11.45
          longitude: 11.45
        attributes:
        - is_active: true
          atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
          bank_id: "gh.29.uk"
          name: "ACCOUNT_MANAGEMENT_FEE"
          atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
          type: ""
          value: "5987953"
        - is_active: true
          atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
          bank_id: "gh.29.uk"
          name: "ACCOUNT_MANAGEMENT_FEE"
          atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
          type: ""
          value: "5987953"
  AccountAttributeResponseJson:
    required:
    - "account_attribute_id"
    - "name"
    - "product_code"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      account_attribute_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_code:
        type: "string"
        example: "1234BW"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      product_instance_code:
        type: "string"
        example: "LKJL98769F"
      value:
        type: "string"
        example: "2012-04-23"
    example:
      account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_instance_code: "LKJL98769F"
      name: "OVERDRAFT_START_DATE"
      product_code: "1234BW"
      type: "DATE_WITH_DAY"
      value: "2012-04-23"
  InboundStatusMessage:
    required:
    - "errorCode"
    - "source"
    - "status"
    - "text"
    properties:
      duration:
        type: "string"
        format: "double"
        example: "5.123"
      source:
        type: "string"
        example: ""
      text:
        type: "string"
        example: ""
      errorCode:
        type: "string"
        example: ""
      status:
        type: "string"
        example: ""
    example:
      duration: "5.123"
      errorCode: ""
      source: ""
      text: ""
      status: ""
  MeetingsJsonV310:
    required:
    - "meetings"
    properties:
      meetings:
        type: "array"
        items:
          $ref: "#/definitions/MeetingJsonV310"
    example:
      meetings:
      - creator:
          email_address: "felixsmith@example.com"
          mobile_phone: "+44 07972 444 876"
          name: "Simon "
        invitees:
        - contact_details:
            email_address: "felixsmith@example.com"
            mobile_phone: "+44 07972 444 876"
            name: "Simon "
          status: "String, eg: Good"
        - contact_details:
            email_address: "felixsmith@example.com"
            mobile_phone: "+44 07972 444 876"
            name: "Simon "
          status: "String, eg: Good"
        bank_id: "gh.29.uk"
        meeting_id: "UUID-String"
        keys:
          staff_token: "String"
          customer_token: "String"
          session_id: "String"
        provider_id: "Chris"
        purpose_id: "String, eg: onboarding"
        present:
          staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          customer_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        when: "1100-01-01T00:00:00Z"
      - creator:
          email_address: "felixsmith@example.com"
          mobile_phone: "+44 07972 444 876"
          name: "Simon "
        invitees:
        - contact_details:
            email_address: "felixsmith@example.com"
            mobile_phone: "+44 07972 444 876"
            name: "Simon "
          status: "String, eg: Good"
        - contact_details:
            email_address: "felixsmith@example.com"
            mobile_phone: "+44 07972 444 876"
            name: "Simon "
          status: "String, eg: Good"
        bank_id: "gh.29.uk"
        meeting_id: "UUID-String"
        keys:
          staff_token: "String"
          customer_token: "String"
          session_id: "String"
        provider_id: "Chris"
        purpose_id: "String, eg: onboarding"
        present:
          staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          customer_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        when: "1100-01-01T00:00:00Z"
  FXRateJsonV220:
    required:
    - "bank_id"
    - "conversion_value"
    - "effective_date"
    - "from_currency_code"
    - "inverse_conversion_value"
    - "to_currency_code"
    properties:
      inverse_conversion_value:
        type: "number"
        format: "double"
        example: 0.998
      to_currency_code:
        type: "string"
        example: "GBP"
      effective_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      conversion_value:
        type: "number"
        format: "double"
        example: 1.001
      bank_id:
        type: "string"
        example: "gh.29.uk"
      from_currency_code:
        type: "string"
        example: "EUR"
    example:
      inverse_conversion_value: 0.998
      from_currency_code: "EUR"
      bank_id: "gh.29.uk"
      to_currency_code: "GBP"
      effective_date: "1100-01-01T00:00:00Z"
      conversion_value: 1.001
  AccountTagJSON:
    required:
    - "date"
    - "id"
    - "user"
    - "value"
    properties:
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      value:
        type: "string"
        example: "OBP"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user:
        $ref: "#/definitions/UserJSONV121"
    example:
      date: "1100-01-01T00:00:00Z"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      value: "OBP"
      user:
        provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
  KycChecksJSON:
    required:
    - "checks"
    properties:
      checks:
        type: "array"
        items:
          $ref: "#/definitions/KycCheckJSON"
    example:
      checks:
      - date: "1100-01-01T00:00:00Z"
        staff_name: "PlaceholderString"
        how: "PlaceholderString"
        comments: "PlaceholderString"
        staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        satisfied: true
        id: "PlaceholderString"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - date: "1100-01-01T00:00:00Z"
        staff_name: "PlaceholderString"
        how: "PlaceholderString"
        comments: "PlaceholderString"
        staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        satisfied: true
        id: "PlaceholderString"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  PostAtmJsonV510:
    required:
    - "accessibility_features"
    - "address"
    - "atm_type"
    - "balance_inquiry_fee"
    - "bank_id"
    - "branch_identification"
    - "cash_withdrawal_international_fee"
    - "cash_withdrawal_national_fee"
    - "friday"
    - "has_deposit_capability"
    - "is_accessible"
    - "located_at"
    - "location"
    - "location_categories"
    - "meta"
    - "minimum_withdrawal"
    - "monday"
    - "more_info"
    - "name"
    - "notes"
    - "phone"
    - "saturday"
    - "services"
    - "site_identification"
    - "site_name"
    - "sunday"
    - "supported_currencies"
    - "supported_languages"
    - "thursday"
    - "tuesday"
    - "wednesday"
    properties:
      sunday:
        $ref: "#/definitions/OpeningTimesV300"
      services:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
        example: "Atm by the Lake"
      location:
        $ref: "#/definitions/LocationJsonV140"
      tuesday:
        $ref: "#/definitions/OpeningTimesV300"
      cash_withdrawal_international_fee:
        type: "string"
        example: ""
      wednesday:
        $ref: "#/definitions/OpeningTimesV300"
      branch_identification:
        type: "string"
        example: ""
      location_categories:
        type: "array"
        items:
          type: "string"
      site_identification:
        type: "string"
        example: ""
      monday:
        $ref: "#/definitions/OpeningTimesV300"
      has_deposit_capability:
        type: "string"
        example: "true"
      balance_inquiry_fee:
        type: "string"
        example: ""
      site_name:
        type: "string"
        example: ""
      more_info:
        type: "string"
        example: "More information about this fee"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      supported_languages:
        type: "array"
        items:
          type: "string"
      supported_currencies:
        type: "array"
        items:
          type: "string"
      accessibility_features:
        type: "array"
        items:
          type: "string"
      address:
        $ref: "#/definitions/AddressJsonV300"
      cash_withdrawal_national_fee:
        type: "string"
        example: ""
      friday:
        $ref: "#/definitions/OpeningTimesV300"
      notes:
        type: "array"
        items:
          type: "string"
      is_accessible:
        type: "string"
        example: "true"
      atm_type:
        type: "string"
        example: ""
      thursday:
        $ref: "#/definitions/OpeningTimesV300"
      saturday:
        $ref: "#/definitions/OpeningTimesV300"
      located_at:
        type: "string"
        example: ""
      minimum_withdrawal:
        type: "string"
        example: "5"
      phone:
        type: "string"
        example: ""
  UserAttributesResponseJson:
    required:
    - "user_attributes"
    properties:
      user_attributes:
        type: "array"
        items:
          $ref: "#/definitions/UserAttributeResponseJsonV400"
    example:
      user_attributes:
      - insert_date: "2024-02-05T14:15:53Z"
        user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        name: "BATTERY_LEVEL"
        type: "STRING"
        value: "90"
      - insert_date: "2024-02-05T14:15:53Z"
        user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        name: "BATTERY_LEVEL"
        type: "STRING"
        value: "90"
  BasicViewJson:
    required:
    - "id"
    - "is_public"
    - "short_name"
    properties:
      id:
        type: "string"
        example: "1"
      short_name:
        type: "string"
        example: "HHH"
      is_public:
        type: "boolean"
        example: true
    example:
      is_public: true
      short_name: "HHH"
      id: "1"
  TransactionType:
    required:
    - "bankId"
    - "charge"
    - "description"
    - "id"
    - "shortCode"
    - "summary"
    properties:
      shortCode:
        type: "string"
        example: "80080"
      description:
        type: "string"
        example: "This is the sandbox mode, charging litter money."
      id:
        $ref: "#/definitions/TransactionTypeId"
      charge:
        $ref: "#/definitions/AmountOfMoney"
      bankId:
        $ref: "#/definitions/BankId"
      summary:
        type: "string"
        example: "SANDBOX_TAN"
    example:
      summary: "SANDBOX_TAN"
      bankId:
        value: "gh.uk.9j"
      charge:
        amount: "100"
        currency: "EUR"
      description: "This is the sandbox mode, charging litter money."
      id:
        value: "123"
      shortCode: "80080"
  DirectDebitJsonV400:
    required:
    - "account_id"
    - "active"
    - "bank_id"
    - "counterparty_id"
    - "customer_id"
    - "date_cancelled"
    - "date_expires"
    - "date_signed"
    - "date_starts"
    - "direct_debit_id"
    - "user_id"
    properties:
      date_starts:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      date_cancelled:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      date_signed:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      date_expires:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      direct_debit_id:
        type: "string"
        example: "aa0533bd-eb22-4bff-af75-d45240361b05"
      active:
        type: "boolean"
        example: true
    example:
      date_starts: "2024-02-05T14:15:53Z"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      date_signed: "2024-02-05T14:15:53Z"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      bank_id: "gh.29.uk"
      direct_debit_id: "aa0533bd-eb22-4bff-af75-d45240361b05"
      active: true
      date_cancelled: "2024-02-05T14:15:53Z"
      date_expires: "2024-02-05T14:15:53Z"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  ModeratedCoreAccountJsonV300:
    required:
    - "account_routings"
    - "account_rules"
    - "balance"
    - "bank_id"
    - "id"
    - "label"
    - "number"
    - "owners"
    - "type"
    properties:
      number:
        type: "string"
        example: ""
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      owners:
        type: "array"
        items:
          $ref: "#/definitions/UserJSONV121"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      type:
        type: "string"
        example: ""
      account_rules:
        type: "array"
        items:
          $ref: "#/definitions/AccountRuleJsonV300"
    example:
      number: ""
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      account_rules:
      - scheme: "OVERDRAFT"
        value: "10"
      - scheme: "OVERDRAFT"
        value: "10"
      balance:
        amount: "0"
        currency: "EUR"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "gh.29.uk"
      owners:
      - provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      - provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      label: "My Account"
      id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      type: ""
  ConsumerJsonV310:
    required:
    - "app_name"
    - "app_type"
    - "consumer_id"
    - "created"
    - "created_by_user"
    - "description"
    - "developer_email"
    - "enabled"
    - "redirect_url"
    properties:
      app_type:
        type: "string"
        example: "Web"
      description:
        type: "string"
        example: "Account Management"
      created_by_user:
        $ref: "#/definitions/ResourceUserJSON"
      enabled:
        type: "boolean"
        example: true
      redirect_url:
        type: "string"
        example: "www.openbankproject.com"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
      consumer_id:
        type: "string"
        example: "8e716299-4668-4efd-976a-67f57a9984ec"
      app_name:
        type: "string"
        example: "SOFI"
      created:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      consumer_id: "8e716299-4668-4efd-976a-67f57a9984ec"
      app_name: "SOFI"
      app_type: "Web"
      developer_email: "felixsmith@example.com"
      created: "1100-01-01T00:00:00Z"
      description: "Account Management"
      enabled: true
      redirect_url: "www.openbankproject.com"
      created_by_user:
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        email: "felixsmith@example.com"
        username: "felixsmith"
  ProductCollectionsJsonV310:
    required:
    - "product_collection"
    properties:
      product_collection:
        type: "array"
        items:
          $ref: "#/definitions/ProductCollectionJsonV310"
    example:
      product_collection:
      - collection_code: "C"
        product_code: "1234BW"
        items:
        - member_product_code: "A"
        - member_product_code: "A"
      - collection_code: "C"
        product_code: "1234BW"
        items:
        - member_product_code: "A"
        - member_product_code: "A"
  ViewsIdsJsonV500:
    required:
    - "views"
    properties:
      views:
        type: "array"
        items:
          $ref: "#/definitions/ViewIdJsonV500"
    example:
      views:
      - id: "owner"
      - id: "owner"
  TransactionRequestBodyAllTypes:
    required:
    - "description"
    - "value"
    properties:
      to_transfer_to_phone:
        $ref: "#/definitions/TransactionRequestTransferToPhone"
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
      to_transfer_to_atm:
        $ref: "#/definitions/TransactionRequestTransferToAtm"
      to_counterparty:
        $ref: "#/definitions/TransactionRequestCounterpartyId"
      to_sepa_credit_transfers:
        $ref: "#/definitions/SepaCreditTransfers"
      to_simple:
        $ref: "#/definitions/TransactionRequestSimple"
      to_sepa:
        $ref: "#/definitions/TransactionRequestIban"
      to_transfer_to_account:
        $ref: "#/definitions/TransactionRequestTransferToAccount"
      value:
        $ref: "#/definitions/AmountOfMoney"
      to_sandbox_tan:
        $ref: "#/definitions/TransactionRequestAccount"
    example:
      to_sepa_credit_transfers:
        debtorAccount:
          iban: "GB33BUKB20201555555555"
        creditorName: "John Miles"
        creditorAccount:
          iban: "GB33BUKB20201555555555"
        instructedAmount:
          amount: "0"
          currency: "EUR"
      to_counterparty:
        counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      to_sandbox_tan:
        account_id: "String"
        bank_id: "String"
      description: "This an optional field. Maximum length is 2000. It can be any\
        \ characters here."
      to_transfer_to_account:
        description: "String"
        to:
          bank_code: "String"
          branch_number: "String"
          name: "String"
          account:
            number: "String"
            iban: "String"
        transfer_type: "String"
        value:
          amount: "0"
          currency: "EUR"
        future_date: "20181230"
      to_simple:
        otherBranchRoutingAddress: "DERBY6"
        otherBankRoutingScheme: "BIC"
        otherBranchRoutingScheme: "BRANCH-CODE"
        otherBankRoutingAddress: "GENODEM1GLS"
        otherAccountSecondaryRoutingScheme: "IBAN"
        otherAccountRoutingAddress: "DE91 1000 0000 0123 4567 89"
        otherAccountSecondaryRoutingAddress: "DE91 1000 0000 0123 4567 89"
        otherAccountRoutingScheme: "IBAN"
      to_sepa:
        iban: "String"
      to_transfer_to_phone:
        description: "String"
        from:
          nickname: "String"
          mobile_phone_number: "+44 07972 444 876"
        to:
          mobile_phone_number: "+44 07972 444 876"
        message: "String"
        value:
          amount: "0"
          currency: "EUR"
      to_transfer_to_atm:
        description: "String"
        from:
          nickname: "String"
          mobile_phone_number: "+44 07972 444 876"
        to:
          kyc_document:
            number: "String"
            type: "String"
          date_of_birth: "20181230"
          legal_name: "Eveline Tripman"
          mobile_phone_number: "+44 07972 444 876"
        message: "String"
        value:
          amount: "0"
          currency: "EUR"
      value:
        amount: "100"
        currency: "EUR"
  AccountBalanceJsonV400:
    required:
    - "account_id"
    - "account_routings"
    - "balances"
    - "bank_id"
    - "label"
    properties:
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRouting"
      label:
        type: "string"
        example: "My Account"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      balances:
        type: "array"
        items:
          $ref: "#/definitions/BalanceJsonV400"
    example:
      balances:
      - amount: "10"
        currency: "EUR"
        type: ""
      - amount: "10"
        currency: "EUR"
        type: ""
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      account_routings:
      - address: "123456"
        scheme: "accountNumber"
      - address: "123456"
        scheme: "accountNumber"
      bank_id: "gh.29.uk"
      label: "My Account"
  TransactionRequestTypesJsonV140:
    required:
    - "transaction_request_types"
    properties:
      transaction_request_types:
        type: "array"
        items:
          $ref: "#/definitions/TransactionRequestTypeJsonV140"
    example:
      transaction_request_types:
      - charge:
          summary: "The bank fixed charge"
          value:
            amount: "0"
            currency: "EUR"
        value: "10"
      - charge:
          summary: "The bank fixed charge"
          value:
            amount: "0"
            currency: "EUR"
        value: "10"
  ProductCollectionItemJsonV310:
    required:
    - "member_product_code"
    properties:
      member_product_code:
        type: "string"
        example: "A"
    example:
      member_product_code: "A"
  TopApisJson:
    required:
    - "top_apis"
    properties:
      top_apis:
        type: "array"
        items:
          $ref: "#/definitions/TopApiJson"
    example:
      top_apis:
      - Implemented_by_partial_function: "getBanks"
        implemented_in_version: "v1.2.1"
        count: 7076
      - Implemented_by_partial_function: "getBanks"
        implemented_in_version: "v1.2.1"
        count: 7076
  CheckbookOrdersJson:
    required:
    - "account"
    - "orders"
    properties:
      account:
        $ref: "#/definitions/AccountV310Json"
      orders:
        type: "array"
        items:
          $ref: "#/definitions/OrderJson"
    example:
      orders:
      - order:
          number_of_checkbooks: "4"
          order_date: "07082013"
          shipping_code: "1"
          distribution_channel: "1201"
          first_check_number: "5165276"
          order_id: "xjksajfkj"
          status: "2"
      - order:
          number_of_checkbooks: "4"
          order_date: "07082013"
          shipping_code: "1"
          distribution_channel: "1201"
          first_check_number: "5165276"
          order_id: "xjksajfkj"
          status: "2"
      account:
        account_type: "330"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "gh.29.uk"
        branch_routings:
        - address: "678"
          scheme: "BranchNumber"
        - address: "678"
          scheme: "BranchNumber"
  ProductFeeValueJsonV400:
    required:
    - "amount"
    - "currency"
    - "frequency"
    - "type"
    properties:
      currency:
        type: "string"
        example: "EUR"
      amount:
        type: "string"
        format: "double"
        example: "10.12"
      frequency:
        type: "string"
        example: "DAILY"
      type:
        type: "string"
        example: ""
    example:
      amount: "10.12"
      currency: "EUR"
      type: ""
      frequency: "DAILY"
  TransactionRequestBodyCardJsonV400:
    required:
    - "card"
    - "description"
    - "to"
    - "value"
    properties:
      card:
        $ref: "#/definitions/CardJsonV400"
      to:
        $ref: "#/definitions/CounterpartyIdJson"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      description:
        type: "string"
        example: "A card payment description. "
  AtmSupportedCurrenciesJson:
    required:
    - "atm_id"
    - "supported_currencies"
    properties:
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      supported_currencies:
        type: "array"
        items:
          type: "string"
    example:
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
      supported_currencies:
      - "supported_currencies"
      - "supported_currencies"
  JsonSchemaV400:
    required:
    - "$schema"
    - "additionalProperties"
    - "description"
    - "properties"
    - "required"
    - "title"
    - "type"
    properties:
      description:
        type: "string"
        example: "The demo json-schema"
      properties:
        $ref: "#/definitions/Properties"
      additionalProperties:
        type: "boolean"
        example: true
      title:
        type: "string"
        example: "The demo schema"
      type:
        type: "string"
        example: "object"
      required:
        type: "array"
        items:
          type: "string"
      $schema:
        type: "string"
        example: "http://json-schema.org/draft-07/schema"
    example:
      $schema: "http://json-schema.org/draft-07/schema"
      description: "The demo json-schema"
      additionalProperties: true
      title: "The demo schema"
      type: "object"
      properties:
        xxx_id:
          examples:
          - "examples"
          - "examples"
          minLength: 2
          type: "string"
          maxLength: 50
      required:
      - "required"
      - "required"
  PostHistoricalTransactionJson:
    required:
    - "charge_policy"
    - "completed"
    - "description"
    - "from"
    - "posted"
    - "to"
    - "type"
    - "value"
    properties:
      description:
        type: "string"
        example: "this is for work"
      to:
        $ref: "#/definitions/HistoricalTransactionAccountJsonV310"
      completed:
        type: "string"
        example: "1100-01-01T01:01:01Z"
      charge_policy:
        type: "string"
        example: "SHARED"
      from:
        $ref: "#/definitions/HistoricalTransactionAccountJsonV310"
      type:
        type: "string"
        example: "SANDBOX_TAN"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      posted:
        type: "string"
        example: "1100-01-01T01:01:01Z"
  KycMediasJSON:
    required:
    - "medias"
    properties:
      medias:
        type: "array"
        items:
          $ref: "#/definitions/KycMediaJSON"
    example:
      medias:
      - date: "1100-01-01T00:00:00Z"
        relates_to_kyc_check_id: "PlaceholderString"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        relates_to_kyc_document_id: "PlaceholderString"
        id: "PlaceholderString"
        customer_id: "PlaceholderString"
        type: "PlaceholderString"
        url: "PlaceholderString"
      - date: "1100-01-01T00:00:00Z"
        relates_to_kyc_check_id: "PlaceholderString"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        relates_to_kyc_document_id: "PlaceholderString"
        id: "PlaceholderString"
        customer_id: "PlaceholderString"
        type: "PlaceholderString"
        url: "PlaceholderString"
  BranchesJsonV300:
    required:
    - "branches"
    properties:
      branches:
        type: "array"
        items:
          $ref: "#/definitions/BranchJsonV300"
    example:
      branches:
      - address:
          line_1: "No 1 the Road"
          line_2: "The Place"
          country_code: "DE"
          city: "Berlin"
          postcode: "13359"
          county: ""
          state: "Brandenburg"
          line_3: "The Hill"
        branch_routing:
          address: "678"
          scheme: "BranchNumber"
        drive_up:
          sunday:
            closing_time: "18:00"
            opening_time: "10:00"
          saturday:
            closing_time: "18:00"
            opening_time: "10:00"
          tuesday:
            closing_time: "18:00"
            opening_time: "10:00"
          wednesday:
            closing_time: "18:00"
            opening_time: "10:00"
          friday:
            closing_time: "18:00"
            opening_time: "10:00"
          thursday:
            closing_time: "18:00"
            opening_time: "10:00"
          monday:
            closing_time: "18:00"
            opening_time: "10:00"
        more_info: "short walk to the lake from here"
        accessibleFeatures: "wheelchair, atm usuable by the visually impaired"
        is_accessible: "true"
        lobby:
          sunday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          saturday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          tuesday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          wednesday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          friday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          thursday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          monday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
        branch_type: "Full service store"
        bank_id: "bank-id-123"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Branch by the Lake"
        phone_number: "+381631954907"
        location:
          latitude: 11.45
          longitude: 11.45
        id: "branch-id-123"
      - address:
          line_1: "No 1 the Road"
          line_2: "The Place"
          country_code: "DE"
          city: "Berlin"
          postcode: "13359"
          county: ""
          state: "Brandenburg"
          line_3: "The Hill"
        branch_routing:
          address: "678"
          scheme: "BranchNumber"
        drive_up:
          sunday:
            closing_time: "18:00"
            opening_time: "10:00"
          saturday:
            closing_time: "18:00"
            opening_time: "10:00"
          tuesday:
            closing_time: "18:00"
            opening_time: "10:00"
          wednesday:
            closing_time: "18:00"
            opening_time: "10:00"
          friday:
            closing_time: "18:00"
            opening_time: "10:00"
          thursday:
            closing_time: "18:00"
            opening_time: "10:00"
          monday:
            closing_time: "18:00"
            opening_time: "10:00"
        more_info: "short walk to the lake from here"
        accessibleFeatures: "wheelchair, atm usuable by the visually impaired"
        is_accessible: "true"
        lobby:
          sunday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          saturday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          tuesday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          wednesday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          friday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          thursday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
          monday:
          - closing_time: "18:00"
            opening_time: "10:00"
          - closing_time: "18:00"
            opening_time: "10:00"
        branch_type: "Full service store"
        bank_id: "bank-id-123"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Branch by the Lake"
        phone_number: "+381631954907"
        location:
          latitude: 11.45
          longitude: 11.45
        id: "branch-id-123"
  AccountsIdsJsonV300:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/AccountIdJson"
    example:
      accounts:
      - id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      - id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  CreateViewJsonV500:
    required:
    - "allowed_actions"
    - "description"
    - "hide_metadata_if_alias_used"
    - "is_public"
    - "metadata_view"
    - "name"
    - "which_alias_to_use"
    properties:
      can_grant_access_to_views:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
        example: "_test"
      description:
        type: "string"
        example: "This view is for family"
      is_public:
        type: "boolean"
        example: false
      hide_metadata_if_alias_used:
        type: "boolean"
        example: false
      can_revoke_access_to_views:
        type: "array"
        items:
          type: "string"
      which_alias_to_use:
        type: "string"
        example: "family"
      metadata_view:
        type: "string"
        example: "_test"
      allowed_actions:
        type: "array"
        items:
          type: "string"
  TransactionRequestAccountJsonV140:
    required:
    - "account_id"
    - "bank_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      bank_id: "gh.29.uk"
  AtmAttributeJsonV510:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "TAX_ID"
      type:
        type: "string"
        example: "INTEGER"
      value:
        type: "string"
        example: "12345678"
      is_active:
        type: "boolean"
        example: true
  CustomerAttributesResponseJson:
    required:
    - "customer_attributes"
    properties:
      customer_attributes:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAttributeResponseJsonV300"
    example:
      customer_attributes:
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  AvailableRoleJSON:
    required:
    - "requires_bank_id"
    - "role"
    properties:
      role:
        type: "string"
        example: "CanCreateBranch"
      requires_bank_id:
        type: "boolean"
        example: true
    example:
      role: "CanCreateBranch"
      requires_bank_id: true
  CustomerJSONsV300:
    required:
    - "customers"
    properties:
      customers:
        type: "array"
        items:
          $ref: "#/definitions/CustomerJsonV300"
    example:
      customers:
      - kyc_status: true
        highest_education_attained: "Master"
        name_suffix: "Sr"
        customer_number: "5987953"
        date_of_birth: "19900101"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        title: "Dr."
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "dob_of_dependants"
        - "dob_of_dependants"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        branch_id: "DERBY6"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
      - kyc_status: true
        highest_education_attained: "Master"
        name_suffix: "Sr"
        customer_number: "5987953"
        date_of_birth: "19900101"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        title: "Dr."
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "dob_of_dependants"
        - "dob_of_dependants"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        branch_id: "DERBY6"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
  UserAttributeJsonV510:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "BATTERY_LEVEL"
      type:
        type: "string"
        example: "STRING"
      value:
        type: "string"
        example: "90"
  AccountV310Json:
    required:
    - "account_id"
    - "account_routings"
    - "account_type"
    - "bank_id"
    - "branch_routings"
    properties:
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      account_type:
        type: "string"
        example: "330"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      branch_routings:
        type: "array"
        items:
          $ref: "#/definitions/BranchRoutingJsonV141"
    example:
      account_type: "330"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "gh.29.uk"
      branch_routings:
      - address: "678"
        scheme: "BranchNumber"
      - address: "678"
        scheme: "BranchNumber"
  MetricsJsonV510:
    required:
    - "metrics"
    properties:
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/MetricJsonV510"
    example:
      metrics:
      - date: "1100-01-01T00:00:00Z"
        implemented_in_version: "v210"
        user_name: "OBP"
        verb: "get"
        response_body:
          code: 401
          message: "OBP-20001: User not logged in. Authentication is required!"
        implemented_by_partial_function: "getBanks"
        url: "www.openbankproject.com"
        source_ip: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
        duration: 39
        consumer_id: "123"
        app_name: "SOFI"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        target_ip: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
        developer_email: "felixsmith@example.com"
        correlation_id: "v8ho6h5ivel3uq7a5zcnv0w1"
      - date: "1100-01-01T00:00:00Z"
        implemented_in_version: "v210"
        user_name: "OBP"
        verb: "get"
        response_body:
          code: 401
          message: "OBP-20001: User not logged in. Authentication is required!"
        implemented_by_partial_function: "getBanks"
        url: "www.openbankproject.com"
        source_ip: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
        duration: 39
        consumer_id: "123"
        app_name: "SOFI"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        target_ip: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
        developer_email: "felixsmith@example.com"
        correlation_id: "v8ho6h5ivel3uq7a5zcnv0w1"
  PostConsentPhoneJsonV310:
    required:
    - "entitlements"
    - "everything"
    - "phone_number"
    - "views"
    properties:
      phone_number:
        type: "string"
        example: "+44 07972 444 876"
      time_to_live:
        type: "integer"
        format: "int64"
        example: 3600
      everything:
        type: "boolean"
        example: false
      consumer_id:
        type: "string"
      valid_from:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      views:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentViewJsonV310"
      entitlements:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentEntitlementJsonV310"
  AccountJSON:
    required:
    - "bank_id"
    - "id"
    - "label"
    - "views_available"
    properties:
      id:
        type: "string"
        example: "123"
      label:
        type: "string"
        example: "OBP"
      views_available:
        type: "array"
        items:
          $ref: "#/definitions/ViewJSONV121"
      bank_id:
        type: "string"
        example: "gh.29.uk"
    example:
      views_available:
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        can_see_comments: true
        can_see_transaction_description: true
        id: "123"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "None"
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        is_public: true
        can_see_transaction_balance: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        can_see_comments: true
        can_see_transaction_description: true
        id: "123"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "None"
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        is_public: true
        can_see_transaction_balance: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      bank_id: "gh.29.uk"
      id: "123"
      label: "OBP"
  CardAttributeCommons:
    required:
    - "attribute_type"
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      card_id:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      attribute_type:
        type: "string"
        enum:
        - "STRING"
        - "INTEGER"
        - "DOUBLE"
        - "DATE_WITH_DAY"
      bank_id:
        $ref: "#/definitions/BankId"
      value:
        type: "string"
        example: "2012-04-23"
      card_attribute_id:
        type: "string"
        example: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
    example:
      bank_id:
        value: "gh.uk.9j"
      name: "OVERDRAFT_START_DATE"
      card_attribute_id: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      attribute_type: "STRING"
      value: "2012-04-23"
      card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
  DriveUpJsonV330:
    required:
    - "friday"
    - "monday"
    - "saturday"
    - "sunday"
    - "thursday"
    - "tuesday"
    - "wednesday"
    properties:
      sunday:
        $ref: "#/definitions/OpeningTimesV300"
      tuesday:
        $ref: "#/definitions/OpeningTimesV300"
      wednesday:
        $ref: "#/definitions/OpeningTimesV300"
      monday:
        $ref: "#/definitions/OpeningTimesV300"
      friday:
        $ref: "#/definitions/OpeningTimesV300"
      thursday:
        $ref: "#/definitions/OpeningTimesV300"
      saturday:
        $ref: "#/definitions/OpeningTimesV300"
    example:
      sunday:
        closing_time: "18:00"
        opening_time: "10:00"
      saturday:
        closing_time: "18:00"
        opening_time: "10:00"
      tuesday:
        closing_time: "18:00"
        opening_time: "10:00"
      wednesday:
        closing_time: "18:00"
        opening_time: "10:00"
      friday:
        closing_time: "18:00"
        opening_time: "10:00"
      thursday:
        closing_time: "18:00"
        opening_time: "10:00"
      monday:
        closing_time: "18:00"
        opening_time: "10:00"
  TransactionRequestAttributeJsonV400:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "HOUSE_RENT"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "123456789"
  LocationJsonV140:
    required:
    - "latitude"
    - "longitude"
    properties:
      latitude:
        type: "number"
        format: "double"
        example: 11.45
      longitude:
        type: "number"
        format: "double"
        example: 11.45
    example:
      latitude: 11.45
      longitude: 11.45
  SettlementAccountJson:
    required:
    - "account_attributes"
    - "account_id"
    - "account_routings"
    - "balance"
    - "branch_id"
    - "label"
    - "payment_system"
    properties:
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson"
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      payment_system:
        type: "string"
        example: "SEPA"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      payment_system: "SEPA"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      balance:
        amount: "0"
        currency: "EUR"
      branch_id: "DERBY6"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      label: "My Account"
  TransactionRequestBodyRefundJsonV400:
    required:
    - "description"
    - "refund"
    - "value"
    properties:
      description:
        type: "string"
        example: "A refund description. "
      refund:
        $ref: "#/definitions/RefundJson"
      to:
        $ref: "#/definitions/TransactionRequestRefundTo"
      from:
        $ref: "#/definitions/TransactionRequestRefundFrom"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
  UserAuthContextJsonV500:
    required:
    - "consumer_id"
    - "key"
    - "time_stamp"
    - "user_auth_context_id"
    - "user_id"
    - "value"
    properties:
      time_stamp:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      key:
        type: "string"
        example: "CUSTOMER_NUMBER"
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      user_auth_context_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      value:
        type: "string"
        example: "78987432"
    example:
      consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      user_auth_context_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      time_stamp: "1100-01-01T00:00:00Z"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      value: "78987432"
      key: "CUSTOMER_NUMBER"
  CustomerFaceImageJson:
    required:
    - "date"
    - "url"
    properties:
      url:
        type: "string"
        example: "www.openbankproject"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      date: "1100-01-01T00:00:00Z"
      url: "www.openbankproject"
  MySpaces:
    required:
    - "bank_ids"
    properties:
      bank_ids:
        type: "array"
        items:
          type: "string"
    example:
      bank_ids:
      - "bank_ids"
      - "bank_ids"
  KycMediaJSON:
    required:
    - "bank_id"
    - "customer_id"
    - "customer_number"
    - "date"
    - "id"
    - "relates_to_kyc_check_id"
    - "relates_to_kyc_document_id"
    - "type"
    - "url"
    properties:
      customer_id:
        type: "string"
        example: "PlaceholderString"
      url:
        type: "string"
        example: "PlaceholderString"
      customer_number:
        type: "string"
        example: "5987953"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "PlaceholderString"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      relates_to_kyc_document_id:
        type: "string"
        example: "PlaceholderString"
      relates_to_kyc_check_id:
        type: "string"
        example: "PlaceholderString"
      type:
        type: "string"
        example: "PlaceholderString"
    example:
      date: "1100-01-01T00:00:00Z"
      relates_to_kyc_check_id: "PlaceholderString"
      customer_number: "5987953"
      bank_id: "gh.29.uk"
      relates_to_kyc_document_id: "PlaceholderString"
      id: "PlaceholderString"
      customer_id: "PlaceholderString"
      type: "PlaceholderString"
      url: "PlaceholderString"
  CrmEventJson:
    required:
    - "actual_date"
    - "bank_id"
    - "category"
    - "channel"
    - "customer_name"
    - "customer_number"
    - "detail"
    - "id"
    - "result"
    - "scheduled_date"
    properties:
      channel:
        type: "string"
        example: "String"
      customer_name:
        type: "string"
        example: "String"
      result:
        type: "string"
        example: "String"
      customer_number:
        type: "string"
        example: "5987953"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      scheduled_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      category:
        type: "string"
        example: "String"
      detail:
        type: "string"
        example: "String"
      actual_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      result: "String"
      actual_date: "1100-01-01T00:00:00Z"
      customer_number: "5987953"
      bank_id: "gh.29.uk"
      channel: "String"
      customer_name: "String"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      detail: "String"
      scheduled_date: "1100-01-01T00:00:00Z"
      category: "String"
  ContactDetailsJson:
    required:
    - "email_address"
    - "mobile_phone"
    - "name"
    properties:
      name:
        type: "string"
        example: "Simon "
      mobile_phone:
        type: "string"
        example: "+44 07972 444 876"
      email_address:
        type: "string"
        example: "felixsmith@example.com"
    example:
      email_address: "felixsmith@example.com"
      mobile_phone: "+44 07972 444 876"
      name: "Simon "
  ToAccountTransferToAtmKycDocument:
    required:
    - "number"
    - "type"
    properties:
      type:
        type: "string"
        example: "String"
      number:
        type: "string"
        example: "String"
    example:
      number: "String"
      type: "String"
  TransactionRequestWithChargeJSON400:
    required:
    - "challenges"
    - "charge"
    - "details"
    - "end_date"
    - "from"
    - "id"
    - "start_date"
    - "status"
    - "transaction_ids"
    - "type"
    properties:
      start_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      id:
        type: "string"
        example: "4050046c-63b3-4868-8a22-14b4181d33a6"
      end_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      status:
        type: "string"
        example: "COMPLETED"
      from:
        $ref: "#/definitions/TransactionRequestAccountJsonV140"
      details:
        $ref: "#/definitions/TransactionRequestBodyAllTypes"
      charge:
        $ref: "#/definitions/TransactionRequestChargeJsonV200"
      type:
        type: "string"
        example: "SANDBOX_TAN"
      transaction_ids:
        type: "array"
        items:
          type: "string"
      challenges:
        type: "array"
        items:
          $ref: "#/definitions/ChallengeJsonV400"
    example:
      end_date: "1100-01-01T00:00:00Z"
      charge:
        summary: "Rent the flat"
        value:
          amount: "0"
          currency: "EUR"
      challenges:
      - challenge_type: "OBP_TRANSACTION_REQUEST_CHALLENGE"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        link: "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
        allowed_attempts: 3
        id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      - challenge_type: "OBP_TRANSACTION_REQUEST_CHALLENGE"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        link: "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
        allowed_attempts: 3
        id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      from:
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
      details:
        to_sepa_credit_transfers:
          debtorAccount:
            iban: "GB33BUKB20201555555555"
          creditorName: "John Miles"
          creditorAccount:
            iban: "GB33BUKB20201555555555"
          instructedAmount:
            amount: "0"
            currency: "EUR"
        to_counterparty:
          counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        to_sandbox_tan:
          account_id: "String"
          bank_id: "String"
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        to_transfer_to_account:
          description: "String"
          to:
            bank_code: "String"
            branch_number: "String"
            name: "String"
            account:
              number: "String"
              iban: "String"
          transfer_type: "String"
          value:
            amount: "0"
            currency: "EUR"
          future_date: "20181230"
        to_simple:
          otherBranchRoutingAddress: "DERBY6"
          otherBankRoutingScheme: "BIC"
          otherBranchRoutingScheme: "BRANCH-CODE"
          otherBankRoutingAddress: "GENODEM1GLS"
          otherAccountSecondaryRoutingScheme: "IBAN"
          otherAccountRoutingAddress: "DE91 1000 0000 0123 4567 89"
          otherAccountSecondaryRoutingAddress: "DE91 1000 0000 0123 4567 89"
          otherAccountRoutingScheme: "IBAN"
        to_sepa:
          iban: "String"
        to_transfer_to_phone:
          description: "String"
          from:
            nickname: "String"
            mobile_phone_number: "+44 07972 444 876"
          to:
            mobile_phone_number: "+44 07972 444 876"
          message: "String"
          value:
            amount: "0"
            currency: "EUR"
        to_transfer_to_atm:
          description: "String"
          from:
            nickname: "String"
            mobile_phone_number: "+44 07972 444 876"
          to:
            kyc_document:
              number: "String"
              type: "String"
            date_of_birth: "20181230"
            legal_name: "Eveline Tripman"
            mobile_phone_number: "+44 07972 444 876"
          message: "String"
          value:
            amount: "0"
            currency: "EUR"
        value:
          amount: "100"
          currency: "EUR"
      id: "4050046c-63b3-4868-8a22-14b4181d33a6"
      transaction_ids:
      - "transaction_ids"
      - "transaction_ids"
      type: "SANDBOX_TAN"
      start_date: "1100-01-01T00:00:00Z"
      status: "COMPLETED"
  MeetingJsonV310:
    required:
    - "bank_id"
    - "creator"
    - "invitees"
    - "keys"
    - "meeting_id"
    - "present"
    - "provider_id"
    - "purpose_id"
    - "when"
    properties:
      present:
        $ref: "#/definitions/MeetingPresentJson"
      provider_id:
        type: "string"
        example: "Chris"
      creator:
        $ref: "#/definitions/ContactDetailsJson"
      invitees:
        type: "array"
        items:
          $ref: "#/definitions/InviteeJson"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      purpose_id:
        type: "string"
        example: "String, eg: onboarding"
      when:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      meeting_id:
        type: "string"
        example: "UUID-String"
      keys:
        $ref: "#/definitions/MeetingKeysJson"
    example:
      creator:
        email_address: "felixsmith@example.com"
        mobile_phone: "+44 07972 444 876"
        name: "Simon "
      invitees:
      - contact_details:
          email_address: "felixsmith@example.com"
          mobile_phone: "+44 07972 444 876"
          name: "Simon "
        status: "String, eg: Good"
      - contact_details:
          email_address: "felixsmith@example.com"
          mobile_phone: "+44 07972 444 876"
          name: "Simon "
        status: "String, eg: Good"
      bank_id: "gh.29.uk"
      meeting_id: "UUID-String"
      keys:
        staff_token: "String"
        customer_token: "String"
        session_id: "String"
      provider_id: "Chris"
      purpose_id: "String, eg: onboarding"
      present:
        staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        customer_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      when: "1100-01-01T00:00:00Z"
  UpdatePhysicalCardJsonV310:
    required:
    - "account_id"
    - "allows"
    - "card_type"
    - "collected"
    - "customer_id"
    - "enabled"
    - "expires_date"
    - "issue_number"
    - "name_on_card"
    - "networks"
    - "pin_reset"
    - "posted"
    - "replacement"
    - "serial_number"
    - "technology"
    - "valid_from_date"
    properties:
      allows:
        type: "array"
        items:
          type: "string"
      expires_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      networks:
        type: "array"
        items:
          type: "string"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      issue_number:
        type: "string"
        example: "1"
      replacement:
        $ref: "#/definitions/ReplacementJSON"
      enabled:
        type: "boolean"
        example: true
      collected:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      technology:
        type: "string"
        example: "technology1"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      pin_reset:
        type: "array"
        items:
          $ref: "#/definitions/PinResetJSON"
      serial_number:
        type: "string"
        example: "1324234"
      valid_from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      name_on_card:
        type: "string"
        example: "SusanSmith"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_type:
        type: "string"
        example: "Credit"
  PostAccountAccessJsonV400:
    required:
    - "user_id"
    - "view"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      view:
        $ref: "#/definitions/PostViewJsonV400"
  MessageDocJson:
    required:
    - "adapter_implementation"
    - "dependent_endpoints"
    - "description"
    - "example_inbound_message"
    - "example_outbound_message"
    - "message_format"
    - "process"
    properties:
      adapter_implementation:
        $ref: "#/definitions/AdapterImplementationJson"
      outboundAvroSchema:
        $ref: "#/definitions/MessageDocJson_outboundAvroSchema"
      example_inbound_message:
        $ref: "#/definitions/MessageDocJson_outboundAvroSchema"
      inboundAvroSchema:
        $ref: "#/definitions/MessageDocJson_outboundAvroSchema"
      requiredFieldInfo:
        $ref: "#/definitions/FieldNameApiVersions"
      description:
        type: "string"
        example: "get Banks"
      process:
        type: "string"
        example: "getAccounts"
      message_format:
        type: "string"
        example: "KafkaV2017"
      example_outbound_message:
        $ref: "#/definitions/MessageDocJson_outboundAvroSchema"
      dependent_endpoints:
        type: "array"
        items:
          $ref: "#/definitions/EndpointInfo"
      outbound_topic:
        type: "string"
        example: "to.obp.api.1.caseclass.OutboundGetAccounts"
      inbound_topic:
        type: "string"
        example: "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
    example:
      outboundAvroSchema:
        jsonString: "{}"
      process: "getAccounts"
      message_format: "KafkaV2017"
      example_outbound_message:
        jsonString: "{}"
      example_inbound_message:
        jsonString: "{}"
      dependent_endpoints:
      - name: "getAccounts"
        version: "OBPv3.0.0"
      - name: "getAccounts"
        version: "OBPv3.0.0"
      inbound_topic: "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
      description: "get Banks"
      requiredFieldInfo: {}
      outbound_topic: "to.obp.api.1.caseclass.OutboundGetAccounts"
      adapter_implementation:
        group: "CORE"
        suggested_order: 3
      inboundAvroSchema:
        jsonString: "{}"
  CurrenciesJsonV510:
    required:
    - "currencies"
    properties:
      currencies:
        type: "array"
        items:
          $ref: "#/definitions/CurrencyJsonV510"
    example:
      currencies:
      - alphanumeric_code: "EUR"
      - alphanumeric_code: "EUR"
  ConsumerJsonV210:
    required:
    - "app_name"
    - "app_type"
    - "consumer_id"
    - "created"
    - "created_by_user"
    - "created_by_user_id"
    - "description"
    - "developer_email"
    - "enabled"
    - "redirect_url"
    properties:
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      app_type:
        type: "string"
        example: "Web"
      description:
        type: "string"
        example: "Account Management"
      created_by_user:
        $ref: "#/definitions/ResourceUserJSON"
      enabled:
        type: "boolean"
        example: true
      redirect_url:
        type: "string"
        example: "www.openbankproject.com"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
      consumer_id:
        type: "integer"
        format: "int64"
        example: 1213
      app_name:
        type: "string"
        example: "SOFI"
      created:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      consumer_id: 1213
      app_name: "SOFI"
      app_type: "Web"
      developer_email: "felixsmith@example.com"
      created: "1100-01-01T00:00:00Z"
      description: "Account Management"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      enabled: true
      redirect_url: "www.openbankproject.com"
      created_by_user:
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        email: "felixsmith@example.com"
        username: "felixsmith"
  MetricJson:
    required:
    - "app_name"
    - "consumer_id"
    - "correlation_id"
    - "date"
    - "developer_email"
    - "duration"
    - "implemented_by_partial_function"
    - "implemented_in_version"
    - "url"
    - "user_id"
    - "user_name"
    - "verb"
    properties:
      duration:
        type: "integer"
        format: "int64"
        example: 39
      implemented_in_version:
        type: "string"
        example: "v210"
      url:
        type: "string"
        example: "www.openbankproject.com"
      correlation_id:
        type: "string"
        example: "v8ho6h5ivel3uq7a5zcnv0w1"
      implemented_by_partial_function:
        type: "string"
        example: "getBanks"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      consumer_id:
        type: "string"
        example: "123"
      verb:
        type: "string"
        example: "get"
      app_name:
        type: "string"
        example: "SOFI"
      user_name:
        type: "string"
        example: "OBP"
    example:
      duration: 39
      date: "1100-01-01T00:00:00Z"
      consumer_id: "123"
      app_name: "SOFI"
      implemented_in_version: "v210"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      developer_email: "felixsmith@example.com"
      user_name: "OBP"
      verb: "get"
      correlation_id: "v8ho6h5ivel3uq7a5zcnv0w1"
      implemented_by_partial_function: "getBanks"
      url: "www.openbankproject.com"
  PostSimpleCounterpartyJson400:
    required:
    - "description"
    - "name"
    - "other_account_routing_address"
    - "other_account_routing_scheme"
    - "other_account_secondary_routing_address"
    - "other_account_secondary_routing_scheme"
    - "other_bank_routing_address"
    - "other_bank_routing_scheme"
    - "other_branch_routing_address"
    - "other_branch_routing_scheme"
    properties:
      other_account_routing_address:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_routing_scheme:
        type: "string"
        example: "OBP"
      name:
        type: "string"
        example: "John Smith Ltd."
      other_account_secondary_routing_address:
        type: "string"
        example: "DE89370400440532013000"
      description:
        type: "string"
        example: "The piano lession-Invoice No:68"
      other_branch_routing_address:
        type: "string"
        example: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_bank_routing_scheme:
        type: "string"
        example: "OBP"
      other_branch_routing_scheme:
        type: "string"
        example: "OBP"
      other_bank_routing_address:
        type: "string"
        example: "gh.29.uk"
      other_account_secondary_routing_scheme:
        type: "string"
        example: "IBAN"
  CoreTransactionDetailsJSON:
    required:
    - "completed"
    - "description"
    - "new_balance"
    - "posted"
    - "type"
    - "value"
    properties:
      new_balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      description:
        type: "string"
        example: "OBP"
      completed:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      type:
        type: "string"
        example: "AC"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      description: "OBP"
      new_balance:
        amount: "0"
        currency: "EUR"
      completed: "1100-01-01T00:00:00Z"
      type: "AC"
      value:
        amount: "0"
        currency: "EUR"
      posted: "1100-01-01T00:00:00Z"
  CounterpartyWithMetadataJson400:
    required:
    - "bespoke"
    - "counterparty_id"
    - "created_by_user_id"
    - "currency"
    - "description"
    - "is_beneficiary"
    - "metadata"
    - "name"
    - "other_account_routing_address"
    - "other_account_routing_scheme"
    - "other_account_secondary_routing_address"
    - "other_account_secondary_routing_scheme"
    - "other_bank_routing_address"
    - "other_bank_routing_scheme"
    - "other_branch_routing_address"
    - "other_branch_routing_scheme"
    - "this_account_id"
    - "this_bank_id"
    - "this_view_id"
    properties:
      other_account_routing_address:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_routing_scheme:
        type: "string"
        example: "OBP"
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      name:
        type: "string"
        example: "CounterpartyName"
      other_account_secondary_routing_address:
        type: "string"
        example: "DE89370400440532013000"
      is_beneficiary:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "My landlord"
      other_branch_routing_address:
        type: "string"
        example: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
      bespoke:
        type: "array"
        items:
          $ref: "#/definitions/PostCounterpartyBespokeJson"
      other_bank_routing_scheme:
        type: "string"
        example: "OBP"
      other_branch_routing_scheme:
        type: "string"
        example: "OBP"
      this_account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      this_view_id:
        type: "string"
        example: "owner"
      currency:
        type: "string"
        example: "EUR"
      metadata:
        $ref: "#/definitions/CounterpartyMetadataJson"
      other_bank_routing_address:
        type: "string"
        example: "gh.29.uk"
      this_bank_id:
        type: "string"
        example: "gh.29.uk"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      other_account_secondary_routing_scheme:
        type: "string"
        example: "IBAN"
    example:
      this_bank_id: "gh.29.uk"
      is_beneficiary: true
      other_bank_routing_scheme: "OBP"
      other_account_routing_scheme: "OBP"
      metadata:
        open_corporates_url: "String"
        private_alias: "String"
        image_url: "String"
        corporate_location:
          date: "1100-01-01T00:00:00Z"
          latitude: 11.45
          user:
            provider: "http://127.0.0.1:8080"
            id: "123"
            username: "felixsmith"
          longitude: 11.45
        more_info: "String"
        public_alias: "String"
        url: "String"
        physical_location:
          date: "1100-01-01T00:00:00Z"
          latitude: 11.45
          user:
            provider: "http://127.0.0.1:8080"
            id: "123"
            username: "felixsmith"
          longitude: 11.45
      this_account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      other_bank_routing_address: "gh.29.uk"
      description: "My landlord"
      other_branch_routing_scheme: "OBP"
      bespoke:
      - value: "english Name"
        key: "englishName"
      - value: "english Name"
        key: "englishName"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      other_branch_routing_address: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_secondary_routing_scheme: "IBAN"
      this_view_id: "owner"
      name: "CounterpartyName"
      currency: "EUR"
      other_account_routing_address: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_secondary_routing_address: "DE89370400440532013000"
  TransactionWhereJSON:
    required:
    - "where"
    properties:
      where:
        $ref: "#/definitions/LocationJSONV121"
    example:
      where:
        date: "1100-01-01T00:00:00Z"
        latitude: 1.231
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        longitude: 1.231
  TransactionJsonV300:
    required:
    - "details"
    - "id"
    - "metadata"
    - "other_account"
    - "this_account"
    - "transaction_attributes"
    properties:
      this_account:
        $ref: "#/definitions/ThisAccountJsonV300"
      id:
        type: "string"
        example: "String"
      details:
        $ref: "#/definitions/TransactionDetailsJSON"
      metadata:
        $ref: "#/definitions/TransactionMetadataJSON"
      other_account:
        $ref: "#/definitions/OtherAccountJsonV300"
      transaction_attributes:
        type: "array"
        items:
          $ref: "#/definitions/TransactionAttributeResponseJson"
    example:
      metadata:
        images:
        - date: "1100-01-01T00:00:00Z"
          label: "NONE"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          URL: "www.openbankproject.com"
        - date: "1100-01-01T00:00:00Z"
          label: "NONE"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          URL: "www.openbankproject.com"
        comments:
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
        narrative: "NONE"
        where:
          date: "1100-01-01T00:00:00Z"
          latitude: 1.231
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          longitude: 1.231
        tags:
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
      other_account:
        metadata:
          open_corporates_URL: "www.openbankproject.com"
          private_alias: "NONE"
          image_URL: "www.openbankproject.com"
          corporate_location:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
          more_info: "www.openbankproject.com"
          public_alias: "NONE"
          URL: "www.openbankproject.com"
          physical_location:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        holder:
          is_alias: true
          name: "OBP"
        bank_routing:
          address: ""
          scheme: "scheme value"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      this_account:
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        holders:
        - is_alias: true
          name: "OBP"
        - is_alias: true
          name: "OBP"
        bank_routing:
          address: ""
          scheme: "scheme value"
        id: "String"
      transaction_attributes:
      - name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
        transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
        transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      details:
        description: "this is for family"
        new_balance:
          amount: "0"
          currency: "EUR"
        completed: "1100-01-01T00:00:00Z"
        type: "AC"
        value:
          amount: "0"
          currency: "EUR"
        posted: "1100-01-01T00:00:00Z"
      id: "String"
  TransactionRequestIban:
    required:
    - "iban"
    properties:
      iban:
        type: "string"
        example: "String"
    example:
      iban: "String"
  CreateAccountResponseJsonV310:
    required:
    - "account_attributes"
    - "account_id"
    - "account_routings"
    - "balance"
    - "branch_id"
    - "label"
    - "product_code"
    - "user_id"
    properties:
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson"
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      product_code:
        type: "string"
        example: "1234BW"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      balance:
        amount: "0"
        currency: "EUR"
      branch_id: "DERBY6"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      label: "My Account"
      product_code: "1234BW"
  AccountWebhooksJson:
    required:
    - "web_hooks"
    properties:
      web_hooks:
        type: "array"
        items:
          $ref: "#/definitions/AccountWebhookJson"
    example:
      web_hooks:
      - trigger_name: "OnBalanceChange"
        is_active: true
        http_method: "POST"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        http_protocol: "HTTP/1.1"
        account_webhook_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        bank_id: "gh.29.uk"
        created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        url: "https://localhost.openbankproject.com"
      - trigger_name: "OnBalanceChange"
        is_active: true
        http_method: "POST"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        http_protocol: "HTTP/1.1"
        account_webhook_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        bank_id: "gh.29.uk"
        created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        url: "https://localhost.openbankproject.com"
  PutUpdateCustomerCreditRatingAndSourceJsonV310:
    required:
    - "credit_rating"
    - "credit_source"
    properties:
      credit_rating:
        type: "string"
        example: "Good"
      credit_source:
        type: "string"
        example: "Bank"
  ElasticSearchJSON:
    required:
    - "metrics"
    - "warehouse"
    properties:
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/MetricsJsonV220"
      warehouse:
        type: "array"
        items:
          $ref: "#/definitions/WarehouseJSON"
    example:
      metrics:
      - property: "String"
        value: "Mapper"
      - property: "String"
        value: "Mapper"
      warehouse:
      - property: "String"
        value: "ElasticSearch"
      - property: "String"
        value: "ElasticSearch"
  TransactionRequestSimple:
    required:
    - "otherAccountRoutingAddress"
    - "otherAccountRoutingScheme"
    - "otherAccountSecondaryRoutingAddress"
    - "otherAccountSecondaryRoutingScheme"
    - "otherBankRoutingAddress"
    - "otherBankRoutingScheme"
    - "otherBranchRoutingAddress"
    - "otherBranchRoutingScheme"
    properties:
      otherAccountSecondaryRoutingAddress:
        type: "string"
        example: "DE91 1000 0000 0123 4567 89"
      otherBankRoutingScheme:
        type: "string"
        example: "BIC"
      otherBranchRoutingScheme:
        type: "string"
        example: "BRANCH-CODE"
      otherAccountRoutingScheme:
        type: "string"
        example: "IBAN"
      otherBankRoutingAddress:
        type: "string"
        example: "GENODEM1GLS"
      otherAccountRoutingAddress:
        type: "string"
        example: "DE91 1000 0000 0123 4567 89"
      otherAccountSecondaryRoutingScheme:
        type: "string"
        example: "IBAN"
      otherBranchRoutingAddress:
        type: "string"
        example: "DERBY6"
    example:
      otherBranchRoutingAddress: "DERBY6"
      otherBankRoutingScheme: "BIC"
      otherBranchRoutingScheme: "BRANCH-CODE"
      otherBankRoutingAddress: "GENODEM1GLS"
      otherAccountSecondaryRoutingScheme: "IBAN"
      otherAccountRoutingAddress: "DE91 1000 0000 0123 4567 89"
      otherAccountSecondaryRoutingAddress: "DE91 1000 0000 0123 4567 89"
      otherAccountRoutingScheme: "IBAN"
  PostConsentImplicitJsonV310:
    required:
    - "entitlements"
    - "everything"
    - "views"
    properties:
      time_to_live:
        type: "integer"
        format: "int64"
        example: 3600
      everything:
        type: "boolean"
        example: false
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      valid_from:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      views:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentViewJsonV310"
      entitlements:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentEntitlementJsonV310"
  TransactionRequestAttributeResponseJson:
    required:
    - "name"
    - "transaction_request_attribute_id"
    - "type"
    - "value"
    properties:
      transaction_request_attribute_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name:
        type: "string"
        example: "HOUSE_RENT"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "123456789"
    example:
      transaction_request_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name: "HOUSE_RENT"
      type: "DATE_WITH_DAY"
      value: "123456789"
  PostKycStatusJSON:
    required:
    - "customer_number"
    - "date"
    - "ok"
    properties:
      customer_number:
        type: "string"
        example: "5987953"
      ok:
        type: "boolean"
        example: true
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
  ViewsJSON300:
    required:
    - "list"
    properties:
      list:
        type: "array"
        items:
          $ref: "#/definitions/ViewJSON300"
    example:
      list:
      - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
        view_id: "owner"
      - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
        view_id: "owner"
  OAuth2ServerJwksUrisJson:
    required:
    - "jwks_uris"
    properties:
      jwks_uris:
        type: "array"
        items:
          $ref: "#/definitions/OAuth2ServerJWKURIJson"
    example:
      jwks_uris:
      - jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
      - jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
  TransactionRequestAccount:
    required:
    - "account_id"
    - "bank_id"
    properties:
      bank_id:
        type: "string"
        example: "String"
      account_id:
        type: "string"
        example: "String"
    example:
      account_id: "String"
      bank_id: "String"
  PostTaxResidenceJsonV310:
    required:
    - "domain"
    - "tax_number"
    properties:
      domain:
        type: "string"
        example: "Enter some domain"
      tax_number:
        type: "string"
        example: "Enter some number"
  CustomerAndUsersWithAttributesResponseJson:
    required:
    - "customer"
    - "users"
    properties:
      customer:
        $ref: "#/definitions/CustomerJsonV310"
      users:
        type: "array"
        items:
          $ref: "#/definitions/UserWithAttributesResponseJson"
    example:
      users:
      - provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        user_attributes:
        - insert_date: "2024-02-05T14:15:53Z"
          user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          name: "BATTERY_LEVEL"
          type: "STRING"
          value: "90"
        - insert_date: "2024-02-05T14:15:53Z"
          user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          name: "BATTERY_LEVEL"
          type: "STRING"
          value: "90"
        email: "felixsmith@example.com"
        username: "felixsmith"
      - provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        user_attributes:
        - insert_date: "2024-02-05T14:15:53Z"
          user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          name: "BATTERY_LEVEL"
          type: "STRING"
          value: "90"
        - insert_date: "2024-02-05T14:15:53Z"
          user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          name: "BATTERY_LEVEL"
          type: "STRING"
          value: "90"
        email: "felixsmith@example.com"
        username: "felixsmith"
      customer:
        kyc_status: true
        highest_education_attained: "Master"
        name_suffix: "Sr"
        customer_number: "5987953"
        date_of_birth: "1100-01-01T00:00:00Z"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        title: "Dr."
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "2000-01-23"
        - "2000-01-23"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        branch_id: "DERBY6"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
  PermissionJSON:
    required:
    - "user"
    - "views"
    properties:
      user:
        $ref: "#/definitions/UserJSONV121"
      views:
        type: "array"
        items:
          $ref: "#/definitions/ViewJSONV121"
    example:
      user:
        provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      views:
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        can_see_comments: true
        can_see_transaction_description: true
        id: "123"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "None"
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        is_public: true
        can_see_transaction_balance: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        can_see_comments: true
        can_see_transaction_description: true
        id: "123"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "None"
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        is_public: true
        can_see_transaction_balance: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
  BankAttributeJsonV400:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "TAX_ID"
      type:
        type: "string"
        example: "INTEGER"
      value:
        type: "string"
        example: "12345678"
      is_active:
        type: "boolean"
        example: true
  MetricsJson:
    required:
    - "metrics"
    properties:
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/MetricJson"
    example:
      metrics:
      - duration: 39
        date: "1100-01-01T00:00:00Z"
        consumer_id: "123"
        app_name: "SOFI"
        implemented_in_version: "v210"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        developer_email: "felixsmith@example.com"
        user_name: "OBP"
        verb: "get"
        correlation_id: "v8ho6h5ivel3uq7a5zcnv0w1"
        implemented_by_partial_function: "getBanks"
        url: "www.openbankproject.com"
      - duration: 39
        date: "1100-01-01T00:00:00Z"
        consumer_id: "123"
        app_name: "SOFI"
        implemented_in_version: "v210"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        developer_email: "felixsmith@example.com"
        user_name: "OBP"
        verb: "get"
        correlation_id: "v8ho6h5ivel3uq7a5zcnv0w1"
        implemented_by_partial_function: "getBanks"
        url: "www.openbankproject.com"
  ViewJSONV121:
    required:
    - "alias"
    - "can_add_comment"
    - "can_add_corporate_location"
    - "can_add_image"
    - "can_add_image_url"
    - "can_add_more_info"
    - "can_add_open_corporates_url"
    - "can_add_physical_location"
    - "can_add_private_alias"
    - "can_add_public_alias"
    - "can_add_tag"
    - "can_add_url"
    - "can_add_where_tag"
    - "can_delete_comment"
    - "can_delete_corporate_location"
    - "can_delete_image"
    - "can_delete_physical_location"
    - "can_delete_tag"
    - "can_delete_where_tag"
    - "can_edit_owner_comment"
    - "can_see_bank_account_balance"
    - "can_see_bank_account_bank_name"
    - "can_see_bank_account_currency"
    - "can_see_bank_account_iban"
    - "can_see_bank_account_label"
    - "can_see_bank_account_national_identifier"
    - "can_see_bank_account_number"
    - "can_see_bank_account_owners"
    - "can_see_bank_account_swift_bic"
    - "can_see_bank_account_type"
    - "can_see_comments"
    - "can_see_corporate_location"
    - "can_see_image_url"
    - "can_see_images"
    - "can_see_more_info"
    - "can_see_open_corporates_url"
    - "can_see_other_account_bank_name"
    - "can_see_other_account_iban"
    - "can_see_other_account_kind"
    - "can_see_other_account_metadata"
    - "can_see_other_account_national_identifier"
    - "can_see_other_account_number"
    - "can_see_other_account_swift_bic"
    - "can_see_owner_comment"
    - "can_see_physical_location"
    - "can_see_private_alias"
    - "can_see_public_alias"
    - "can_see_tags"
    - "can_see_transaction_amount"
    - "can_see_transaction_balance"
    - "can_see_transaction_currency"
    - "can_see_transaction_description"
    - "can_see_transaction_finish_date"
    - "can_see_transaction_metadata"
    - "can_see_transaction_other_bank_account"
    - "can_see_transaction_start_date"
    - "can_see_transaction_this_bank_account"
    - "can_see_transaction_type"
    - "can_see_url"
    - "can_see_where_tag"
    - "description"
    - "hide_metadata_if_alias_used"
    - "id"
    - "is_public"
    - "short_name"
    properties:
      can_see_transaction_start_date:
        type: "boolean"
        example: true
      can_add_url:
        type: "boolean"
        example: true
      can_add_where_tag:
        type: "boolean"
        example: true
      can_see_transaction_this_bank_account:
        type: "boolean"
        example: true
      can_see_bank_account_owners:
        type: "boolean"
        example: true
      can_see_private_alias:
        type: "boolean"
        example: true
      can_edit_owner_comment:
        type: "boolean"
        example: true
      can_see_other_account_national_identifier:
        type: "boolean"
        example: true
      can_see_public_alias:
        type: "boolean"
        example: true
      can_see_physical_location:
        type: "boolean"
        example: true
      can_see_owner_comment:
        type: "boolean"
        example: true
      can_see_bank_account_iban:
        type: "boolean"
        example: true
      can_see_corporate_location:
        type: "boolean"
        example: true
      can_see_bank_account_number:
        type: "boolean"
        example: true
      can_see_other_account_bank_name:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "description"
      can_see_transaction_other_bank_account:
        type: "boolean"
        example: true
      can_delete_corporate_location:
        type: "boolean"
        example: true
      can_see_comments:
        type: "boolean"
        example: true
      can_see_bank_account_bank_name:
        type: "boolean"
        example: true
      can_add_more_info:
        type: "boolean"
        example: true
      can_see_other_account_number:
        type: "boolean"
        example: true
      can_see_other_account_swift_bic:
        type: "boolean"
        example: true
      can_add_open_corporates_url:
        type: "boolean"
        example: true
      can_see_other_account_kind:
        type: "boolean"
        example: true
      can_delete_physical_location:
        type: "boolean"
        example: true
      can_see_bank_account_label:
        type: "boolean"
        example: true
      can_see_transaction_currency:
        type: "boolean"
        example: true
      is_public:
        type: "boolean"
        example: true
      can_see_transaction_finish_date:
        type: "boolean"
        example: true
      can_add_tag:
        type: "boolean"
        example: true
      can_see_images:
        type: "boolean"
        example: true
      can_see_bank_account_currency:
        type: "boolean"
        example: true
      hide_metadata_if_alias_used:
        type: "boolean"
        example: true
      can_delete_where_tag:
        type: "boolean"
        example: true
      alias:
        type: "string"
        example: "None"
      can_add_image_url:
        type: "boolean"
        example: true
      can_add_comment:
        type: "boolean"
        example: true
      can_see_image_url:
        type: "boolean"
        example: true
      id:
        type: "string"
        example: "123"
      can_see_bank_account_national_identifier:
        type: "boolean"
        example: true
      can_see_tags:
        type: "boolean"
        example: true
      can_see_open_corporates_url:
        type: "boolean"
        example: true
      short_name:
        type: "string"
        example: "short_name"
      can_delete_tag:
        type: "boolean"
        example: true
      can_see_more_info:
        type: "boolean"
        example: true
      can_see_transaction_metadata:
        type: "boolean"
        example: true
      can_delete_comment:
        type: "boolean"
        example: true
      can_see_where_tag:
        type: "boolean"
        example: true
      can_add_private_alias:
        type: "boolean"
        example: true
      can_add_public_alias:
        type: "boolean"
        example: true
      can_see_bank_account_swift_bic:
        type: "boolean"
        example: true
      can_add_image:
        type: "boolean"
        example: true
      can_see_transaction_type:
        type: "boolean"
        example: true
      can_see_other_account_iban:
        type: "boolean"
        example: true
      can_add_physical_location:
        type: "boolean"
        example: true
      can_add_corporate_location:
        type: "boolean"
        example: true
      can_delete_image:
        type: "boolean"
        example: true
      can_see_url:
        type: "boolean"
        example: true
      can_see_bank_account_balance:
        type: "boolean"
        example: true
      can_see_transaction_balance:
        type: "boolean"
        example: true
      can_see_transaction_amount:
        type: "boolean"
        example: true
      can_see_other_account_metadata:
        type: "boolean"
        example: true
      can_see_bank_account_type:
        type: "boolean"
        example: true
      can_see_transaction_description:
        type: "boolean"
        example: true
    example:
      can_see_bank_account_type: true
      can_see_tags: true
      can_see_other_account_iban: true
      can_delete_tag: true
      can_add_corporate_location: true
      can_see_images: true
      can_see_transaction_type: true
      can_see_other_account_kind: true
      can_edit_owner_comment: true
      can_add_physical_location: true
      can_see_bank_account_number: true
      can_see_corporate_location: true
      can_see_comments: true
      can_see_transaction_description: true
      id: "123"
      can_see_transaction_amount: true
      can_see_bank_account_bank_name: true
      can_add_url: true
      can_see_url: true
      can_see_public_alias: true
      can_see_other_account_number: true
      can_add_more_info: true
      can_delete_physical_location: true
      can_delete_where_tag: true
      can_add_comment: true
      can_see_more_info: true
      can_add_public_alias: true
      short_name: "short_name"
      can_see_bank_account_currency: true
      can_see_bank_account_swift_bic: true
      can_see_bank_account_balance: true
      can_see_open_corporates_url: true
      can_delete_comment: true
      can_see_other_account_bank_name: true
      can_add_tag: true
      description: "description"
      can_see_physical_location: true
      can_delete_image: true
      can_see_bank_account_label: true
      can_see_image_url: true
      can_see_transaction_other_bank_account: true
      hide_metadata_if_alias_used: true
      can_add_open_corporates_url: true
      alias: "None"
      can_see_bank_account_national_identifier: true
      can_see_other_account_swift_bic: true
      can_add_image: true
      can_add_where_tag: true
      can_see_owner_comment: true
      can_see_transaction_this_bank_account: true
      can_add_image_url: true
      can_see_other_account_metadata: true
      can_see_transaction_start_date: true
      can_see_private_alias: true
      can_see_transaction_finish_date: true
      can_see_bank_account_iban: true
      can_add_private_alias: true
      can_see_other_account_national_identifier: true
      is_public: true
      can_see_transaction_balance: true
      can_see_where_tag: true
      can_see_bank_account_owners: true
      can_delete_corporate_location: true
      can_see_transaction_currency: true
      can_see_transaction_metadata: true
  CardJsonV400:
    required:
    - "brand"
    - "card_number"
    - "card_type"
    - "cvv"
    - "expiry_month"
    - "expiry_year"
    - "name_on_card"
    properties:
      expiry_year:
        type: "string"
        example: "2023"
      cvv:
        type: "string"
        example: "123"
      expiry_month:
        type: "string"
        example: "01"
      brand:
        type: "string"
        example: "Visa"
      card_number:
        type: "string"
        example: "364435172576215"
      name_on_card:
        type: "string"
        example: "SusanSmith"
      card_type:
        type: "string"
        example: "Credit"
  PutProductJsonV500:
    required:
    - "name"
    - "parent_product_code"
    properties:
      name:
        type: "string"
        example: "Deposit Account 1"
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
      terms_and_conditions_url:
        type: "string"
        example: "www.example.com/xyz"
      more_info_url:
        type: "string"
        example: "www.example.com/abc"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      parent_product_code:
        type: "string"
        example: "787LOW"
  OtherAccountJSON:
    required:
    - "IBAN"
    - "bank"
    - "holder"
    - "id"
    - "kind"
    - "metadata"
    - "number"
    - "swift_bic"
    properties:
      number:
        type: "string"
        example: "123"
      IBAN:
        type: "string"
        example: "UK234DB"
      swift_bic:
        type: "string"
        example: "UK12321DB"
      holder:
        $ref: "#/definitions/AccountHolderJSON"
      bank:
        $ref: "#/definitions/MinimalBankJSON"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      metadata:
        $ref: "#/definitions/OtherAccountMetadataJSON"
      kind:
        type: "string"
        example: "3456"
    example:
      number: "123"
      bank:
        national_identifier: "OBP"
        name: "OBP"
      metadata:
        open_corporates_URL: "www.openbankproject.com"
        private_alias: "NONE"
        image_URL: "www.openbankproject.com"
        corporate_location:
          date: "1100-01-01T00:00:00Z"
          latitude: 1.231
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          longitude: 1.231
        more_info: "www.openbankproject.com"
        public_alias: "NONE"
        URL: "www.openbankproject.com"
        physical_location:
          date: "1100-01-01T00:00:00Z"
          latitude: 1.231
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
          longitude: 1.231
      IBAN: "UK234DB"
      swift_bic: "UK12321DB"
      kind: "3456"
      holder:
        is_alias: true
        name: "OBP"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  RedisCallLimitJson:
    properties:
      per_week:
        $ref: "#/definitions/RateLimit"
      per_second:
        $ref: "#/definitions/RateLimit"
      per_month:
        $ref: "#/definitions/RateLimit"
      per_day:
        $ref: "#/definitions/RateLimit"
      per_minute:
        $ref: "#/definitions/RateLimit"
      per_hour:
        $ref: "#/definitions/RateLimit"
    example:
      per_month:
        calls_made: -1
        reset_in_seconds: -1
      per_second:
        calls_made: -1
        reset_in_seconds: -1
      per_minute:
        calls_made: -1
        reset_in_seconds: -1
      per_week:
        calls_made: -1
        reset_in_seconds: -1
      per_hour:
        calls_made: -1
        reset_in_seconds: -1
      per_day:
        calls_made: -1
        reset_in_seconds: -1
  ModeratedFirehoseAccountJsonV400:
    required:
    - "account_routings"
    - "account_rules"
    - "balance"
    - "bank_id"
    - "id"
    - "label"
    - "number"
    - "owners"
    - "product_code"
    properties:
      number:
        type: "string"
        example: ""
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      owners:
        type: "array"
        items:
          $ref: "#/definitions/UserJSONV121"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      product_code:
        type: "string"
        example: "1234BW"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      account_rules:
        type: "array"
        items:
          $ref: "#/definitions/AccountRuleJsonV300"
    example:
      number: ""
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      account_rules:
      - scheme: "OVERDRAFT"
        value: "10"
      - scheme: "OVERDRAFT"
        value: "10"
      balance:
        amount: "0"
        currency: "EUR"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "gh.29.uk"
      owners:
      - provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      - provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      label: "My Account"
      id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      product_code: "1234BW"
  ConsentJsonV400:
    required:
    - "api_standard"
    - "api_version"
    - "consent_id"
    - "jwt"
    - "status"
    properties:
      api_version:
        type: "string"
        example: "v1.3"
      jwt:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      status:
        type: "string"
        example: "INITIATED"
      api_standard:
        type: "string"
        example: "Berlin Group"
      consent_id:
        type: "string"
        example: "9d429899-24f5-42c8-8565-943ffa6a7945"
    example:
      jwt: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      api_version: "v1.3"
      api_standard: "Berlin Group"
      consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
      status: "INITIATED"
  PostCustomerPhoneNumberJsonV400:
    required:
    - "mobile_phone_number"
    properties:
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
  CoreTransactionJsonV300:
    required:
    - "details"
    - "id"
    - "other_account"
    - "this_account"
    - "transaction_attributes"
    properties:
      this_account:
        $ref: "#/definitions/ThisAccountJsonV300"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      details:
        $ref: "#/definitions/CoreTransactionDetailsJSON"
      other_account:
        $ref: "#/definitions/CoreCounterpartyJsonV300"
      transaction_attributes:
        type: "array"
        items:
          $ref: "#/definitions/TransactionAttributeResponseJson"
    example:
      other_account:
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        holder:
          is_alias: true
          name: "OBP"
        bank_routing:
          address: ""
          scheme: "scheme value"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      this_account:
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        holders:
        - is_alias: true
          name: "OBP"
        - is_alias: true
          name: "OBP"
        bank_routing:
          address: ""
          scheme: "scheme value"
        id: "String"
      transaction_attributes:
      - name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
        transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
        transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      details:
        description: "OBP"
        new_balance:
          amount: "0"
          currency: "EUR"
        completed: "1100-01-01T00:00:00Z"
        type: "AC"
        value:
          amount: "0"
          currency: "EUR"
        posted: "1100-01-01T00:00:00Z"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  PostCustomerOverviewJsonV500:
    required:
    - "customer_number"
    properties:
      customer_number:
        type: "string"
        example: "5987953"
  AccountAttributeResponseJson500:
    required:
    - "account_attribute_id"
    - "name"
    - "product_code"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      account_attribute_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_code:
        type: "string"
        example: "1234BW"
      contract_code:
        type: "string"
        example: "LKJL98769F"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "2012-04-23"
    example:
      account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      contract_code: "LKJL98769F"
      name: "OVERDRAFT_START_DATE"
      product_code: "1234BW"
      type: "DATE_WITH_DAY"
      value: "2012-04-23"
  ReplacementJSON:
    required:
    - "reason_requested"
    - "requested_date"
    properties:
      requested_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      reason_requested:
        type: "string"
        example: "RENEW"
    example:
      requested_date: "1100-01-01T00:00:00Z"
      reason_requested: "RENEW"
  UserAttributeJsonV400:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "BATTERY_LEVEL"
      type:
        type: "string"
        example: "STRING"
      value:
        type: "string"
        example: "90"
  MessageDocsJson:
    required:
    - "message_docs"
    properties:
      message_docs:
        type: "array"
        items:
          $ref: "#/definitions/MessageDocJson"
    example:
      message_docs:
      - outboundAvroSchema:
          jsonString: "{}"
        process: "getAccounts"
        message_format: "KafkaV2017"
        example_outbound_message:
          jsonString: "{}"
        example_inbound_message:
          jsonString: "{}"
        dependent_endpoints:
        - name: "getAccounts"
          version: "OBPv3.0.0"
        - name: "getAccounts"
          version: "OBPv3.0.0"
        inbound_topic: "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
        description: "get Banks"
        requiredFieldInfo: {}
        outbound_topic: "to.obp.api.1.caseclass.OutboundGetAccounts"
        adapter_implementation:
          group: "CORE"
          suggested_order: 3
        inboundAvroSchema:
          jsonString: "{}"
      - outboundAvroSchema:
          jsonString: "{}"
        process: "getAccounts"
        message_format: "KafkaV2017"
        example_outbound_message:
          jsonString: "{}"
        example_inbound_message:
          jsonString: "{}"
        dependent_endpoints:
        - name: "getAccounts"
          version: "OBPv3.0.0"
        - name: "getAccounts"
          version: "OBPv3.0.0"
        inbound_topic: "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
        description: "get Banks"
        requiredFieldInfo: {}
        outbound_topic: "to.obp.api.1.caseclass.OutboundGetAccounts"
        adapter_implementation:
          group: "CORE"
          suggested_order: 3
        inboundAvroSchema:
          jsonString: "{}"
  MetricsJsonV220:
    required:
    - "property"
    - "value"
    properties:
      property:
        type: "string"
        example: "String"
      value:
        type: "string"
        example: "Mapper"
    example:
      property: "String"
      value: "Mapper"
  StandingOrderJsonV400:
    required:
    - "account_id"
    - "active"
    - "amount"
    - "bank_id"
    - "counterparty_id"
    - "customer_id"
    - "date_cancelled"
    - "date_expires"
    - "date_signed"
    - "date_starts"
    - "standing_order_id"
    - "user_id"
    - "when"
    properties:
      date_starts:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      standing_order_id:
        type: "string"
        example: "aa0533bd-eb22-4bff-af75-d45240361b05"
      date_cancelled:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      date_signed:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      amount:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      date_expires:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      when:
        $ref: "#/definitions/When"
      active:
        type: "boolean"
        example: true
    example:
      date_starts: "2024-02-05T14:15:53Z"
      amount:
        amount: "0"
        currency: "EUR"
      counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      date_signed: "2024-02-05T14:15:53Z"
      active: true
      date_cancelled: "2024-02-05T14:15:53Z"
      when:
        detail: "LAST_DAY"
        frequency: "YEARLY"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      standing_order_id: "aa0533bd-eb22-4bff-af75-d45240361b05"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      bank_id: "gh.29.uk"
      date_expires: "2024-02-05T14:15:53Z"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  MetricJsonV510:
    required:
    - "app_name"
    - "consumer_id"
    - "correlation_id"
    - "date"
    - "developer_email"
    - "duration"
    - "implemented_by_partial_function"
    - "implemented_in_version"
    - "response_body"
    - "source_ip"
    - "target_ip"
    - "url"
    - "user_id"
    - "user_name"
    - "verb"
    properties:
      duration:
        type: "integer"
        format: "int64"
        example: 39
      response_body:
        $ref: "#/definitions/MetricJsonV510_response_body"
      implemented_in_version:
        type: "string"
        example: "v210"
      target_ip:
        type: "string"
        example: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
      url:
        type: "string"
        example: "www.openbankproject.com"
      correlation_id:
        type: "string"
        example: "v8ho6h5ivel3uq7a5zcnv0w1"
      implemented_by_partial_function:
        type: "string"
        example: "getBanks"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      consumer_id:
        type: "string"
        example: "123"
      verb:
        type: "string"
        example: "get"
      app_name:
        type: "string"
        example: "SOFI"
      source_ip:
        type: "string"
        example: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
      user_name:
        type: "string"
        example: "OBP"
    example:
      date: "1100-01-01T00:00:00Z"
      implemented_in_version: "v210"
      user_name: "OBP"
      verb: "get"
      response_body:
        code: 401
        message: "OBP-20001: User not logged in. Authentication is required!"
      implemented_by_partial_function: "getBanks"
      url: "www.openbankproject.com"
      source_ip: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
      duration: 39
      consumer_id: "123"
      app_name: "SOFI"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      target_ip: "2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"
      developer_email: "felixsmith@example.com"
      correlation_id: "v8ho6h5ivel3uq7a5zcnv0w1"
  BankId:
    required:
    - "value"
    properties:
      value:
        type: "string"
        example: "gh.uk.9j"
    example:
      value: "gh.uk.9j"
  AliasJSON:
    required:
    - "alias"
    properties:
      alias:
        type: "string"
        example: "String"
    example:
      alias: "String"
  ViewsJsonV300:
    required:
    - "views"
    properties:
      views:
        type: "array"
        items:
          $ref: "#/definitions/ViewJsonV300"
    example:
      views:
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_create_standing_order: true
        can_see_other_bank_routing_address: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_bank_account_credit_limit: true
        can_see_other_account_routing_address: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        metadata_view: "owner"
        can_see_comments: true
        can_see_transaction_description: true
        id: "1234"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        is_system: true
        can_see_bank_account_routing_scheme: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_see_other_account_routing_scheme: true
        can_see_bank_routing_address: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_query_available_funds: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_transaction_request_to_own_account: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_add_transaction_request_to_any_account: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "No"
        is_firehose: true
        can_see_bank_account_routing_address: true
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_create_direct_debit: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_other_bank_routing_scheme: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        can_see_bank_routing_scheme: true
        is_public: true
        can_see_transaction_balance: true
        can_add_counterparty: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_create_standing_order: true
        can_see_other_bank_routing_address: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_bank_account_credit_limit: true
        can_see_other_account_routing_address: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        metadata_view: "owner"
        can_see_comments: true
        can_see_transaction_description: true
        id: "1234"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        is_system: true
        can_see_bank_account_routing_scheme: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_see_other_account_routing_scheme: true
        can_see_bank_routing_address: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_query_available_funds: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_transaction_request_to_own_account: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_add_transaction_request_to_any_account: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "No"
        is_firehose: true
        can_see_bank_account_routing_address: true
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_create_direct_debit: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_other_bank_routing_scheme: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        can_see_bank_routing_scheme: true
        is_public: true
        can_see_transaction_balance: true
        can_add_counterparty: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
  CallLimitPostJsonV400:
    required:
    - "from_date"
    - "per_day_call_limit"
    - "per_hour_call_limit"
    - "per_minute_call_limit"
    - "per_month_call_limit"
    - "per_second_call_limit"
    - "per_week_call_limit"
    - "to_date"
    properties:
      per_month_call_limit:
        type: "string"
        example: "-1"
      per_week_call_limit:
        type: "string"
        example: "-1"
      api_version:
        type: "string"
      per_hour_call_limit:
        type: "string"
        example: "-1"
      bank_id:
        type: "string"
      per_second_call_limit:
        type: "string"
        example: "-1"
      from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      api_name:
        type: "string"
      per_minute_call_limit:
        type: "string"
        example: "-1"
      per_day_call_limit:
        type: "string"
        example: "-1"
      to_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      per_week_call_limit: "-1"
      from_date: "1100-01-01T00:00:00Z"
      to_date: "1100-01-01T00:00:00Z"
      per_month_call_limit: "-1"
      per_day_call_limit: "-1"
      bank_id: "bank_id"
      api_name: "api_name"
      per_second_call_limit: "-1"
      per_minute_call_limit: "-1"
      api_version: "api_version"
      per_hour_call_limit: "-1"
  BankRoutingJsonV121:
    required:
    - "address"
    - "scheme"
    properties:
      scheme:
        type: "string"
        example: "scheme value"
      address:
        type: "string"
        example: ""
    example:
      address: ""
      scheme: "scheme value"
  TransactionImagesJSON:
    required:
    - "images"
    properties:
      images:
        type: "array"
        items:
          $ref: "#/definitions/TransactionImageJSON"
    example:
      images:
      - date: "1100-01-01T00:00:00Z"
        label: "NONE"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        URL: "www.openbankproject.com"
      - date: "1100-01-01T00:00:00Z"
        label: "NONE"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        URL: "www.openbankproject.com"
  PostHistoricalTransactionResponseJson:
    required:
    - "charge_policy"
    - "completed"
    - "description"
    - "from"
    - "posted"
    - "to"
    - "transaction_id"
    - "transaction_request_type"
    - "value"
    properties:
      description:
        type: "string"
        example: "this is for work"
      to:
        $ref: "#/definitions/HistoricalTransactionAccountJsonV310"
      transaction_id:
        type: "string"
        example: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      transaction_request_type:
        type: "string"
        example: "SANDBOX_TAN"
      completed:
        type: "string"
        format: "date"
        example: "1100-01-01T01:01:01Z"
      charge_policy:
        type: "string"
        example: "SHARED"
      from:
        $ref: "#/definitions/HistoricalTransactionAccountJsonV310"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T01:01:01Z"
    example:
      transaction_id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      charge_policy: "SHARED"
      description: "this is for work"
      from:
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        bank_id: "gh.29.uk"
      to:
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        bank_id: "gh.29.uk"
      completed: "1100-01-01T01:01:01Z"
      transaction_request_type: "SANDBOX_TAN"
      value:
        amount: "0"
        currency: "EUR"
      posted: "1100-01-01T01:01:01Z"
  CustomerJsonV310:
    required:
    - "bank_id"
    - "branch_id"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "dependants"
    - "dob_of_dependants"
    - "email"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "kyc_status"
    - "last_ok_date"
    - "legal_name"
    - "mobile_phone_number"
    - "name_suffix"
    - "relationship_status"
    - "title"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
          format: "date"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      title:
        type: "string"
        example: "Dr."
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
    example:
      kyc_status: true
      highest_education_attained: "Master"
      name_suffix: "Sr"
      customer_number: "5987953"
      date_of_birth: "1100-01-01T00:00:00Z"
      face_image:
        date: "1100-01-01T00:00:00Z"
        url: "www.openbankproject"
      title: "Dr."
      mobile_phone_number: "+44 07972 444 876"
      dob_of_dependants:
      - "2000-01-23"
      - "2000-01-23"
      credit_rating:
        rating: "OBP"
        source: "OBP"
      relationship_status: "single"
      branch_id: "DERBY6"
      last_ok_date: "2023-02-05T14:15:53Z"
      dependants: 1
      bank_id: "gh.29.uk"
      credit_limit:
        amount: "0"
        currency: "EUR"
      employment_status: "worker"
      legal_name: "Eveline Tripman"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email: "felixsmith@example.com"
  EntitlementsJsonV400:
    required:
    - "list"
    properties:
      list:
        type: "array"
        items:
          $ref: "#/definitions/EntitlementJsonV400"
    example:
      list:
      - role_name: ""
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        entitlement_id: ""
        bank_id: "gh.29.uk"
      - role_name: ""
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        entitlement_id: ""
        bank_id: "gh.29.uk"
  PhysicalCardsJSON:
    required:
    - "cards"
    properties:
      cards:
        type: "array"
        items:
          $ref: "#/definitions/PhysicalCardJSON"
    example:
      cards:
      - allows:
        - "allows"
        - "allows"
        expires_date: "1100-01-01T00:00:00Z"
        bank_card_number: "364435172576215"
        collected: "1100-01-01T00:00:00Z"
        serial_number: "1324234"
        technology: "String"
        networks:
        - "networks"
        - "networks"
        enabled: true
        pin_reset:
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        valid_from_date: "1100-01-01T00:00:00Z"
        posted: "1100-01-01T00:00:00Z"
        issue_number: "1"
        bank_id: "gh.29.uk"
        cancelled: true
        on_hot_list: true
        replacement:
          requested_date: "1100-01-01T00:00:00Z"
          reason_requested: "RENEW"
        account:
          views_available:
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          bank_id: "gh.29.uk"
          id: "123"
          label: "OBP"
        name_on_card: "String"
      - allows:
        - "allows"
        - "allows"
        expires_date: "1100-01-01T00:00:00Z"
        bank_card_number: "364435172576215"
        collected: "1100-01-01T00:00:00Z"
        serial_number: "1324234"
        technology: "String"
        networks:
        - "networks"
        - "networks"
        enabled: true
        pin_reset:
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        - requested_date: "2024-02-05T14:15:52Z"
          reason_requested: "GOOD_SECURITY_PRACTICE"
        valid_from_date: "1100-01-01T00:00:00Z"
        posted: "1100-01-01T00:00:00Z"
        issue_number: "1"
        bank_id: "gh.29.uk"
        cancelled: true
        on_hot_list: true
        replacement:
          requested_date: "1100-01-01T00:00:00Z"
          reason_requested: "RENEW"
        account:
          views_available:
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          - can_see_bank_account_type: true
            can_see_tags: true
            can_see_other_account_iban: true
            can_delete_tag: true
            can_add_corporate_location: true
            can_see_images: true
            can_see_transaction_type: true
            can_see_other_account_kind: true
            can_edit_owner_comment: true
            can_add_physical_location: true
            can_see_bank_account_number: true
            can_see_corporate_location: true
            can_see_comments: true
            can_see_transaction_description: true
            id: "123"
            can_see_transaction_amount: true
            can_see_bank_account_bank_name: true
            can_add_url: true
            can_see_url: true
            can_see_public_alias: true
            can_see_other_account_number: true
            can_add_more_info: true
            can_delete_physical_location: true
            can_delete_where_tag: true
            can_add_comment: true
            can_see_more_info: true
            can_add_public_alias: true
            short_name: "short_name"
            can_see_bank_account_currency: true
            can_see_bank_account_swift_bic: true
            can_see_bank_account_balance: true
            can_see_open_corporates_url: true
            can_delete_comment: true
            can_see_other_account_bank_name: true
            can_add_tag: true
            description: "description"
            can_see_physical_location: true
            can_delete_image: true
            can_see_bank_account_label: true
            can_see_image_url: true
            can_see_transaction_other_bank_account: true
            hide_metadata_if_alias_used: true
            can_add_open_corporates_url: true
            alias: "None"
            can_see_bank_account_national_identifier: true
            can_see_other_account_swift_bic: true
            can_add_image: true
            can_add_where_tag: true
            can_see_owner_comment: true
            can_see_transaction_this_bank_account: true
            can_add_image_url: true
            can_see_other_account_metadata: true
            can_see_transaction_start_date: true
            can_see_private_alias: true
            can_see_transaction_finish_date: true
            can_see_bank_account_iban: true
            can_add_private_alias: true
            can_see_other_account_national_identifier: true
            is_public: true
            can_see_transaction_balance: true
            can_see_where_tag: true
            can_see_bank_account_owners: true
            can_delete_corporate_location: true
            can_see_transaction_currency: true
            can_see_transaction_metadata: true
          bank_id: "gh.29.uk"
          id: "123"
          label: "OBP"
        name_on_card: "String"
  JsonDynamicMessageDoc:
    required:
    - "adapter_implementation"
    - "description"
    - "example_inbound_message"
    - "example_outbound_message"
    - "inbound_avro_schema"
    - "inbound_topic"
    - "message_format"
    - "method_body"
    - "outbound_avro_schema"
    - "outbound_topic"
    - "process"
    - "programming_lang"
    properties:
      outbound_avro_schema:
        type: "string"
        example: ""
      inbound_avro_schema:
        type: "string"
        example: ""
      adapter_implementation:
        type: "string"
        example: ""
      dynamic_message_doc_id:
        type: "string"
        example: ""
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
      process:
        type: "string"
        example: "obp.getBank"
      outbound_topic:
        type: "string"
        example: ""
      method_body:
        type: "string"
        example: "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29"
      message_format:
        type: "string"
        example: ""
      example_outbound_message:
        type: "object"
        properties: {}
      inbound_topic:
        type: "string"
        example: ""
      example_inbound_message:
        type: "object"
        properties: {}
      bank_id:
        type: "string"
        example: "gh.29.uk"
      programming_lang:
        type: "string"
        example: "Scala"
    example:
      process: "obp.getBank"
      message_format: ""
      example_outbound_message: "{}"
      dynamic_message_doc_id: ""
      inbound_topic: ""
      description: "This an optional field. Maximum length is 2000. It can be any\
        \ characters here."
      example_inbound_message: "{}"
      outbound_avro_schema: ""
      bank_id: "gh.29.uk"
      method_body: "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29"
      programming_lang: "Scala"
      outbound_topic: ""
      adapter_implementation: ""
      inbound_avro_schema: ""
  AccountIdJson:
    required:
    - "id"
    properties:
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
    example:
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  TransactionRequestBodyCounterpartyJSON:
    required:
    - "charge_policy"
    - "description"
    - "to"
    - "value"
    properties:
      description:
        type: "string"
        example: "A description for the transaction to the counterparty"
      future_date:
        type: "string"
        example: "20200127"
      to:
        $ref: "#/definitions/CounterpartyIdJson"
      charge_policy:
        type: "string"
        example: "SHARED"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
  IbanAddress:
    required:
    - "address"
    properties:
      address:
        type: "string"
        example: "DE75512108001245126199"
  ViewBasic:
    required:
    - "description"
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        example: "owner"
      name:
        type: "string"
        example: "Owner"
      description:
        type: "string"
        example: "This view is for the owner for the account."
    example:
      name: "Owner"
      description: "This view is for the owner for the account."
      id: "owner"
  PostTransactionTagJSON:
    required:
    - "value"
    properties:
      value:
        type: "string"
        example: "String"
  CounterpartiesJson400:
    required:
    - "counterparties"
    properties:
      counterparties:
        type: "array"
        items:
          $ref: "#/definitions/CounterpartyJson400"
    example:
      counterparties:
      - this_bank_id: "gh.29.uk"
        is_beneficiary: true
        other_bank_routing_scheme: "OBP"
        other_account_routing_scheme: "OBP"
        this_account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        other_bank_routing_address: "gh.29.uk"
        description: "My landlord"
        other_branch_routing_scheme: "OBP"
        bespoke:
        - value: "english Name"
          key: "englishName"
        - value: "english Name"
          key: "englishName"
        created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        other_branch_routing_address: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
        other_account_secondary_routing_scheme: "IBAN"
        this_view_id: "owner"
        name: "CounterpartyName"
        currency: "EUR"
        other_account_routing_address: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
        other_account_secondary_routing_address: "DE89370400440532013000"
      - this_bank_id: "gh.29.uk"
        is_beneficiary: true
        other_bank_routing_scheme: "OBP"
        other_account_routing_scheme: "OBP"
        this_account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        other_bank_routing_address: "gh.29.uk"
        description: "My landlord"
        other_branch_routing_scheme: "OBP"
        bespoke:
        - value: "english Name"
          key: "englishName"
        - value: "english Name"
          key: "englishName"
        created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        other_branch_routing_address: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
        other_account_secondary_routing_scheme: "IBAN"
        this_view_id: "owner"
        name: "CounterpartyName"
        currency: "EUR"
        other_account_routing_address: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
        other_account_secondary_routing_address: "DE89370400440532013000"
  OtherAccountMetadataJSON:
    required:
    - "URL"
    - "corporate_location"
    - "image_URL"
    - "more_info"
    - "open_corporates_URL"
    - "physical_location"
    - "private_alias"
    - "public_alias"
    properties:
      public_alias:
        type: "string"
        example: "NONE"
      image_URL:
        type: "string"
        example: "www.openbankproject.com"
      physical_location:
        $ref: "#/definitions/LocationJSONV121"
      private_alias:
        type: "string"
        example: "NONE"
      URL:
        type: "string"
        example: "www.openbankproject.com"
      more_info:
        type: "string"
        example: "www.openbankproject.com"
      corporate_location:
        $ref: "#/definitions/LocationJSONV121"
      open_corporates_URL:
        type: "string"
        example: "www.openbankproject.com"
    example:
      open_corporates_URL: "www.openbankproject.com"
      private_alias: "NONE"
      image_URL: "www.openbankproject.com"
      corporate_location:
        date: "1100-01-01T00:00:00Z"
        latitude: 1.231
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        longitude: 1.231
      more_info: "www.openbankproject.com"
      public_alias: "NONE"
      URL: "www.openbankproject.com"
      physical_location:
        date: "1100-01-01T00:00:00Z"
        latitude: 1.231
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        longitude: 1.231
  ApiCollectionEndpointsJson400:
    required:
    - "api_collection_endpoints"
    properties:
      api_collection_endpoints:
        type: "array"
        items:
          $ref: "#/definitions/ApiCollectionEndpointJson400"
    example:
      api_collection_endpoints:
      - api_collection_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        api_collection_endpoint_id: "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        operation_id: "OBPv4.0.0-getBanks"
      - api_collection_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        api_collection_endpoint_id: "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        operation_id: "OBPv4.0.0-getBanks"
  JsonDynamicResourceDoc:
    required:
    - "description"
    - "error_response_bodies"
    - "method_body"
    - "partial_function_name"
    - "request_url"
    - "request_verb"
    - "roles"
    - "summary"
    - "tags"
    properties:
      error_response_bodies:
        type: "string"
        example: "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication\
          \ is required!,OBP-20006: User is missing one or more roles: ,OBP-10001:\
          \ Incorrect json format."
      description:
        type: "string"
        example: "Create one User"
      tags:
        type: "string"
        example: "Create-My-User"
      dynamic_resource_doc_id:
        type: "string"
        example: "vce035ca-9a0f-4bfa-b30b-9003aa467f51"
      request_verb:
        type: "string"
        example: "POST"
      method_body:
        type: "string"
        example: "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D"
      roles:
        type: "string"
        example: "CanCreateMyUser"
      example_request_body:
        $ref: "#/definitions/JsonDynamicResourceDoc_example_request_body"
      request_url:
        type: "string"
        example: "/my_user/MY_USER_ID"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      partial_function_name:
        type: "string"
        example: "createUser"
      summary:
        type: "string"
        example: "Create My User"
      success_response_body:
        $ref: "#/definitions/JsonDynamicResourceDoc_success_response_body"
    example:
      dynamic_resource_doc_id: "vce035ca-9a0f-4bfa-b30b-9003aa467f51"
      request_verb: "POST"
      summary: "Create My User"
      roles: "CanCreateMyUser"
      description: "Create one User"
      success_response_body:
        my_user_id: "some_id_value"
        name: "Jhon"
        _optional_fields_:
        - "hobby"
        - "hobby"
        age: 12
        hobby:
        - "coding"
        - "coding"
      request_url: "/my_user/MY_USER_ID"
      tags: "Create-My-User"
      bank_id: "gh.29.uk"
      method_body: "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D"
      partial_function_name: "createUser"
      error_response_bodies: "OBP-50000: Unknown Error.,OBP-20001: User not logged\
        \ in. Authentication is required!,OBP-20006: User is missing one or more roles:\
        \ ,OBP-10001: Incorrect json format."
      example_request_body:
        name: "Jhon"
        _optional_fields_:
        - "hobby"
        - "hobby"
        age: 12
        hobby:
        - "coding"
        - "coding"
  CoreAccountsHeldJsonV300:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/AccountHeldJson"
    example:
      accounts:
      - number: "123"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "123"
        label: "My Account"
        id: "12314"
      - number: "123"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "123"
        label: "My Account"
        id: "12314"
  UpdateAccountResponseJsonV310:
    required:
    - "account_id"
    - "account_routings"
    - "bank_id"
    - "branch_id"
    - "label"
    - "type"
    properties:
      branch_id:
        type: "string"
        example: "1234"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "Label"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      type:
        type: "string"
        example: "CURRENT"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      branch_id: "1234"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "gh.29.uk"
      label: "Label"
      type: "CURRENT"
  PutUpdateCustomerIdentityJsonV310:
    required:
    - "date_of_birth"
    - "legal_name"
    - "name_suffix"
    - "title"
    properties:
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      title:
        type: "string"
        example: "Dr."
      name_suffix:
        type: "string"
        example: "Sr"
  BasicAccountsJSON:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/BasicAccountJSON"
    example:
      accounts:
      - bank_id: "gh.29.uk"
        views_available:
        - is_public: true
          short_name: "HHH"
          id: "1"
        - is_public: true
          short_name: "HHH"
          id: "1"
        id: "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        label: "NoneLabel"
      - bank_id: "gh.29.uk"
        views_available:
        - is_public: true
          short_name: "HHH"
          id: "1"
        - is_public: true
          short_name: "HHH"
          id: "1"
        id: "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        label: "NoneLabel"
  ModeratedAccountsJSON400:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/ModeratedAccountJSON400"
    example:
      accounts:
      - number: "123"
        account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        balance:
          amount: "0"
          currency: "EUR"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        views_available:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        bank_id: "gh.29.uk"
        owners:
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        label: "NoneLabel"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        product_code: "1234BW"
        tags:
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
      - number: "123"
        account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        balance:
          amount: "0"
          currency: "EUR"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        views_available:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        bank_id: "gh.29.uk"
        owners:
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        label: "NoneLabel"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        product_code: "1234BW"
        tags:
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
        - date: "1100-01-01T00:00:00Z"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          value: "OBP"
          user:
            provider: "http://127.0.0.1:8080"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            display_name: "OBP"
  TransactionRequestCounterpartyId:
    required:
    - "counterparty_id"
    properties:
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
    example:
      counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  ViewJsonV300:
    required:
    - "alias"
    - "can_add_comment"
    - "can_add_corporate_location"
    - "can_add_counterparty"
    - "can_add_image"
    - "can_add_image_url"
    - "can_add_more_info"
    - "can_add_open_corporates_url"
    - "can_add_physical_location"
    - "can_add_private_alias"
    - "can_add_public_alias"
    - "can_add_tag"
    - "can_add_transaction_request_to_any_account"
    - "can_add_transaction_request_to_own_account"
    - "can_add_url"
    - "can_add_where_tag"
    - "can_create_direct_debit"
    - "can_create_standing_order"
    - "can_delete_comment"
    - "can_delete_corporate_location"
    - "can_delete_image"
    - "can_delete_physical_location"
    - "can_delete_tag"
    - "can_delete_where_tag"
    - "can_edit_owner_comment"
    - "can_query_available_funds"
    - "can_see_bank_account_balance"
    - "can_see_bank_account_bank_name"
    - "can_see_bank_account_credit_limit"
    - "can_see_bank_account_currency"
    - "can_see_bank_account_iban"
    - "can_see_bank_account_label"
    - "can_see_bank_account_national_identifier"
    - "can_see_bank_account_number"
    - "can_see_bank_account_owners"
    - "can_see_bank_account_routing_address"
    - "can_see_bank_account_routing_scheme"
    - "can_see_bank_account_swift_bic"
    - "can_see_bank_account_type"
    - "can_see_bank_routing_address"
    - "can_see_bank_routing_scheme"
    - "can_see_comments"
    - "can_see_corporate_location"
    - "can_see_image_url"
    - "can_see_images"
    - "can_see_more_info"
    - "can_see_open_corporates_url"
    - "can_see_other_account_bank_name"
    - "can_see_other_account_iban"
    - "can_see_other_account_kind"
    - "can_see_other_account_metadata"
    - "can_see_other_account_national_identifier"
    - "can_see_other_account_number"
    - "can_see_other_account_routing_address"
    - "can_see_other_account_routing_scheme"
    - "can_see_other_account_swift_bic"
    - "can_see_other_bank_routing_address"
    - "can_see_other_bank_routing_scheme"
    - "can_see_owner_comment"
    - "can_see_physical_location"
    - "can_see_private_alias"
    - "can_see_public_alias"
    - "can_see_tags"
    - "can_see_transaction_amount"
    - "can_see_transaction_balance"
    - "can_see_transaction_currency"
    - "can_see_transaction_description"
    - "can_see_transaction_finish_date"
    - "can_see_transaction_metadata"
    - "can_see_transaction_other_bank_account"
    - "can_see_transaction_start_date"
    - "can_see_transaction_this_bank_account"
    - "can_see_transaction_type"
    - "can_see_url"
    - "can_see_where_tag"
    - "description"
    - "hide_metadata_if_alias_used"
    - "id"
    - "is_public"
    - "is_system"
    - "metadata_view"
    - "short_name"
    properties:
      can_see_transaction_start_date:
        type: "boolean"
        example: true
      can_add_url:
        type: "boolean"
        example: true
      can_add_where_tag:
        type: "boolean"
        example: true
      can_see_transaction_this_bank_account:
        type: "boolean"
        example: true
      can_see_bank_account_owners:
        type: "boolean"
        example: true
      can_see_bank_routing_address:
        type: "boolean"
        example: true
      can_see_private_alias:
        type: "boolean"
        example: true
      can_edit_owner_comment:
        type: "boolean"
        example: true
      is_system:
        type: "boolean"
        example: true
      can_see_other_account_national_identifier:
        type: "boolean"
        example: true
      can_see_bank_routing_scheme:
        type: "boolean"
        example: true
      can_see_public_alias:
        type: "boolean"
        example: true
      can_see_physical_location:
        type: "boolean"
        example: true
      can_see_owner_comment:
        type: "boolean"
        example: true
      can_see_bank_account_iban:
        type: "boolean"
        example: true
      can_see_corporate_location:
        type: "boolean"
        example: true
      can_see_bank_account_number:
        type: "boolean"
        example: true
      can_see_other_account_bank_name:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "description"
      can_see_bank_account_routing_scheme:
        type: "boolean"
        example: true
      can_see_transaction_other_bank_account:
        type: "boolean"
        example: true
      can_delete_corporate_location:
        type: "boolean"
        example: true
      can_see_comments:
        type: "boolean"
        example: true
      can_see_bank_account_bank_name:
        type: "boolean"
        example: true
      can_add_more_info:
        type: "boolean"
        example: true
      can_create_direct_debit:
        type: "boolean"
        example: true
      can_see_other_account_number:
        type: "boolean"
        example: true
      can_see_other_account_swift_bic:
        type: "boolean"
        example: true
      can_add_open_corporates_url:
        type: "boolean"
        example: true
      can_see_other_account_kind:
        type: "boolean"
        example: true
      can_add_transaction_request_to_own_account:
        type: "boolean"
        example: true
      can_delete_physical_location:
        type: "boolean"
        example: true
      can_see_bank_account_label:
        type: "boolean"
        example: true
      can_see_transaction_currency:
        type: "boolean"
        example: true
      is_public:
        type: "boolean"
        example: true
      can_see_transaction_finish_date:
        type: "boolean"
        example: true
      can_see_bank_account_routing_address:
        type: "boolean"
        example: true
      can_add_tag:
        type: "boolean"
        example: true
      can_see_images:
        type: "boolean"
        example: true
      can_query_available_funds:
        type: "boolean"
        example: true
      can_see_bank_account_credit_limit:
        type: "boolean"
        example: true
      can_see_bank_account_currency:
        type: "boolean"
        example: true
      hide_metadata_if_alias_used:
        type: "boolean"
        example: true
      can_delete_where_tag:
        type: "boolean"
        example: true
      alias:
        type: "string"
        example: "No"
      can_add_image_url:
        type: "boolean"
        example: true
      can_add_comment:
        type: "boolean"
        example: true
      can_see_image_url:
        type: "boolean"
        example: true
      id:
        type: "string"
        example: "1234"
      can_create_standing_order:
        type: "boolean"
        example: true
      can_see_bank_account_national_identifier:
        type: "boolean"
        example: true
      can_add_counterparty:
        type: "boolean"
        example: true
      can_add_transaction_request_to_any_account:
        type: "boolean"
        example: true
      can_see_tags:
        type: "boolean"
        example: true
      can_see_open_corporates_url:
        type: "boolean"
        example: true
      short_name:
        type: "string"
        example: "short_name"
      can_delete_tag:
        type: "boolean"
        example: true
      can_see_other_account_routing_scheme:
        type: "boolean"
        example: true
      can_see_more_info:
        type: "boolean"
        example: true
      can_see_transaction_metadata:
        type: "boolean"
        example: true
      can_delete_comment:
        type: "boolean"
        example: true
      can_see_where_tag:
        type: "boolean"
        example: true
      can_add_private_alias:
        type: "boolean"
        example: true
      is_firehose:
        type: "boolean"
      can_add_public_alias:
        type: "boolean"
        example: true
      can_see_bank_account_swift_bic:
        type: "boolean"
        example: true
      can_add_image:
        type: "boolean"
        example: true
      can_see_transaction_type:
        type: "boolean"
        example: true
      can_see_other_account_routing_address:
        type: "boolean"
        example: true
      can_see_other_account_iban:
        type: "boolean"
        example: true
      can_add_physical_location:
        type: "boolean"
        example: true
      can_add_corporate_location:
        type: "boolean"
        example: true
      can_delete_image:
        type: "boolean"
        example: true
      can_see_url:
        type: "boolean"
        example: true
      can_see_bank_account_balance:
        type: "boolean"
        example: true
      can_see_other_bank_routing_address:
        type: "boolean"
        example: true
      can_see_transaction_balance:
        type: "boolean"
        example: true
      metadata_view:
        type: "string"
        example: "owner"
      can_see_transaction_amount:
        type: "boolean"
        example: true
      can_see_other_account_metadata:
        type: "boolean"
        example: true
      can_see_bank_account_type:
        type: "boolean"
        example: true
      can_see_other_bank_routing_scheme:
        type: "boolean"
        example: true
      can_see_transaction_description:
        type: "boolean"
        example: true
    example:
      can_see_bank_account_type: true
      can_see_tags: true
      can_see_other_account_iban: true
      can_delete_tag: true
      can_create_standing_order: true
      can_see_other_bank_routing_address: true
      can_add_corporate_location: true
      can_see_images: true
      can_see_transaction_type: true
      can_see_bank_account_credit_limit: true
      can_see_other_account_routing_address: true
      can_see_other_account_kind: true
      can_edit_owner_comment: true
      can_add_physical_location: true
      can_see_bank_account_number: true
      can_see_corporate_location: true
      metadata_view: "owner"
      can_see_comments: true
      can_see_transaction_description: true
      id: "1234"
      can_see_transaction_amount: true
      can_see_bank_account_bank_name: true
      is_system: true
      can_see_bank_account_routing_scheme: true
      can_add_url: true
      can_see_url: true
      can_see_public_alias: true
      can_see_other_account_number: true
      can_see_other_account_routing_scheme: true
      can_see_bank_routing_address: true
      can_add_more_info: true
      can_delete_physical_location: true
      can_delete_where_tag: true
      can_add_comment: true
      can_see_more_info: true
      can_add_public_alias: true
      short_name: "short_name"
      can_see_bank_account_currency: true
      can_see_bank_account_swift_bic: true
      can_query_available_funds: true
      can_see_bank_account_balance: true
      can_see_open_corporates_url: true
      can_delete_comment: true
      can_see_other_account_bank_name: true
      can_add_transaction_request_to_own_account: true
      can_add_tag: true
      description: "description"
      can_see_physical_location: true
      can_delete_image: true
      can_see_bank_account_label: true
      can_see_image_url: true
      can_add_transaction_request_to_any_account: true
      can_see_transaction_other_bank_account: true
      hide_metadata_if_alias_used: true
      can_add_open_corporates_url: true
      alias: "No"
      is_firehose: true
      can_see_bank_account_routing_address: true
      can_see_bank_account_national_identifier: true
      can_see_other_account_swift_bic: true
      can_add_image: true
      can_add_where_tag: true
      can_see_owner_comment: true
      can_create_direct_debit: true
      can_see_transaction_this_bank_account: true
      can_add_image_url: true
      can_see_other_account_metadata: true
      can_see_other_bank_routing_scheme: true
      can_see_transaction_start_date: true
      can_see_private_alias: true
      can_see_transaction_finish_date: true
      can_see_bank_account_iban: true
      can_add_private_alias: true
      can_see_other_account_national_identifier: true
      can_see_bank_routing_scheme: true
      is_public: true
      can_see_transaction_balance: true
      can_add_counterparty: true
      can_see_where_tag: true
      can_see_bank_account_owners: true
      can_delete_corporate_location: true
      can_see_transaction_currency: true
      can_see_transaction_metadata: true
  MinimalBankJSON:
    required:
    - "name"
    - "national_identifier"
    properties:
      national_identifier:
        type: "string"
        example: "OBP"
      name:
        type: "string"
        example: "OBP"
    example:
      national_identifier: "OBP"
      name: "OBP"
  TransactionTypeId:
    required:
    - "value"
    properties:
      value:
        type: "string"
        example: "123"
    example:
      value: "123"
  SettlementAccountResponseJson:
    required:
    - "account_attributes"
    - "account_id"
    - "account_routings"
    - "balance"
    - "branch_id"
    - "label"
    - "payment_system"
    - "user_id"
    properties:
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson"
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      payment_system:
        type: "string"
        example: "SEPA"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      payment_system: "SEPA"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      balance:
        amount: "0"
        currency: "EUR"
      branch_id: "DERBY6"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      label: "My Account"
  CardObjectJson:
    required:
    - "card_description"
    - "card_type"
    - "use_type"
    properties:
      card_type:
        type: "string"
        example: "5"
      card_description:
        type: "string"
        example: "good"
      use_type:
        type: "string"
        example: "3"
    example:
      use_type: "3"
      card_type: "5"
      card_description: "good"
  UserAttributeResponseJsonV400:
    required:
    - "insert_date"
    - "name"
    - "type"
    - "user_attribute_id"
    - "value"
    properties:
      name:
        type: "string"
        example: "BATTERY_LEVEL"
      insert_date:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      user_attribute_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      type:
        type: "string"
        example: "STRING"
      value:
        type: "string"
        example: "90"
    example:
      insert_date: "2024-02-05T14:15:53Z"
      user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name: "BATTERY_LEVEL"
      type: "STRING"
      value: "90"
  PhysicalCardJsonV310:
    required:
    - "account"
    - "allows"
    - "bank_id"
    - "cancelled"
    - "card_id"
    - "card_number"
    - "card_type"
    - "collected"
    - "customer_id"
    - "enabled"
    - "expires_date"
    - "issue_number"
    - "name_on_card"
    - "networks"
    - "on_hot_list"
    - "pin_reset"
    - "posted"
    - "replacement"
    - "serial_number"
    - "technology"
    - "valid_from_date"
    properties:
      allows:
        type: "array"
        items:
          type: "string"
      expires_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      networks:
        type: "array"
        items:
          type: "string"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      issue_number:
        type: "string"
        example: "1"
      replacement:
        $ref: "#/definitions/ReplacementJSON"
      enabled:
        type: "boolean"
        example: true
      collected:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_number:
        type: "string"
        example: "364435172576215"
      technology:
        type: "string"
        example: "technologyString1"
      cancelled:
        type: "boolean"
        example: true
      bank_id:
        type: "string"
        example: "gh.29.uk"
      card_id:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      pin_reset:
        type: "array"
        items:
          $ref: "#/definitions/PinResetJSON"
      serial_number:
        type: "string"
        example: "1324234"
      account:
        $ref: "#/definitions/AccountJSON"
      valid_from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      name_on_card:
        type: "string"
        example: "SusanSmith"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_type:
        type: "string"
        example: "Credit"
      on_hot_list:
        type: "boolean"
        example: true
    example:
      allows:
      - "allows"
      - "allows"
      card_number: "364435172576215"
      expires_date: "1100-01-01T00:00:00Z"
      collected: "1100-01-01T00:00:00Z"
      serial_number: "1324234"
      technology: "technologyString1"
      networks:
      - "networks"
      - "networks"
      card_type: "Credit"
      enabled: true
      card_id: "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
      pin_reset:
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      valid_from_date: "1100-01-01T00:00:00Z"
      posted: "1100-01-01T00:00:00Z"
      issue_number: "1"
      bank_id: "gh.29.uk"
      cancelled: true
      on_hot_list: true
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      replacement:
        requested_date: "1100-01-01T00:00:00Z"
        reason_requested: "RENEW"
      account:
        views_available:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        bank_id: "gh.29.uk"
        id: "123"
        label: "OBP"
      name_on_card: "SusanSmith"
  AccountsMinimalJson400:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/AccountMinimalJson400"
    example:
      accounts:
      - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
        view_id: "owner"
      - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
        view_id: "owner"
  PostKycCheckJSON:
    required:
    - "comments"
    - "customer_number"
    - "date"
    - "how"
    - "satisfied"
    - "staff_name"
    - "staff_user_id"
    properties:
      customer_number:
        type: "string"
        example: "5987953"
      how:
        type: "string"
        example: "online_meeting"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      satisfied:
        type: "boolean"
        example: true
      staff_user_id:
        type: "string"
        example: "67876"
      staff_name:
        type: "string"
        example: "Simon"
      comments:
        type: "string"
        example: "String"
  ModeratedCoreAccountJsonV400:
    required:
    - "account_routings"
    - "balance"
    - "bank_id"
    - "id"
    - "label"
    - "number"
    - "product_code"
    - "views_basic"
    properties:
      number:
        type: "string"
        example: "546387432"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      views_basic:
        type: "array"
        items:
          type: "string"
      product_code:
        type: "string"
        example: "AC"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      number: "546387432"
      balance:
        amount: "0"
        currency: "EUR"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      bank_id: "gh.29.uk"
      label: "My Account"
      id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      views_basic:
      - "views_basic"
      - "views_basic"
      product_code: "AC"
  DynamicEndpointHostJson400:
    required:
    - "host"
    properties:
      host:
        type: "string"
        example: "dynamic_entity"
    example:
      host: "dynamic_entity"
  PutUpdateCustomerEmailJsonV310:
    required:
    - "email"
    properties:
      email:
        type: "string"
        example: "marko@tesobe.com"
  AtmNotesJsonV400:
    required:
    - "notes"
    properties:
      notes:
        type: "array"
        items:
          type: "string"
  ConsentsJsonV400:
    required:
    - "consents"
    properties:
      consents:
        type: "array"
        items:
          $ref: "#/definitions/ConsentJsonV400"
    example:
      consents:
      - jwt: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
        api_version: "v1.3"
        api_standard: "Berlin Group"
        consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
        status: "INITIATED"
      - jwt: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
        api_version: "v1.3"
        api_standard: "Berlin Group"
        consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
        status: "INITIATED"
  ProductAttributeJsonV400:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "2012-04-23"
      is_active:
        type: "boolean"
        example: true
  PostCounterpartyBespokeJson:
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        example: "englishName"
      value:
        type: "string"
        example: "english Name"
    example:
      value: "english Name"
      key: "englishName"
  ConsentRequestResponseJson:
    required:
    - "consent_request_id"
    - "consumer_id"
    - "payload"
    properties:
      consent_request_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      payload:
        $ref: "#/definitions/ConsentRequestResponseJson_payload"
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
    example:
      consent_request_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      payload:
        time_to_live: 3600
        valid_from: "2022-06-14T12:42:00Z"
        phone_number: "+44 07972 444 876"
        everything: false
        account_access:
        - view_id: "owner"
          account_routing:
            address: "4930396"
            scheme: "AccountNumber"
        - view_id: "owner"
          account_routing:
            address: "4930396"
            scheme: "AccountNumber"
  AddressJsonV300:
    required:
    - "city"
    - "country_code"
    - "county"
    - "line_1"
    - "line_2"
    - "line_3"
    - "postcode"
    - "state"
    properties:
      city:
        type: "string"
        example: "Berlin"
      line_2:
        type: "string"
        example: "The Place"
      state:
        type: "string"
        example: "Brandenburg"
      postcode:
        type: "string"
        example: "13359"
      county:
        type: "string"
        example: ""
      country_code:
        type: "string"
        example: "DE"
      line_3:
        type: "string"
        example: "The Hill"
      line_1:
        type: "string"
        example: "No 1 the Road"
    example:
      line_1: "No 1 the Road"
      line_2: "The Place"
      country_code: "DE"
      city: "Berlin"
      postcode: "13359"
      county: ""
      state: "Brandenburg"
      line_3: "The Hill"
  ProductCollectionJsonTreeV310:
    required:
    - "collection_code"
    - "products"
    properties:
      collection_code:
        type: "string"
        example: "A"
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductJsonV310"
    example:
      collection_code: "A"
      products:
      - code: "1234BW"
        bank_id: "gh.29.uk"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        product_attributes:
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        name: "product name"
        parent_product_code: "parent"
        description: "Description"
        super_family: "super family"
        details: "Details"
        category: "category"
        family: "family"
        more_info_url: "www.example.com/prod1/more-info.html"
      - code: "1234BW"
        bank_id: "gh.29.uk"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        product_attributes:
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - name: "OVERDRAFT_START_DATE"
          product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        name: "product name"
        parent_product_code: "parent"
        description: "Description"
        super_family: "super family"
        details: "Details"
        category: "category"
        family: "family"
        more_info_url: "www.example.com/prod1/more-info.html"
  ScopesJSON:
    required:
    - "require_scopes_for_all_roles"
    - "require_scopes_for_listed_roles"
    properties:
      require_scopes_for_all_roles:
        type: "boolean"
        example: true
      require_scopes_for_listed_roles:
        type: "array"
        items:
          type: "string"
    example:
      require_scopes_for_all_roles: true
      require_scopes_for_listed_roles:
      - "require_scopes_for_listed_roles"
      - "require_scopes_for_listed_roles"
  ResourceDocFragment:
    required:
    - "request_url"
    - "request_verb"
    properties:
      request_verb:
        type: "string"
        example: "POST"
      request_url:
        type: "string"
        example: "/my_user/MY_USER_ID"
      example_request_body:
        $ref: "#/definitions/JsonDynamicResourceDoc_example_request_body"
      success_response_body:
        $ref: "#/definitions/JsonDynamicResourceDoc_success_response_body"
  UserWithAttributesResponseJson:
    required:
    - "email"
    - "provider"
    - "provider_id"
    - "user_attributes"
    - "user_id"
    - "username"
    properties:
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      email:
        type: "string"
        example: "felixsmith@example.com"
      username:
        type: "string"
        example: "felixsmith"
      provider_id:
        type: "string"
        example: "Chris"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      user_attributes:
        type: "array"
        items:
          $ref: "#/definitions/UserAttributeResponseJsonV400"
    example:
      provider: "http://127.0.0.1:8080"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      provider_id: "Chris"
      user_attributes:
      - insert_date: "2024-02-05T14:15:53Z"
        user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        name: "BATTERY_LEVEL"
        type: "STRING"
        value: "90"
      - insert_date: "2024-02-05T14:15:53Z"
        user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        name: "BATTERY_LEVEL"
        type: "STRING"
        value: "90"
      email: "felixsmith@example.com"
      username: "felixsmith"
  ImplementedByJson:
    required:
    - "function"
    - "version"
    properties:
      version:
        type: "string"
        example: "1_4_0"
      function:
        type: "string"
        example: "getBranches"
    example:
      function: "getBranches"
      version: "1_4_0"
  OtherAccountsJsonV300:
    required:
    - "other_accounts"
    properties:
      other_accounts:
        type: "array"
        items:
          $ref: "#/definitions/OtherAccountJsonV300"
    example:
      other_accounts:
      - metadata:
          open_corporates_URL: "www.openbankproject.com"
          private_alias: "NONE"
          image_URL: "www.openbankproject.com"
          corporate_location:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
          more_info: "www.openbankproject.com"
          public_alias: "NONE"
          URL: "www.openbankproject.com"
          physical_location:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        holder:
          is_alias: true
          name: "OBP"
        bank_routing:
          address: ""
          scheme: "scheme value"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      - metadata:
          open_corporates_URL: "www.openbankproject.com"
          private_alias: "NONE"
          image_URL: "www.openbankproject.com"
          corporate_location:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
          more_info: "www.openbankproject.com"
          public_alias: "NONE"
          URL: "www.openbankproject.com"
          physical_location:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        holder:
          is_alias: true
          name: "OBP"
        bank_routing:
          address: ""
          scheme: "scheme value"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  PutUpdateCustomerDataJsonV310:
    required:
    - "dependants"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "relationship_status"
    properties:
      highest_education_attained:
        type: "string"
        example: "Master"
      employment_status:
        type: "string"
        example: "worker"
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
  ViewBasicV300:
    required:
    - "description"
    - "id"
    - "is_public"
    - "short_name"
    properties:
      id:
        type: "string"
        example: "owner"
      short_name:
        type: "string"
        example: "Owner"
      description:
        type: "string"
        example: "This view is for the owner for the account."
      is_public:
        type: "boolean"
        example: false
    example:
      is_public: false
      description: "This view is for the owner for the account."
      short_name: "Owner"
      id: "owner"
  APIInfoJson400:
    required:
    - "connector"
    - "energy_source"
    - "git_commit"
    - "hosted_at"
    - "hosted_by"
    - "hostname"
    - "local_identity_provider"
    - "resource_docs_requires_role"
    - "version"
    - "version_status"
    properties:
      local_identity_provider:
        type: "string"
        example: "String"
      resource_docs_requires_role:
        type: "boolean"
        example: false
      hostname:
        type: "string"
        example: "String"
      version_status:
        type: "string"
        example: "String"
      version:
        type: "string"
        example: "String"
      hosted_at:
        $ref: "#/definitions/HostedAt400"
      connector:
        type: "string"
        example: "String"
      energy_source:
        $ref: "#/definitions/EnergySource400"
      hosted_by:
        $ref: "#/definitions/HostedBy400"
      git_commit:
        type: "string"
        example: "String"
    example:
      git_commit: "String"
      hostname: "String"
      hosted_by:
        phone: "String"
        organisation_website: "String"
        organisation: "String"
        email: "String"
      connector: "String"
      resource_docs_requires_role: false
      version_status: "String"
      hosted_at:
        organisation_website: "https://aws.amazon.com/"
        organisation: "Amazon"
      local_identity_provider: "String"
      version: "String"
      energy_source:
        organisation_website: "https://www.stromio.de/"
        organisation: "Stromio"
  TransactionAttributesResponseJson:
    required:
    - "transaction_attributes"
    properties:
      transaction_attributes:
        type: "array"
        items:
          $ref: "#/definitions/TransactionAttributeResponseJson"
    example:
      transaction_attributes:
      - name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
        transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "HOUSE_RENT"
        type: "DATE_WITH_DAY"
        value: "123456789"
        transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  OAuth2ServerJWKURIJson:
    required:
    - "jwks_uri"
    properties:
      jwks_uri:
        type: "string"
        example: "https://www.googleapis.com/oauth2/v3/certs"
    example:
      jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
  AtmSupportedLanguagesJson:
    required:
    - "atm_id"
    - "supported_languages"
    properties:
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      supported_languages:
        type: "array"
        items:
          type: "string"
    example:
      supported_languages:
      - "supported_languages"
      - "supported_languages"
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
  ConsentJsonV310:
    required:
    - "consent_id"
    - "jwt"
    - "status"
    properties:
      consent_id:
        type: "string"
        example: "9d429899-24f5-42c8-8565-943ffa6a7945"
      jwt:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      status:
        type: "string"
        example: "INITIATED"
    example:
      jwt: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
      status: "INITIATED"
  AccountApplicationUpdateStatusJson:
    required:
    - "status"
    properties:
      status:
        type: "string"
        example: "ACCEPTED"
  ConnectorMetricJson:
    required:
    - "connector_name"
    - "correlation_id"
    - "date"
    - "duration"
    - "function_name"
    properties:
      connector_name:
        type: "string"
        example: "mapper"
      duration:
        type: "integer"
        format: "int64"
        example: 1000
      function_name:
        type: "string"
        example: "getBanks"
      correlation_id:
        type: "string"
        example: "12345"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      duration: 1000
      date: "1100-01-01T00:00:00Z"
      function_name: "getBanks"
      correlation_id: "12345"
      connector_name: "mapper"
  BankAttributeBankResponseJsonV400:
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        example: "ACCOUNT_MANAGEMENT_FEE"
      value:
        type: "string"
        example: "5987953"
    example:
      name: "ACCOUNT_MANAGEMENT_FEE"
      value: "5987953"
  GlossaryItemJsonV300:
    required:
    - "description"
    - "title"
    properties:
      title:
        type: "string"
        example: "Dr."
      description:
        $ref: "#/definitions/GlossaryDescriptionJsonV300"
    example:
      description:
        markdown: "String"
        html: "String"
      title: "Dr."
  CustomerMessageJson:
    required:
    - "date"
    - "from_department"
    - "from_person"
    - "id"
    - "message"
    properties:
      from_person:
        type: "string"
        example: "String"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      from_department:
        type: "string"
        example: "String"
      message:
        type: "string"
        example: "String"
    example:
      date: "1100-01-01T00:00:00Z"
      from_department: "String"
      from_person: "String"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      message: "String"
  MeetingKeysJson:
    required:
    - "customer_token"
    - "session_id"
    - "staff_token"
    properties:
      session_id:
        type: "string"
        example: "String"
      staff_token:
        type: "string"
        example: "String"
      customer_token:
        type: "string"
        example: "String"
    example:
      staff_token: "String"
      customer_token: "String"
      session_id: "String"
  ToAccountTransferToAtm:
    required:
    - "date_of_birth"
    - "kyc_document"
    - "legal_name"
    - "mobile_phone_number"
    properties:
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      date_of_birth:
        type: "string"
        example: "20181230"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      kyc_document:
        $ref: "#/definitions/ToAccountTransferToAtmKycDocument"
    example:
      kyc_document:
        number: "String"
        type: "String"
      date_of_birth: "20181230"
      legal_name: "Eveline Tripman"
      mobile_phone_number: "+44 07972 444 876"
  PostConsentEmailJsonV310:
    required:
    - "email"
    - "entitlements"
    - "everything"
    - "views"
    properties:
      time_to_live:
        type: "integer"
        format: "int64"
        example: 3600
      email:
        type: "string"
        example: "felixsmith@example.com"
      everything:
        type: "boolean"
        example: false
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      valid_from:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      views:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentViewJsonV310"
      entitlements:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentEntitlementJsonV310"
  UrlJSON:
    required:
    - "URL"
    properties:
      URL:
        type: "string"
        example: "String"
  TransactionCommentJSON:
    required:
    - "date"
    - "id"
    - "user"
    - "value"
    properties:
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      value:
        type: "string"
        example: "OBP"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user:
        $ref: "#/definitions/UserJSONV121"
    example:
      date: "1100-01-01T00:00:00Z"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      value: "OBP"
      user:
        provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
  PostAccountTagJSON:
    required:
    - "value"
    properties:
      value:
        type: "string"
        example: "String"
  TransactionDetailsJSON:
    required:
    - "completed"
    - "description"
    - "new_balance"
    - "posted"
    - "type"
    - "value"
    properties:
      new_balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      description:
        type: "string"
        example: "this is for family"
      completed:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      type:
        type: "string"
        example: "AC"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      description: "this is for family"
      new_balance:
        amount: "0"
        currency: "EUR"
      completed: "1100-01-01T00:00:00Z"
      type: "AC"
      value:
        amount: "0"
        currency: "EUR"
      posted: "1100-01-01T00:00:00Z"
  TransactionRequestBodySEPAJsonV400:
    required:
    - "charge_policy"
    - "description"
    - "to"
    - "value"
    properties:
      description:
        type: "string"
        example: "This is a SEPA Transaction Request"
      future_date:
        type: "string"
        example: "20200127"
      to:
        $ref: "#/definitions/IbanJson"
      charge_policy:
        type: "string"
        example: "SHARED"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      reasons:
        type: "array"
        items:
          $ref: "#/definitions/TransactionRequestReasonJsonV400"
  HostedBy400:
    required:
    - "email"
    - "organisation"
    - "organisation_website"
    - "phone"
    properties:
      organisation:
        type: "string"
        example: "String"
      email:
        type: "string"
        example: "String"
      phone:
        type: "string"
        example: "String"
      organisation_website:
        type: "string"
        example: "String"
    example:
      phone: "String"
      organisation_website: "String"
      organisation: "String"
      email: "String"
  CallLimitJson:
    required:
    - "per_day_call_limit"
    - "per_hour_call_limit"
    - "per_minute_call_limit"
    - "per_month_call_limit"
    - "per_second_call_limit"
    - "per_week_call_limit"
    properties:
      current_state:
        $ref: "#/definitions/RedisCallLimitJson"
      per_month_call_limit:
        type: "string"
        example: "-1"
      per_week_call_limit:
        type: "string"
        example: "-1"
      per_hour_call_limit:
        type: "string"
        example: "-1"
      per_second_call_limit:
        type: "string"
        example: "-1"
      per_minute_call_limit:
        type: "string"
        example: "-1"
      per_day_call_limit:
        type: "string"
        example: "-1"
    example:
      per_week_call_limit: "-1"
      per_month_call_limit: "-1"
      per_day_call_limit: "-1"
      current_state:
        per_month:
          calls_made: -1
          reset_in_seconds: -1
        per_second:
          calls_made: -1
          reset_in_seconds: -1
        per_minute:
          calls_made: -1
          reset_in_seconds: -1
        per_week:
          calls_made: -1
          reset_in_seconds: -1
        per_hour:
          calls_made: -1
          reset_in_seconds: -1
        per_day:
          calls_made: -1
          reset_in_seconds: -1
      per_second_call_limit: "-1"
      per_minute_call_limit: "-1"
      per_hour_call_limit: "-1"
  ConsumerRedirectUrlJSON:
    required:
    - "redirect_url"
    properties:
      redirect_url:
        type: "string"
        example: "http://localhost:8888"
  ProductAttributeResponseJsonV400:
    required:
    - "bank_id"
    - "name"
    - "product_attribute_id"
    - "product_code"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      is_active:
        type: "boolean"
        example: true
      product_attribute_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_code:
        type: "string"
        example: "1234BW"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "2012-04-23"
    example:
      is_active: true
      bank_id: "gh.29.uk"
      name: "OVERDRAFT_START_DATE"
      product_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      product_code: "1234BW"
      type: "DATE_WITH_DAY"
      value: "2012-04-23"
  BadLoginStatusJson:
    required:
    - "bad_attempts_since_last_success_or_reset"
    - "last_failure_date"
    - "username"
    properties:
      username:
        type: "string"
        example: "felixsmith"
      bad_attempts_since_last_success_or_reset:
        type: "integer"
        format: "int32"
        example: 0
      last_failure_date:
        type: "string"
        format: "date"
        example: "1100-01-01T01:01:01Z"
    example:
      bad_attempts_since_last_success_or_reset: 0
      last_failure_date: "1100-01-01T01:01:01Z"
      username: "felixsmith"
  PutUpdateCustomerCreditLimitJsonV310:
    required:
    - "credit_limit"
    properties:
      credit_limit:
        $ref: "#/definitions/AmountOfMoney"
  CheckFundsAvailableJson:
    required:
    - "answer"
    - "available_funds_request_id"
    - "date"
    properties:
      answer:
        type: "string"
        example: "yes"
      date:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      available_funds_request_id:
        type: "string"
        example: "c4ykz59svsr9b7fmdxk8ezs7"
    example:
      date: "2024-02-05T14:15:53Z"
      answer: "yes"
      available_funds_request_id: "c4ykz59svsr9b7fmdxk8ezs7"
  SocialMediaJSON:
    required:
    - "customer_number"
    - "date_activated"
    - "date_added"
    - "handle"
    - "type"
    properties:
      date_activated:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      customer_number:
        type: "string"
        example: "5987953"
      date_added:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      type:
        type: "string"
        example: "PlaceholderString"
      handle:
        type: "string"
        example: "PlaceholderString"
    example:
      date_activated: "1100-01-01T00:00:00Z"
      date_added: "1100-01-01T00:00:00Z"
      customer_number: "5987953"
      handle: "PlaceholderString"
      type: "PlaceholderString"
  ChallengeJsonV140:
    required:
    - "allowed_attempts"
    - "challenge_type"
    - "id"
    properties:
      id:
        type: "string"
        example: "be1a183d-b301-4b83-b855-5eeffdd3526f"
      allowed_attempts:
        type: "integer"
        format: "int32"
        example: 3
      challenge_type:
        type: "string"
        example: "SANDBOX_TAN"
    example:
      challenge_type: "SANDBOX_TAN"
      allowed_attempts: 3
      id: "be1a183d-b301-4b83-b855-5eeffdd3526f"
  TaxResidenceJsonV310:
    required:
    - "tax_residence"
    properties:
      tax_residence:
        type: "array"
        items:
          $ref: "#/definitions/TaxResidenceV310"
    example:
      tax_residence:
      - tax_residence_id: "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        tax_number: "Enter some number"
        domain: "Enter some domain"
      - tax_residence_id: "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        tax_number: "Enter some number"
        domain: "Enter some domain"
  EntitlementJSONs:
    required:
    - "list"
    properties:
      list:
        type: "array"
        items:
          $ref: "#/definitions/EntitlementJSON"
    example:
      list:
      - role_name: "CanQueryOtherUser"
        entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
        bank_id: "gh.29.uk"
      - role_name: "CanQueryOtherUser"
        entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
        bank_id: "gh.29.uk"
  UserJSONV121:
    required:
    - "display_name"
    - "id"
    - "provider"
    properties:
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      display_name:
        type: "string"
        example: "OBP"
    example:
      provider: "http://127.0.0.1:8080"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      display_name: "OBP"
  UserAgreementJson:
    required:
    - "text"
    - "type"
    properties:
      type:
        type: "string"
        example: ""
      text:
        type: "string"
        example: ""
    example:
      text: ""
      type: ""
  CustomerOverviewFlatJsonV500:
    required:
    - "accounts"
    - "bank_id"
    - "branch_id"
    - "customer_attributes"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "email"
    - "legal_name"
    - "mobile_phone_number"
    - "name_suffix"
    - "title"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name_suffix:
        type: "string"
        example: "Sr"
      email:
        type: "string"
        example: "felixsmith@example.com"
      branch_id:
        type: "string"
        example: "DERBY6"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      customer_attributes:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAttributeResponseJsonV300"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      title:
        type: "string"
        example: "Dr."
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/AccountResponseJson500"
    example:
      name_suffix: "Sr"
      branch_id: "DERBY6"
      customer_number: "5987953"
      bank_id: "gh.29.uk"
      date_of_birth: "1100-01-01T00:00:00Z"
      customer_attributes:
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - name: "SPECIAL_TAX_NUMBER"
        type: "STRING"
        value: "123456789"
        customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      legal_name: "Eveline Tripman"
      accounts:
      - account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        balance:
          amount: "0"
          currency: "EUR"
        branch_id: "DERBY6"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        label: "My Account"
        contracts:
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        product_code: "787LOW"
      - account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          contract_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        balance:
          amount: "0"
          currency: "EUR"
        branch_id: "DERBY6"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        label: "My Account"
        contracts:
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        - form_of_payment: "form_of_payment"
          issuance_amount: "issuance_amount"
          maturity_date: "maturity_date"
          is_substituted: "is_substituted"
          product_code: "787LOW"
          cancellation_date: "cancellation_date"
          interest_amount: "interest_amount"
          branch_code: "branch_code"
          instrument_status_code: "instrument_status_code"
          renewal_date: "renewal_date"
          contract_code: "LKJL98769F"
          instrument_status_definition: "instrument_status_definition"
          interest_rate: "interest_rate"
          term: "term"
          product_description: "product_description"
          opening_date: "opening_date"
          payment_method: "cache"
        product_code: "787LOW"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      title: "Dr."
      email: "felixsmith@example.com"
      mobile_phone_number: "+44 07972 444 876"
  CrmEventsJson:
    required:
    - "crm_events"
    properties:
      crm_events:
        type: "array"
        items:
          $ref: "#/definitions/CrmEventJson"
    example:
      crm_events:
      - result: "String"
        actual_date: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        channel: "String"
        customer_name: "String"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        detail: "String"
        scheduled_date: "1100-01-01T00:00:00Z"
        category: "String"
      - result: "String"
        actual_date: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        channel: "String"
        customer_name: "String"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        detail: "String"
        scheduled_date: "1100-01-01T00:00:00Z"
        category: "String"
  CustomerMessagesJson:
    required:
    - "messages"
    properties:
      messages:
        type: "array"
        items:
          $ref: "#/definitions/CustomerMessageJson"
    example:
      messages:
      - date: "1100-01-01T00:00:00Z"
        from_department: "String"
        from_person: "String"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        message: "String"
      - date: "1100-01-01T00:00:00Z"
        from_department: "String"
        from_person: "String"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        message: "String"
  BankAccountRoutingJson:
    required:
    - "account_routing"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_routing:
        $ref: "#/definitions/AccountRoutingJsonV121"
  CreateScopeJson:
    required:
    - "bank_id"
    - "role_name"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      role_name:
        type: "string"
        example: "CanGetEntitlementsForAnyUserAtOneBank"
  PutEnabledJSON:
    required:
    - "enabled"
    properties:
      enabled:
        type: "boolean"
        example: false
    example:
      enabled: false
  AccountBasicV310:
    required:
    - "bank_id"
    - "id"
    - "label"
    - "views_available"
    properties:
      id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      label:
        type: "string"
        example: "My Account"
      views_available:
        type: "array"
        items:
          $ref: "#/definitions/ViewBasic"
      bank_id:
        type: "string"
        example: "gh.29.uk"
    example:
      views_available:
      - name: "Owner"
        description: "This view is for the owner for the account."
        id: "owner"
      - name: "Owner"
        description: "This view is for the owner for the account."
        id: "owner"
      bank_id: "gh.29.uk"
      id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      label: "My Account"
  PostCounterpartyJson400:
    required:
    - "bespoke"
    - "currency"
    - "description"
    - "is_beneficiary"
    - "name"
    - "other_account_routing_address"
    - "other_account_routing_scheme"
    - "other_account_secondary_routing_address"
    - "other_account_secondary_routing_scheme"
    - "other_bank_routing_address"
    - "other_bank_routing_scheme"
    - "other_branch_routing_address"
    - "other_branch_routing_scheme"
    properties:
      other_account_routing_address:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_routing_scheme:
        type: "string"
        example: "OBP"
      name:
        type: "string"
        example: "CounterpartyName"
      other_account_secondary_routing_address:
        type: "string"
        example: "DE89370400440532013000"
      is_beneficiary:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "My landlord"
      other_branch_routing_address:
        type: "string"
        example: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
      bespoke:
        type: "array"
        items:
          $ref: "#/definitions/PostCounterpartyBespokeJson"
      other_bank_routing_scheme:
        type: "string"
        example: "OBP"
      other_branch_routing_scheme:
        type: "string"
        example: "OBP"
      currency:
        type: "string"
        example: "EUR"
      other_bank_routing_address:
        type: "string"
        example: "gh.29.uk"
      other_account_secondary_routing_scheme:
        type: "string"
        example: "IBAN"
  ElasticSearchQuery:
    required:
    - "match_all"
    properties:
      match_all:
        $ref: "#/definitions/EmptyElasticSearch"
  SystemAccountNotificationWebhookJson:
    required:
    - "created_by_user_id"
    - "http_method"
    - "http_protocol"
    - "trigger_name"
    - "url"
    - "webhook_id"
    properties:
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      url:
        type: "string"
        example: "https://localhost.openbankproject.com"
      trigger_name:
        type: "string"
        example: "OnCreateTransaction"
      http_protocol:
        type: "string"
        example: "HTTP/1.1"
      http_method:
        type: "string"
        example: "POST"
      webhook_id:
        type: "string"
        example: "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
    example:
      trigger_name: "OnCreateTransaction"
      http_method: "POST"
      http_protocol: "HTTP/1.1"
      webhook_id: "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      url: "https://localhost.openbankproject.com"
  HostedAt400:
    required:
    - "organisation"
    - "organisation_website"
    properties:
      organisation:
        type: "string"
        example: "Amazon"
      organisation_website:
        type: "string"
        example: "https://aws.amazon.com/"
    example:
      organisation_website: "https://aws.amazon.com/"
      organisation: "Amazon"
  AccountsBalancesJsonV400:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/AccountBalanceJsonV400"
    example:
      accounts:
      - balances:
        - amount: "10"
          currency: "EUR"
          type: ""
        - amount: "10"
          currency: "EUR"
          type: ""
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        account_routings:
        - address: "123456"
          scheme: "accountNumber"
        - address: "123456"
          scheme: "accountNumber"
        bank_id: "gh.29.uk"
        label: "My Account"
      - balances:
        - amount: "10"
          currency: "EUR"
          type: ""
        - amount: "10"
          currency: "EUR"
          type: ""
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        account_routings:
        - address: "123456"
          scheme: "accountNumber"
        - address: "123456"
          scheme: "accountNumber"
        bank_id: "gh.29.uk"
        label: "My Account"
  CustomerMessageJsonV400:
    required:
    - "date"
    - "from_department"
    - "from_person"
    - "id"
    - "message"
    - "transport"
    properties:
      from_person:
        type: "string"
        example: "Tom"
      transport:
        type: "string"
        example: "SMS"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      from_department:
        type: "string"
        example: "Open Bank"
      message:
        type: "string"
        example: "123456"
    example:
      date: "1100-01-01T00:00:00Z"
      from_department: "Open Bank"
      from_person: "Tom"
      transport: "SMS"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      message: "123456"
  LocationJsonV210:
    required:
    - "date"
    - "latitude"
    - "longitude"
    - "user"
    properties:
      latitude:
        type: "number"
        format: "double"
        example: 11.45
      longitude:
        type: "number"
        format: "double"
        example: 11.45
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user:
        $ref: "#/definitions/UserJSONV210"
    example:
      date: "1100-01-01T00:00:00Z"
      latitude: 11.45
      user:
        provider: "http://127.0.0.1:8080"
        id: "123"
        username: "felixsmith"
      longitude: 11.45
  CoreTransactionsJsonV300:
    required:
    - "transactions"
    properties:
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/CoreTransactionJsonV300"
    example:
      transactions:
      - other_account:
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holder:
            is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        this_account:
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holders:
          - is_alias: true
            name: "OBP"
          - is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "String"
        transaction_attributes:
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        details:
          description: "OBP"
          new_balance:
            amount: "0"
            currency: "EUR"
          completed: "1100-01-01T00:00:00Z"
          type: "AC"
          value:
            amount: "0"
            currency: "EUR"
          posted: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      - other_account:
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holder:
            is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        this_account:
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holders:
          - is_alias: true
            name: "OBP"
          - is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "String"
        transaction_attributes:
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        details:
          description: "OBP"
          new_balance:
            amount: "0"
            currency: "EUR"
          completed: "1100-01-01T00:00:00Z"
          type: "AC"
          value:
            amount: "0"
            currency: "EUR"
          posted: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
  BankAttributeResponseJsonV400:
    required:
    - "bank_attribute_id"
    - "bank_id"
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      is_active:
        type: "boolean"
        example: true
      bank_attribute_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "2012-04-23"
    example:
      is_active: true
      bank_id: "gh.29.uk"
      name: "OVERDRAFT_START_DATE"
      type: "DATE_WITH_DAY"
      value: "2012-04-23"
      bank_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
  CreateMessageJsonV400:
    required:
    - "from_department"
    - "from_person"
    - "message"
    - "transport"
    properties:
      message:
        type: "string"
        example: "123456"
      transport:
        type: "string"
        example: "SMS"
      from_department:
        type: "string"
        example: "Open Bank"
      from_person:
        type: "string"
        example: "Tom"
  AccountApplicationResponseJson:
    required:
    - "account_application_id"
    - "customer"
    - "date_of_application"
    - "product_code"
    - "status"
    - "user"
    properties:
      date_of_application:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      account_application_id:
        type: "string"
        example: "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
      product_code:
        type: "string"
        example: "1234BW"
      status:
        type: "string"
        example: "REQUESTED"
      customer:
        $ref: "#/definitions/CustomerJsonV310"
      user:
        $ref: "#/definitions/ResourceUserJSON"
    example:
      account_application_id: "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
      date_of_application: "1100-01-01T00:00:00Z"
      product_code: "1234BW"
      user:
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        email: "felixsmith@example.com"
        username: "felixsmith"
      status: "REQUESTED"
      customer:
        kyc_status: true
        highest_education_attained: "Master"
        name_suffix: "Sr"
        customer_number: "5987953"
        date_of_birth: "1100-01-01T00:00:00Z"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        title: "Dr."
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "2000-01-23"
        - "2000-01-23"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        branch_id: "DERBY6"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
  TransactionRequestTransferToAtm:
    required:
    - "description"
    - "from"
    - "message"
    - "to"
    - "value"
    properties:
      description:
        type: "string"
        example: "String"
      to:
        $ref: "#/definitions/ToAccountTransferToAtm"
      from:
        $ref: "#/definitions/FromAccountTransfer"
      message:
        type: "string"
        example: "String"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
    example:
      description: "String"
      from:
        nickname: "String"
        mobile_phone_number: "+44 07972 444 876"
      to:
        kyc_document:
          number: "String"
          type: "String"
        date_of_birth: "20181230"
        legal_name: "Eveline Tripman"
        mobile_phone_number: "+44 07972 444 876"
      message: "String"
      value:
        amount: "0"
        currency: "EUR"
  KycCheckJSON:
    required:
    - "bank_id"
    - "comments"
    - "customer_id"
    - "customer_number"
    - "date"
    - "how"
    - "id"
    - "satisfied"
    - "staff_name"
    - "staff_user_id"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      customer_number:
        type: "string"
        example: "5987953"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "PlaceholderString"
      how:
        type: "string"
        example: "PlaceholderString"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      satisfied:
        type: "boolean"
        example: true
      staff_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      staff_name:
        type: "string"
        example: "PlaceholderString"
      comments:
        type: "string"
        example: "PlaceholderString"
    example:
      date: "1100-01-01T00:00:00Z"
      staff_name: "PlaceholderString"
      how: "PlaceholderString"
      comments: "PlaceholderString"
      staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      customer_number: "5987953"
      bank_id: "gh.29.uk"
      satisfied: true
      id: "PlaceholderString"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  CustomerAttributeJsonV400:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "SPECIAL_TAX_NUMBER"
      type:
        type: "string"
        example: "STRING"
      value:
        type: "string"
        example: "123456789"
  PostUserAuthContextJson:
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        example: "CUSTOMER_NUMBER"
      value:
        type: "string"
        example: "78987432"
  SepaCreditTransfers:
    required:
    - "creditorAccount"
    - "creditorName"
    - "debtorAccount"
    - "instructedAmount"
    properties:
      debtorAccount:
        $ref: "#/definitions/PaymentAccount"
      instructedAmount:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      creditorAccount:
        $ref: "#/definitions/PaymentAccount"
      creditorName:
        type: "string"
        example: "John Miles"
    example:
      debtorAccount:
        iban: "GB33BUKB20201555555555"
      creditorName: "John Miles"
      creditorAccount:
        iban: "GB33BUKB20201555555555"
      instructedAmount:
        amount: "0"
        currency: "EUR"
  ToAccountTransferToAccount:
    required:
    - "account"
    - "bank_code"
    - "branch_number"
    - "name"
    properties:
      name:
        type: "string"
        example: "String"
      bank_code:
        type: "string"
        example: "String"
      branch_number:
        type: "string"
        example: "String"
      account:
        $ref: "#/definitions/ToAccountTransferToAccountAccount"
    example:
      bank_code: "String"
      branch_number: "String"
      name: "String"
      account:
        number: "String"
        iban: "String"
  ModeratedFirehoseAccountsJsonV400:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/ModeratedFirehoseAccountJsonV400"
    example:
      accounts:
      - number: ""
        account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        account_rules:
        - scheme: "OVERDRAFT"
          value: "10"
        - scheme: "OVERDRAFT"
          value: "10"
        balance:
          amount: "0"
          currency: "EUR"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "gh.29.uk"
        owners:
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        label: "My Account"
        id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        product_code: "1234BW"
      - number: ""
        account_attributes:
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
          product_instance_code: "LKJL98769F"
          name: "OVERDRAFT_START_DATE"
          product_code: "1234BW"
          type: "DATE_WITH_DAY"
          value: "2012-04-23"
        account_rules:
        - scheme: "OVERDRAFT"
          value: "10"
        - scheme: "OVERDRAFT"
          value: "10"
        balance:
          amount: "0"
          currency: "EUR"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "gh.29.uk"
        owners:
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        - provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        label: "My Account"
        id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        product_code: "1234BW"
  TransactionImageJSON:
    required:
    - "URL"
    - "date"
    - "id"
    - "label"
    - "user"
    properties:
      URL:
        type: "string"
        example: "www.openbankproject.com"
      label:
        type: "string"
        example: "NONE"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user:
        $ref: "#/definitions/UserJSONV121"
    example:
      date: "1100-01-01T00:00:00Z"
      label: "NONE"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      user:
        provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      URL: "www.openbankproject.com"
  CreateAccountRequestJsonV310:
    required:
    - "account_routings"
    - "balance"
    - "branch_id"
    - "label"
    - "product_code"
    - "user_id"
    properties:
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      product_code:
        type: "string"
        example: "1234BW"
  UserJSONV210:
    required:
    - "id"
    - "provider"
    - "username"
    properties:
      id:
        type: "string"
        example: "123"
      provider:
        type: "string"
        example: "http://127.0.0.1:8080"
      username:
        type: "string"
        example: "felixsmith"
    example:
      provider: "http://127.0.0.1:8080"
      id: "123"
      username: "felixsmith"
  CachedFunctionJSON:
    required:
    - "function_name"
    - "ttl_in_seconds"
    properties:
      function_name:
        type: "string"
        example: "getBanks"
      ttl_in_seconds:
        type: "integer"
        format: "int32"
        example: 5
    example:
      function_name: "getBanks"
      ttl_in_seconds: 5
  PostBankJson500:
    required:
    - "bank_code"
    properties:
      bank_routings:
        type: "array"
        items:
          $ref: "#/definitions/BankRoutingJsonV121"
      website:
        type: "string"
        example: "www.openbankproject.com"
      full_name:
        type: "string"
        example: "full name string"
      logo:
        type: "string"
        example: "logo url"
      id:
        type: "string"
        example: "gh.29.uk"
      bank_code:
        type: "string"
        example: "CGHZ"
  BankJson400:
    required:
    - "bank_routings"
    - "full_name"
    - "id"
    - "logo"
    - "short_name"
    - "website"
    properties:
      bank_routings:
        type: "array"
        items:
          $ref: "#/definitions/BankRoutingJsonV121"
      website:
        type: "string"
        example: "www.openbankproject.com"
      full_name:
        type: "string"
        example: "full_name"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/BankAttributeBankResponseJsonV400"
      logo:
        type: "string"
        example: "logo"
      id:
        type: "string"
        example: "gh.29.uk"
      short_name:
        type: "string"
        example: "short_name "
    example:
      website: "www.openbankproject.com"
      full_name: "full_name"
      bank_routings:
      - address: ""
        scheme: "scheme value"
      - address: ""
        scheme: "scheme value"
      logo: "logo"
      attributes:
      - name: "ACCOUNT_MANAGEMENT_FEE"
        value: "5987953"
      - name: "ACCOUNT_MANAGEMENT_FEE"
        value: "5987953"
      short_name: "short_name "
      id: "gh.29.uk"
  UpdateViewJsonV500:
    required:
    - "allowed_actions"
    - "description"
    - "hide_metadata_if_alias_used"
    - "is_public"
    - "metadata_view"
    - "which_alias_to_use"
    properties:
      can_grant_access_to_views:
        type: "array"
        items:
          type: "string"
      description:
        type: "string"
        example: "this is for family"
      is_public:
        type: "boolean"
        example: true
      hide_metadata_if_alias_used:
        type: "boolean"
        example: true
      can_revoke_access_to_views:
        type: "array"
        items:
          type: "string"
      which_alias_to_use:
        type: "string"
        example: "family"
      is_firehose:
        type: "boolean"
      metadata_view:
        type: "string"
        example: "owner"
      allowed_actions:
        type: "array"
        items:
          type: "string"
  ConsentInfosJsonV400:
    required:
    - "consents"
    properties:
      consents:
        type: "array"
        items:
          $ref: "#/definitions/ConsentInfoJsonV400"
    example:
      consents:
      - consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        last_action_date: "2020-01-27"
        api_version: "v1.3"
        created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        last_usage_date: "2021-04-08T09:12:27Z"
        api_standard: "Berlin Group"
        consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
        status: "INITIATED"
      - consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        last_action_date: "2020-01-27"
        api_version: "v1.3"
        created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        last_usage_date: "2021-04-08T09:12:27Z"
        api_standard: "Berlin Group"
        consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
        status: "INITIATED"
  UserIdJsonV400:
    required:
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
    example:
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
  CreateCustomerAccountLinkJson:
    required:
    - "account_id"
    - "bank_id"
    - "customer_id"
    - "relationship_type"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      relationship_type:
        type: "string"
        example: "Owner"
  ApiCollectionEndpointJson400:
    required:
    - "api_collection_endpoint_id"
    - "api_collection_id"
    - "operation_id"
    properties:
      api_collection_endpoint_id:
        type: "string"
        example: "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      api_collection_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      operation_id:
        type: "string"
        example: "OBPv4.0.0-getBanks"
    example:
      api_collection_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      api_collection_endpoint_id: "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      operation_id: "OBPv4.0.0-getBanks"
  PostUserInvitationJsonV400:
    required:
    - "company"
    - "country"
    - "email"
    - "first_name"
    - "last_name"
    - "purpose"
    properties:
      first_name:
        type: "string"
        example: "Tom"
      email:
        type: "string"
        example: "felixsmith@example.com"
      country:
        type: "string"
        example: "Germany"
      purpose:
        type: "string"
        example: "DEVELOPER"
      company:
        type: "string"
        example: "Tesobe GmbH"
      last_name:
        type: "string"
        example: "Smith"
  CreditCardOrderStatusResponseJson:
    required:
    - "cards"
    properties:
      cards:
        type: "array"
        items:
          $ref: "#/definitions/CardObjectJson"
    example:
      cards:
      - use_type: "3"
        card_type: "5"
        card_description: "good"
      - use_type: "3"
        card_type: "5"
        card_description: "good"
  MeetingPresentJson:
    required:
    - "customer_user_id"
    - "staff_user_id"
    properties:
      staff_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      customer_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
    example:
      staff_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      customer_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
  GlossaryItemsJsonV300:
    required:
    - "glossary_items"
    properties:
      glossary_items:
        type: "array"
        items:
          $ref: "#/definitions/GlossaryItemJsonV300"
    example:
      glossary_items:
      - description:
          markdown: "String"
          html: "String"
        title: "Dr."
      - description:
          markdown: "String"
          html: "String"
        title: "Dr."
  CreateUserCustomerLinkJson:
    required:
    - "customer_id"
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  BranchRoutingJsonV141:
    required:
    - "address"
    - "scheme"
    properties:
      scheme:
        type: "string"
        example: "BranchNumber"
      address:
        type: "string"
        example: "678"
    example:
      address: "678"
      scheme: "BranchNumber"
  CustomerAccountLinkJson:
    required:
    - "account_id"
    - "bank_id"
    - "customer_account_link_id"
    - "customer_id"
    - "relationship_type"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      customer_account_link_id:
        type: "string"
        example: "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      relationship_type:
        type: "string"
        example: "Owner"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      relationship_type: "Owner"
      bank_id: "gh.29.uk"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      customer_account_link_id: "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  ConfigurationJSON:
    required:
    - "akka"
    - "cache"
    - "elastic_search"
    - "scopes"
    properties:
      akka:
        $ref: "#/definitions/AkkaJSON"
      elastic_search:
        $ref: "#/definitions/ElasticSearchJSON"
      cache:
        type: "array"
        items:
          $ref: "#/definitions/CachedFunctionJSON"
      scopes:
        $ref: "#/definitions/ScopesJSON"
    example:
      cache:
      - function_name: "getBanks"
        ttl_in_seconds: 5
      - function_name: "getBanks"
        ttl_in_seconds: 5
      elastic_search:
        metrics:
        - property: "String"
          value: "Mapper"
        - property: "String"
          value: "Mapper"
        warehouse:
        - property: "String"
          value: "ElasticSearch"
        - property: "String"
          value: "ElasticSearch"
      scopes:
        require_scopes_for_all_roles: true
        require_scopes_for_listed_roles:
        - "require_scopes_for_listed_roles"
        - "require_scopes_for_listed_roles"
      akka:
        remote_data_secret_matched: true
        log_level: "Debug"
        ports:
        - property: "default"
          value: "8080"
        - property: "default"
          value: "8080"
  CreatePhysicalCardJsonV500:
    required:
    - "account_id"
    - "allows"
    - "brand"
    - "card_number"
    - "card_type"
    - "customer_id"
    - "enabled"
    - "expires_date"
    - "issue_number"
    - "name_on_card"
    - "networks"
    - "pin_reset"
    - "serial_number"
    - "technology"
    - "valid_from_date"
    properties:
      allows:
        type: "array"
        items:
          type: "string"
      expires_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      networks:
        type: "array"
        items:
          type: "string"
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      issue_number:
        type: "string"
        example: "1"
      replacement:
        $ref: "#/definitions/ReplacementJSON"
      enabled:
        type: "boolean"
        example: true
      collected:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      brand:
        type: "string"
        example: "Visa"
      card_number:
        type: "string"
        example: "364435172576215"
      technology:
        type: "string"
        example: "technology1"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      pin_reset:
        type: "array"
        items:
          $ref: "#/definitions/PinResetJSON"
      serial_number:
        type: "string"
        example: "1324234"
      valid_from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      name_on_card:
        type: "string"
        example: "SusanSmith"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      card_type:
        type: "string"
        example: "Credit"
  AggregateMetricJSON:
    required:
    - "average_response_time"
    - "count"
    - "maximum_response_time"
    - "minimum_response_time"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 7076
      average_response_time:
        type: "number"
        format: "double"
        example: 65.21
      minimum_response_time:
        type: "number"
        format: "double"
        example: 1.0
      maximum_response_time:
        type: "number"
        format: "double"
        example: 9039.0
    example:
      average_response_time: 65.21
      maximum_response_time: 9039.0
      count: 7076
      minimum_response_time: 1.0
  ModeratedAccountJSON400:
    required:
    - "account_attributes"
    - "account_routings"
    - "balance"
    - "bank_id"
    - "id"
    - "label"
    - "number"
    - "owners"
    - "product_code"
    - "tags"
    - "views_available"
    properties:
      number:
        type: "string"
        example: "123"
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson"
      views_available:
        type: "array"
        items:
          $ref: "#/definitions/ViewJSONV121"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/AccountTagJSON"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "NoneLabel"
      owners:
        type: "array"
        items:
          $ref: "#/definitions/UserJSONV121"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      product_code:
        type: "string"
        example: "1234BW"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "5995d6a2-01b3-423c-a173-5481df49bdaf"
    example:
      number: "123"
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        product_instance_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      balance:
        amount: "0"
        currency: "EUR"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      views_available:
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        can_see_comments: true
        can_see_transaction_description: true
        id: "123"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "None"
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        is_public: true
        can_see_transaction_balance: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      - can_see_bank_account_type: true
        can_see_tags: true
        can_see_other_account_iban: true
        can_delete_tag: true
        can_add_corporate_location: true
        can_see_images: true
        can_see_transaction_type: true
        can_see_other_account_kind: true
        can_edit_owner_comment: true
        can_add_physical_location: true
        can_see_bank_account_number: true
        can_see_corporate_location: true
        can_see_comments: true
        can_see_transaction_description: true
        id: "123"
        can_see_transaction_amount: true
        can_see_bank_account_bank_name: true
        can_add_url: true
        can_see_url: true
        can_see_public_alias: true
        can_see_other_account_number: true
        can_add_more_info: true
        can_delete_physical_location: true
        can_delete_where_tag: true
        can_add_comment: true
        can_see_more_info: true
        can_add_public_alias: true
        short_name: "short_name"
        can_see_bank_account_currency: true
        can_see_bank_account_swift_bic: true
        can_see_bank_account_balance: true
        can_see_open_corporates_url: true
        can_delete_comment: true
        can_see_other_account_bank_name: true
        can_add_tag: true
        description: "description"
        can_see_physical_location: true
        can_delete_image: true
        can_see_bank_account_label: true
        can_see_image_url: true
        can_see_transaction_other_bank_account: true
        hide_metadata_if_alias_used: true
        can_add_open_corporates_url: true
        alias: "None"
        can_see_bank_account_national_identifier: true
        can_see_other_account_swift_bic: true
        can_add_image: true
        can_add_where_tag: true
        can_see_owner_comment: true
        can_see_transaction_this_bank_account: true
        can_add_image_url: true
        can_see_other_account_metadata: true
        can_see_transaction_start_date: true
        can_see_private_alias: true
        can_see_transaction_finish_date: true
        can_see_bank_account_iban: true
        can_add_private_alias: true
        can_see_other_account_national_identifier: true
        is_public: true
        can_see_transaction_balance: true
        can_see_where_tag: true
        can_see_bank_account_owners: true
        can_delete_corporate_location: true
        can_see_transaction_currency: true
        can_see_transaction_metadata: true
      bank_id: "gh.29.uk"
      owners:
      - provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      - provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      label: "NoneLabel"
      id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
      product_code: "1234BW"
      tags:
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
  ScopeJsons:
    required:
    - "list"
    properties:
      list:
        type: "array"
        items:
          $ref: "#/definitions/ScopeJson"
    example:
      list:
      - role_name: "CanGetEntitlementsForAnyUserAtOneBank"
        scope_id: "88625da4-a671-435e-9d24-e5b6e5cc404f"
        bank_id: "gh.29.uk"
      - role_name: "CanGetEntitlementsForAnyUserAtOneBank"
        scope_id: "88625da4-a671-435e-9d24-e5b6e5cc404f"
        bank_id: "gh.29.uk"
  AccountHolderJSON:
    required:
    - "is_alias"
    - "name"
    properties:
      name:
        type: "string"
        example: "OBP"
      is_alias:
        type: "boolean"
        example: true
    example:
      is_alias: true
      name: "OBP"
  CustomerAccountLinksJson:
    required:
    - "links"
    properties:
      links:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAccountLinkJson"
    example:
      links:
      - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        relationship_type: "Owner"
        bank_id: "gh.29.uk"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        customer_account_link_id: "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      - account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        relationship_type: "Owner"
        bank_id: "gh.29.uk"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        customer_account_link_id: "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  AtmsJsonV400:
    required:
    - "atms"
    properties:
      atms:
        type: "array"
        items:
          $ref: "#/definitions/AtmJsonV400"
    example:
      atms:
      - supported_languages:
        - "supported_languages"
        - "supported_languages"
        accessibility_features:
        - "accessibility_features"
        - "accessibility_features"
        saturday:
          closing_time: "18:00"
          opening_time: "10:00"
        notes:
        - "notes"
        - "notes"
        more_info: "More information about this fee"
        balance_inquiry_fee: ""
        is_accessible: "true"
        supported_currencies:
        - "supported_currencies"
        - "supported_currencies"
        branch_identification: ""
        cash_withdrawal_national_fee: ""
        bank_id: "gh.29.uk"
        cash_withdrawal_international_fee: ""
        wednesday:
          closing_time: "18:00"
          opening_time: "10:00"
        friday:
          closing_time: "18:00"
          opening_time: "10:00"
        id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        monday:
          closing_time: "18:00"
          opening_time: "10:00"
        location_categories:
        - "location_categories"
        - "location_categories"
        minimum_withdrawal: "5"
        address:
          line_1: "No 1 the Road"
          line_2: "The Place"
          country_code: "DE"
          city: "Berlin"
          postcode: "13359"
          county: ""
          state: "Brandenburg"
          line_3: "The Hill"
        site_identification: ""
        located_at: ""
        thursday:
          closing_time: "18:00"
          opening_time: "10:00"
        services:
        - "services"
        - "services"
        has_deposit_capability: "true"
        site_name: ""
        sunday:
          closing_time: "18:00"
          opening_time: "10:00"
        tuesday:
          closing_time: "18:00"
          opening_time: "10:00"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Atm by the Lake"
        location:
          latitude: 11.45
          longitude: 11.45
      - supported_languages:
        - "supported_languages"
        - "supported_languages"
        accessibility_features:
        - "accessibility_features"
        - "accessibility_features"
        saturday:
          closing_time: "18:00"
          opening_time: "10:00"
        notes:
        - "notes"
        - "notes"
        more_info: "More information about this fee"
        balance_inquiry_fee: ""
        is_accessible: "true"
        supported_currencies:
        - "supported_currencies"
        - "supported_currencies"
        branch_identification: ""
        cash_withdrawal_national_fee: ""
        bank_id: "gh.29.uk"
        cash_withdrawal_international_fee: ""
        wednesday:
          closing_time: "18:00"
          opening_time: "10:00"
        friday:
          closing_time: "18:00"
          opening_time: "10:00"
        id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        monday:
          closing_time: "18:00"
          opening_time: "10:00"
        location_categories:
        - "location_categories"
        - "location_categories"
        minimum_withdrawal: "5"
        address:
          line_1: "No 1 the Road"
          line_2: "The Place"
          country_code: "DE"
          city: "Berlin"
          postcode: "13359"
          county: ""
          state: "Brandenburg"
          line_3: "The Hill"
        site_identification: ""
        located_at: ""
        thursday:
          closing_time: "18:00"
          opening_time: "10:00"
        services:
        - "services"
        - "services"
        has_deposit_capability: "true"
        site_name: ""
        sunday:
          closing_time: "18:00"
          opening_time: "10:00"
        tuesday:
          closing_time: "18:00"
          opening_time: "10:00"
        meta:
          license:
            name: "Open Database License"
            id: "ODbL-1.0"
        name: "Atm by the Lake"
        location:
          latitude: 11.45
          longitude: 11.45
  BanksJson400:
    required:
    - "banks"
    properties:
      banks:
        type: "array"
        items:
          $ref: "#/definitions/BankJson400"
    example:
      banks:
      - website: "www.openbankproject.com"
        full_name: "full_name"
        bank_routings:
        - address: ""
          scheme: "scheme value"
        - address: ""
          scheme: "scheme value"
        logo: "logo"
        attributes:
        - name: "ACCOUNT_MANAGEMENT_FEE"
          value: "5987953"
        - name: "ACCOUNT_MANAGEMENT_FEE"
          value: "5987953"
        short_name: "short_name "
        id: "gh.29.uk"
      - website: "www.openbankproject.com"
        full_name: "full_name"
        bank_routings:
        - address: ""
          scheme: "scheme value"
        - address: ""
          scheme: "scheme value"
        logo: "logo"
        attributes:
        - name: "ACCOUNT_MANAGEMENT_FEE"
          value: "5987953"
        - name: "ACCOUNT_MANAGEMENT_FEE"
          value: "5987953"
        short_name: "short_name "
        id: "gh.29.uk"
  SeverJWK:
    required:
    - "e"
    - "kid"
    - "kty"
    - "n"
    - "use"
    properties:
      e:
        type: "string"
        example: "AQAB"
      "n":
        type: "string"
        example: "hrB0OWqg6AeNU3WCnhheG18R5EbQtdNYGOaSeylTjkj2lZr0_vkhNVYvase-CroxO4HOT06InxTYwLnmJiyv2cZxReuoVjTlk--olGu-9MZooiFiqWez0JzndyKxQ27OiAjFsMh0P04kaUXeHKhXRfiU7K2FqBshR1UlnWe7iHLkq2p9rrGjxQc7ff0w-Uc0f-8PWg36Y2Od7s65493iVQwnI13egqMaSvgB1s8_dgm08noEjhr8C5m1aKmr5oipWEPNi-SBV2VNuiCLR1IEPuXq0tOwwZfv31t34KPO-2H2bbaWmzGJy9mMOGqoNrbXyGiUZoyeHRELaNtm1GilyQ"
      kty:
        type: "string"
        example: "RSA"
      use:
        type: "string"
        example: "sig"
      kid:
        type: "string"
        example: "fr6-BxXH5gikFeZ2O6rGk0LUmJpukeswASN_TMW8U_s"
    example:
      kty: "RSA"
      e: "AQAB"
      use: "sig"
      kid: "fr6-BxXH5gikFeZ2O6rGk0LUmJpukeswASN_TMW8U_s"
      "n": "hrB0OWqg6AeNU3WCnhheG18R5EbQtdNYGOaSeylTjkj2lZr0_vkhNVYvase-CroxO4HOT06InxTYwLnmJiyv2cZxReuoVjTlk--olGu-9MZooiFiqWez0JzndyKxQ27OiAjFsMh0P04kaUXeHKhXRfiU7K2FqBshR1UlnWe7iHLkq2p9rrGjxQc7ff0w-Uc0f-8PWg36Y2Od7s65493iVQwnI13egqMaSvgB1s8_dgm08noEjhr8C5m1aKmr5oipWEPNi-SBV2VNuiCLR1IEPuXq0tOwwZfv31t34KPO-2H2bbaWmzGJy9mMOGqoNrbXyGiUZoyeHRELaNtm1GilyQ"
  ToAccountTransferToAccountAccount:
    required:
    - "iban"
    - "number"
    properties:
      number:
        type: "string"
        example: "String"
      iban:
        type: "string"
        example: "String"
    example:
      number: "String"
      iban: "String"
  AccountRuleJsonV300:
    required:
    - "scheme"
    - "value"
    properties:
      scheme:
        type: "string"
        example: "OVERDRAFT"
      value:
        type: "string"
        example: "10"
    example:
      scheme: "OVERDRAFT"
      value: "10"
  KycStatusJSON:
    required:
    - "customer_id"
    - "customer_number"
    - "date"
    - "ok"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      customer_number:
        type: "string"
        example: "5987953"
      ok:
        type: "boolean"
        example: true
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      date: "1100-01-01T00:00:00Z"
      customer_number: "5987953"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      ok: true
  AccountResponseJson500:
    required:
    - "account_attributes"
    - "account_id"
    - "account_routings"
    - "balance"
    - "branch_id"
    - "label"
    - "product_code"
    properties:
      contracts:
        type: "array"
        items:
          $ref: "#/definitions/ContractJsonV500"
      account_attributes:
        type: "array"
        items:
          $ref: "#/definitions/AccountAttributeResponseJson500"
      branch_id:
        type: "string"
        example: "DERBY6"
      account_routings:
        type: "array"
        items:
          $ref: "#/definitions/AccountRoutingJsonV121"
      label:
        type: "string"
        example: "My Account"
      balance:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      product_code:
        type: "string"
        example: "787LOW"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
    example:
      account_attributes:
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        contract_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      - account_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        contract_code: "LKJL98769F"
        name: "OVERDRAFT_START_DATE"
        product_code: "1234BW"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      balance:
        amount: "0"
        currency: "EUR"
      branch_id: "DERBY6"
      account_routings:
      - address: "4930396"
        scheme: "AccountNumber"
      - address: "4930396"
        scheme: "AccountNumber"
      label: "My Account"
      contracts:
      - form_of_payment: "form_of_payment"
        issuance_amount: "issuance_amount"
        maturity_date: "maturity_date"
        is_substituted: "is_substituted"
        product_code: "787LOW"
        cancellation_date: "cancellation_date"
        interest_amount: "interest_amount"
        branch_code: "branch_code"
        instrument_status_code: "instrument_status_code"
        renewal_date: "renewal_date"
        contract_code: "LKJL98769F"
        instrument_status_definition: "instrument_status_definition"
        interest_rate: "interest_rate"
        term: "term"
        product_description: "product_description"
        opening_date: "opening_date"
        payment_method: "cache"
      - form_of_payment: "form_of_payment"
        issuance_amount: "issuance_amount"
        maturity_date: "maturity_date"
        is_substituted: "is_substituted"
        product_code: "787LOW"
        cancellation_date: "cancellation_date"
        interest_amount: "interest_amount"
        branch_code: "branch_code"
        instrument_status_code: "instrument_status_code"
        renewal_date: "renewal_date"
        contract_code: "LKJL98769F"
        instrument_status_definition: "instrument_status_definition"
        interest_rate: "interest_rate"
        term: "term"
        product_description: "product_description"
        opening_date: "opening_date"
        payment_method: "cache"
      product_code: "787LOW"
  FastFirehoseAccountsJsonV400:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/FastFirehoseAccountJsonV400"
    example:
      accounts:
      - number: ""
        account_attributes:
        - code: "Loan1"
          type: "INTEGER"
          value: "0"
        - code: "Loan1"
          type: "INTEGER"
          value: "0"
        balance:
          amount: "0"
          currency: "EUR"
        account_routings:
        - account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
          bank_id: "bisb.com"
        - account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
          bank_id: "bisb.com"
        bank_id: "gh.29.uk"
        owners:
        - user_id: "b27327a2-a822-41e5-a909-0150da688939"
          provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
          user_name: ""
        - user_id: "b27327a2-a822-41e5-a909-0150da688939"
          provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
          user_name: ""
        label: "My Account"
        id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        product_code: "1234BW"
      - number: ""
        account_attributes:
        - code: "Loan1"
          type: "INTEGER"
          value: "0"
        - code: "Loan1"
          type: "INTEGER"
          value: "0"
        balance:
          amount: "0"
          currency: "EUR"
        account_routings:
        - account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
          bank_id: "bisb.com"
        - account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
          bank_id: "bisb.com"
        bank_id: "gh.29.uk"
        owners:
        - user_id: "b27327a2-a822-41e5-a909-0150da688939"
          provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
          user_name: ""
        - user_id: "b27327a2-a822-41e5-a909-0150da688939"
          provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
          user_name: ""
        label: "My Account"
        id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        product_code: "1234BW"
  InviteeJson:
    required:
    - "contact_details"
    - "status"
    properties:
      contact_details:
        $ref: "#/definitions/ContactDetailsJson"
      status:
        type: "string"
        example: "String, eg: Good"
    example:
      contact_details:
        email_address: "felixsmith@example.com"
        mobile_phone: "+44 07972 444 876"
        name: "Simon "
      status: "String, eg: Good"
  ToAccountTransferToPhone:
    required:
    - "mobile_phone_number"
    properties:
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
    example:
      mobile_phone_number: "+44 07972 444 876"
  ScopeJson:
    required:
    - "bank_id"
    - "role_name"
    - "scope_id"
    properties:
      scope_id:
        type: "string"
        example: "88625da4-a671-435e-9d24-e5b6e5cc404f"
      role_name:
        type: "string"
        example: "CanGetEntitlementsForAnyUserAtOneBank"
      bank_id:
        type: "string"
        example: "gh.29.uk"
    example:
      role_name: "CanGetEntitlementsForAnyUserAtOneBank"
      scope_id: "88625da4-a671-435e-9d24-e5b6e5cc404f"
      bank_id: "gh.29.uk"
  TransactionsJsonV300:
    required:
    - "transactions"
    properties:
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/TransactionJsonV300"
    example:
      transactions:
      - metadata:
          images:
          - date: "1100-01-01T00:00:00Z"
            label: "NONE"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            URL: "www.openbankproject.com"
          - date: "1100-01-01T00:00:00Z"
            label: "NONE"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            URL: "www.openbankproject.com"
          comments:
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
          narrative: "NONE"
          where:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
          tags:
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
        other_account:
          metadata:
            open_corporates_URL: "www.openbankproject.com"
            private_alias: "NONE"
            image_URL: "www.openbankproject.com"
            corporate_location:
              date: "1100-01-01T00:00:00Z"
              latitude: 1.231
              user:
                provider: "http://127.0.0.1:8080"
                id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
                display_name: "OBP"
              longitude: 1.231
            more_info: "www.openbankproject.com"
            public_alias: "NONE"
            URL: "www.openbankproject.com"
            physical_location:
              date: "1100-01-01T00:00:00Z"
              latitude: 1.231
              user:
                provider: "http://127.0.0.1:8080"
                id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
                display_name: "OBP"
              longitude: 1.231
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holder:
            is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        this_account:
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holders:
          - is_alias: true
            name: "OBP"
          - is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "String"
        transaction_attributes:
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        details:
          description: "this is for family"
          new_balance:
            amount: "0"
            currency: "EUR"
          completed: "1100-01-01T00:00:00Z"
          type: "AC"
          value:
            amount: "0"
            currency: "EUR"
          posted: "1100-01-01T00:00:00Z"
        id: "String"
      - metadata:
          images:
          - date: "1100-01-01T00:00:00Z"
            label: "NONE"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            URL: "www.openbankproject.com"
          - date: "1100-01-01T00:00:00Z"
            label: "NONE"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            URL: "www.openbankproject.com"
          comments:
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
          narrative: "NONE"
          where:
            date: "1100-01-01T00:00:00Z"
            latitude: 1.231
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
            longitude: 1.231
          tags:
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
          - date: "1100-01-01T00:00:00Z"
            id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
            value: "OBP"
            user:
              provider: "http://127.0.0.1:8080"
              id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
              display_name: "OBP"
        other_account:
          metadata:
            open_corporates_URL: "www.openbankproject.com"
            private_alias: "NONE"
            image_URL: "www.openbankproject.com"
            corporate_location:
              date: "1100-01-01T00:00:00Z"
              latitude: 1.231
              user:
                provider: "http://127.0.0.1:8080"
                id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
                display_name: "OBP"
              longitude: 1.231
            more_info: "www.openbankproject.com"
            public_alias: "NONE"
            URL: "www.openbankproject.com"
            physical_location:
              date: "1100-01-01T00:00:00Z"
              latitude: 1.231
              user:
                provider: "http://127.0.0.1:8080"
                id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
                display_name: "OBP"
              longitude: 1.231
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holder:
            is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        this_account:
          account_routings:
          - address: "4930396"
            scheme: "AccountNumber"
          - address: "4930396"
            scheme: "AccountNumber"
          holders:
          - is_alias: true
            name: "OBP"
          - is_alias: true
            name: "OBP"
          bank_routing:
            address: ""
            scheme: "scheme value"
          id: "String"
        transaction_attributes:
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        - name: "HOUSE_RENT"
          type: "DATE_WITH_DAY"
          value: "123456789"
          transaction_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        details:
          description: "this is for family"
          new_balance:
            amount: "0"
            currency: "EUR"
          completed: "1100-01-01T00:00:00Z"
          type: "AC"
          value:
            amount: "0"
            currency: "EUR"
          posted: "1100-01-01T00:00:00Z"
        id: "String"
  CreateMeetingJsonV310:
    required:
    - "creator"
    - "date"
    - "invitees"
    - "provider_id"
    - "purpose_id"
    properties:
      provider_id:
        type: "string"
        example: "Chris"
      creator:
        $ref: "#/definitions/ContactDetailsJson"
      invitees:
        type: "array"
        items:
          $ref: "#/definitions/InviteeJson"
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T01:01:01Z"
      purpose_id:
        type: "string"
        example: "String, eg: onboarding"
  ObpApiLoopbackJson:
    required:
    - "connector_version"
    - "duration_time"
    - "git_commit"
    properties:
      connector_version:
        type: "string"
        example: "kafka_vSept2018"
      git_commit:
        type: "string"
        example: "f0acd4be14cdcb94be3433ec95c1ad65228812a0"
      duration_time:
        type: "string"
        example: "10 ms"
    example:
      git_commit: "f0acd4be14cdcb94be3433ec95c1ad65228812a0"
      connector_version: "kafka_vSept2018"
      duration_time: "10 ms"
  AtmServicesResponseJsonV400:
    required:
    - "atm_id"
    - "services"
    properties:
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      services:
        type: "array"
        items:
          type: "string"
    example:
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
      services:
      - "services"
      - "services"
  UpdateCustomerAccountLinkJson:
    required:
    - "relationship_type"
    properties:
      relationship_type:
        type: "string"
        example: "Owner"
  CustomerJSONs:
    required:
    - "customers"
    properties:
      customers:
        type: "array"
        items:
          $ref: "#/definitions/CustomerJsonV210"
    example:
      customers:
      - kyc_status: true
        highest_education_attained: "Master"
        customer_number: "5987953"
        date_of_birth: "1100-01-01T00:00:00Z"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "2000-01-23"
        - "2000-01-23"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
      - kyc_status: true
        highest_education_attained: "Master"
        customer_number: "5987953"
        date_of_birth: "1100-01-01T00:00:00Z"
        face_image:
          date: "1100-01-01T00:00:00Z"
          url: "www.openbankproject"
        mobile_phone_number: "+44 07972 444 876"
        dob_of_dependants:
        - "2000-01-23"
        - "2000-01-23"
        credit_rating:
          rating: "OBP"
          source: "OBP"
        relationship_status: "single"
        last_ok_date: "2023-02-05T14:15:53Z"
        dependants: 1
        bank_id: "gh.29.uk"
        credit_limit:
          amount: "0"
          currency: "EUR"
        employment_status: "worker"
        legal_name: "Eveline Tripman"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        email: "felixsmith@example.com"
  CustomerJsonV210:
    required:
    - "bank_id"
    - "customer_id"
    - "customer_number"
    - "date_of_birth"
    - "dependants"
    - "dob_of_dependants"
    - "email"
    - "employment_status"
    - "face_image"
    - "highest_education_attained"
    - "kyc_status"
    - "last_ok_date"
    - "legal_name"
    - "mobile_phone_number"
    - "relationship_status"
    properties:
      customer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email:
        type: "string"
        example: "felixsmith@example.com"
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      customer_number:
        type: "string"
        example: "5987953"
      highest_education_attained:
        type: "string"
        example: "Master"
      dob_of_dependants:
        type: "array"
        items:
          type: "string"
          format: "date"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      date_of_birth:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      credit_rating:
        $ref: "#/definitions/CustomerCreditRatingJSON"
      last_ok_date:
        type: "string"
        format: "date"
        example: "2023-02-05T14:15:53Z"
      employment_status:
        type: "string"
        example: "worker"
      legal_name:
        type: "string"
        example: "Eveline Tripman"
      credit_limit:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      face_image:
        $ref: "#/definitions/CustomerFaceImageJson"
      dependants:
        type: "integer"
        format: "int32"
        example: 1
      relationship_status:
        type: "string"
        example: "single"
      kyc_status:
        type: "boolean"
        example: true
    example:
      kyc_status: true
      highest_education_attained: "Master"
      customer_number: "5987953"
      date_of_birth: "1100-01-01T00:00:00Z"
      face_image:
        date: "1100-01-01T00:00:00Z"
        url: "www.openbankproject"
      mobile_phone_number: "+44 07972 444 876"
      dob_of_dependants:
      - "2000-01-23"
      - "2000-01-23"
      credit_rating:
        rating: "OBP"
        source: "OBP"
      relationship_status: "single"
      last_ok_date: "2023-02-05T14:15:53Z"
      dependants: 1
      bank_id: "gh.29.uk"
      credit_limit:
        amount: "0"
        currency: "EUR"
      employment_status: "worker"
      legal_name: "Eveline Tripman"
      customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      email: "felixsmith@example.com"
  TransactionRequestTypesJSON:
    required:
    - "transaction_request_types"
    properties:
      transaction_request_types:
        type: "array"
        items:
          $ref: "#/definitions/TransactionRequestTypeJSONV210"
    example:
      transaction_request_types:
      - transaction_request_type: "SandboxTan"
      - transaction_request_type: "SandboxTan"
  EntitlementRequestJSON:
    required:
    - "bank_id"
    - "created"
    - "entitlement_request_id"
    - "role_name"
    - "user"
    properties:
      entitlement_request_id:
        type: "string"
        example: "6fb17583-1e49-4435-bb74-a14fe0996723"
      role_name:
        type: "string"
        example: "CanQueryOtherUser"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      user:
        $ref: "#/definitions/UserJsonV200"
      created:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      role_name: "CanQueryOtherUser"
      bank_id: "gh.29.uk"
      created: "1100-01-01T00:00:00Z"
      entitlement_request_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
      user:
        entitlements:
          list:
          - role_name: "CanQueryOtherUser"
            entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
            bank_id: "gh.29.uk"
          - role_name: "CanQueryOtherUser"
            entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
            bank_id: "gh.29.uk"
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        email: "felixsmith@example.com"
        username: "felixsmith"
  UserCustomerLinksJson:
    required:
    - "user_customer_links"
    properties:
      user_customer_links:
        type: "array"
        items:
          $ref: "#/definitions/UserCustomerLinkJson"
    example:
      user_customer_links:
      - date_inserted: "1100-01-01T00:00:00Z"
        is_active: true
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        user_customer_link_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      - date_inserted: "1100-01-01T00:00:00Z"
        is_active: true
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        user_customer_link_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
  TransactionCommentsJSON:
    required:
    - "comments"
    properties:
      comments:
        type: "array"
        items:
          $ref: "#/definitions/TransactionCommentJSON"
    example:
      comments:
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
      - date: "1100-01-01T00:00:00Z"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        value: "OBP"
        user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
  TransactionNarrativeJSON:
    required:
    - "narrative"
    properties:
      narrative:
        type: "string"
        example: "narative"
    example:
      narrative: "narative"
  ProductFeesResponseJsonV400:
    required:
    - "product_fees"
    properties:
      product_fees:
        type: "array"
        items:
          $ref: "#/definitions/ProductFeeResponseJsonV400"
    example:
      product_fees:
      - is_active: true
        bank_id: "gh.29.uk"
        name: "ACCOUNT_MANAGEMENT_FEE"
        more_info: "More information about this fee"
        product_code: "1234BW"
        value:
          amount: "10.12"
          currency: "EUR"
          type: ""
          frequency: "DAILY"
        product_fee_id: "696hlAHLFKUHE37469287634"
      - is_active: true
        bank_id: "gh.29.uk"
        name: "ACCOUNT_MANAGEMENT_FEE"
        more_info: "More information about this fee"
        product_code: "1234BW"
        value:
          amount: "10.12"
          currency: "EUR"
          type: ""
          frequency: "DAILY"
        product_fee_id: "696hlAHLFKUHE37469287634"
  ConnectorMetricsJson:
    required:
    - "metrics"
    properties:
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/ConnectorMetricJson"
    example:
      metrics:
      - duration: 1000
        date: "1100-01-01T00:00:00Z"
        function_name: "getBanks"
        correlation_id: "12345"
        connector_name: "mapper"
      - duration: 1000
        date: "1100-01-01T00:00:00Z"
        function_name: "getBanks"
        correlation_id: "12345"
        connector_name: "mapper"
  SocialMediasJSON:
    required:
    - "checks"
    properties:
      checks:
        type: "array"
        items:
          $ref: "#/definitions/SocialMediaJSON"
    example:
      checks:
      - date_activated: "1100-01-01T00:00:00Z"
        date_added: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        handle: "PlaceholderString"
        type: "PlaceholderString"
      - date_activated: "1100-01-01T00:00:00Z"
        date_added: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        handle: "PlaceholderString"
        type: "PlaceholderString"
  AdapterInfoJsonV500:
    required:
    - "backend_messages"
    - "date"
    - "git_commit"
    - "name"
    - "total_duration"
    - "version"
    properties:
      name:
        type: "string"
        example: "ACCOUNT_MANAGEMENT_FEE"
      backend_messages:
        type: "array"
        items:
          $ref: "#/definitions/InboundStatusMessage"
      total_duration:
        type: "string"
        format: "double"
        example: "5.123"
      version:
        type: "string"
        example: ""
      date:
        type: "string"
        example: "2020-01-27"
      git_commit:
        type: "string"
        example: "59623811dd8a41f6ffe67be46954eee11913dc28"
    example:
      date: "2020-01-27"
      git_commit: "59623811dd8a41f6ffe67be46954eee11913dc28"
      total_duration: "5.123"
      name: "ACCOUNT_MANAGEMENT_FEE"
      version: ""
      backend_messages:
      - duration: "5.123"
        errorCode: ""
        source: ""
        text: ""
        status: ""
      - duration: "5.123"
        errorCode: ""
        source: ""
        text: ""
        status: ""
  PhysicalLocationJSON:
    required:
    - "physical_location"
    properties:
      physical_location:
        $ref: "#/definitions/LocationPlainJSON"
  AtmJsonV510:
    required:
    - "accessibility_features"
    - "address"
    - "atm_type"
    - "balance_inquiry_fee"
    - "bank_id"
    - "branch_identification"
    - "cash_withdrawal_international_fee"
    - "cash_withdrawal_national_fee"
    - "friday"
    - "has_deposit_capability"
    - "is_accessible"
    - "located_at"
    - "location"
    - "location_categories"
    - "meta"
    - "minimum_withdrawal"
    - "monday"
    - "more_info"
    - "name"
    - "notes"
    - "phone"
    - "saturday"
    - "services"
    - "site_identification"
    - "site_name"
    - "sunday"
    - "supported_currencies"
    - "supported_languages"
    - "thursday"
    - "tuesday"
    - "wednesday"
    properties:
      sunday:
        $ref: "#/definitions/OpeningTimesV300"
      services:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
        example: "Atm by the Lake"
      location:
        $ref: "#/definitions/LocationJsonV140"
      tuesday:
        $ref: "#/definitions/OpeningTimesV300"
      cash_withdrawal_international_fee:
        type: "string"
        example: ""
      wednesday:
        $ref: "#/definitions/OpeningTimesV300"
      branch_identification:
        type: "string"
        example: ""
      location_categories:
        type: "array"
        items:
          type: "string"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/AtmAttributeResponseJsonV510"
      site_identification:
        type: "string"
        example: ""
      monday:
        $ref: "#/definitions/OpeningTimesV300"
      has_deposit_capability:
        type: "string"
        example: "true"
      balance_inquiry_fee:
        type: "string"
        example: ""
      site_name:
        type: "string"
        example: ""
      more_info:
        type: "string"
        example: "More information about this fee"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      supported_languages:
        type: "array"
        items:
          type: "string"
      supported_currencies:
        type: "array"
        items:
          type: "string"
      accessibility_features:
        type: "array"
        items:
          type: "string"
      address:
        $ref: "#/definitions/AddressJsonV300"
      cash_withdrawal_national_fee:
        type: "string"
        example: ""
      friday:
        $ref: "#/definitions/OpeningTimesV300"
      notes:
        type: "array"
        items:
          type: "string"
      is_accessible:
        type: "string"
        example: "true"
      atm_type:
        type: "string"
        example: ""
      thursday:
        $ref: "#/definitions/OpeningTimesV300"
      saturday:
        $ref: "#/definitions/OpeningTimesV300"
      located_at:
        type: "string"
        example: ""
      minimum_withdrawal:
        type: "string"
        example: "5"
      phone:
        type: "string"
        example: ""
    example:
      supported_languages:
      - "supported_languages"
      - "supported_languages"
      accessibility_features:
      - "accessibility_features"
      - "accessibility_features"
      saturday:
        closing_time: "18:00"
        opening_time: "10:00"
      notes:
      - "notes"
      - "notes"
      more_info: "More information about this fee"
      balance_inquiry_fee: ""
      is_accessible: "true"
      supported_currencies:
      - "supported_currencies"
      - "supported_currencies"
      branch_identification: ""
      cash_withdrawal_national_fee: ""
      bank_id: "gh.29.uk"
      cash_withdrawal_international_fee: ""
      wednesday:
        closing_time: "18:00"
        opening_time: "10:00"
      friday:
        closing_time: "18:00"
        opening_time: "10:00"
      id: "atme-9a0f-4bfa-b30b-9003aa467f51"
      monday:
        closing_time: "18:00"
        opening_time: "10:00"
      location_categories:
      - "location_categories"
      - "location_categories"
      minimum_withdrawal: "5"
      address:
        line_1: "No 1 the Road"
        line_2: "The Place"
        country_code: "DE"
        city: "Berlin"
        postcode: "13359"
        county: ""
        state: "Brandenburg"
        line_3: "The Hill"
      site_identification: ""
      located_at: ""
      atm_type: ""
      thursday:
        closing_time: "18:00"
        opening_time: "10:00"
      services:
      - "services"
      - "services"
      has_deposit_capability: "true"
      site_name: ""
      sunday:
        closing_time: "18:00"
        opening_time: "10:00"
      tuesday:
        closing_time: "18:00"
        opening_time: "10:00"
      phone: ""
      meta:
        license:
          name: "Open Database License"
          id: "ODbL-1.0"
      name: "Atm by the Lake"
      location:
        latitude: 11.45
        longitude: 11.45
      attributes:
      - is_active: true
        atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
        bank_id: "gh.29.uk"
        name: "ACCOUNT_MANAGEMENT_FEE"
        atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        type: ""
        value: "5987953"
      - is_active: true
        atm_attribute_id: "xxaf2a-9a0f-4bfa-b30b-9003aa467f51"
        bank_id: "gh.29.uk"
        name: "ACCOUNT_MANAGEMENT_FEE"
        atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
        type: ""
        value: "5987953"
  BankAttributesResponseJsonV400:
    required:
    - "bank_attributes"
    properties:
      bank_attributes:
        type: "array"
        items:
          $ref: "#/definitions/BankAttributeResponseJsonV400"
    example:
      bank_attributes:
      - is_active: true
        bank_id: "gh.29.uk"
        name: "OVERDRAFT_START_DATE"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
        bank_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      - is_active: true
        bank_id: "gh.29.uk"
        name: "OVERDRAFT_START_DATE"
        type: "DATE_WITH_DAY"
        value: "2012-04-23"
        bank_attribute_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
  CoreAccountsJsonV300:
    required:
    - "accounts"
    properties:
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/CoreAccountJson"
    example:
      accounts:
      - account_type: "330"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "gh.29.uk"
        label: "String"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        views:
        - is_public: false
          description: "This view is for the owner for the account."
          short_name: "Owner"
          id: "owner"
        - is_public: false
          description: "This view is for the owner for the account."
          short_name: "Owner"
          id: "owner"
      - account_type: "330"
        account_routings:
        - address: "4930396"
          scheme: "AccountNumber"
        - address: "4930396"
          scheme: "AccountNumber"
        bank_id: "gh.29.uk"
        label: "String"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        views:
        - is_public: false
          description: "This view is for the owner for the account."
          short_name: "Owner"
          id: "owner"
        - is_public: false
          description: "This view is for the owner for the account."
          short_name: "Owner"
          id: "owner"
  PermissionsJSON:
    required:
    - "permissions"
    properties:
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionJSON"
    example:
      permissions:
      - user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        views:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
      - user:
          provider: "http://127.0.0.1:8080"
          id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
          display_name: "OBP"
        views:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
  FromAccountTransfer:
    required:
    - "mobile_phone_number"
    - "nickname"
    properties:
      mobile_phone_number:
        type: "string"
        example: "+44 07972 444 876"
      nickname:
        type: "string"
        example: "String"
    example:
      nickname: "String"
      mobile_phone_number: "+44 07972 444 876"
  LocationJSONV121:
    required:
    - "date"
    - "latitude"
    - "longitude"
    - "user"
    properties:
      latitude:
        type: "number"
        format: "double"
        example: 1.231
      longitude:
        type: "number"
        format: "double"
        example: 1.231
      date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      user:
        $ref: "#/definitions/UserJSONV121"
    example:
      date: "1100-01-01T00:00:00Z"
      latitude: 1.231
      user:
        provider: "http://127.0.0.1:8080"
        id: "5995d6a2-01b3-423c-a173-5481df49bdaf"
        display_name: "OBP"
      longitude: 1.231
  TransactionRequestBodySimpleJsonV400:
    required:
    - "charge_policy"
    - "description"
    - "to"
    - "value"
    properties:
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
      future_date:
        type: "string"
        example: "20200127"
      to:
        $ref: "#/definitions/PostSimpleCounterpartyJson400"
      charge_policy:
        type: "string"
        example: "SHARED"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
  EntitlementJSON:
    required:
    - "bank_id"
    - "entitlement_id"
    - "role_name"
    properties:
      entitlement_id:
        type: "string"
        example: "6fb17583-1e49-4435-bb74-a14fe0996723"
      role_name:
        type: "string"
        example: "CanQueryOtherUser"
      bank_id:
        type: "string"
        example: "gh.29.uk"
    example:
      role_name: "CanQueryOtherUser"
      entitlement_id: "6fb17583-1e49-4435-bb74-a14fe0996723"
      bank_id: "gh.29.uk"
  CorrelatedEntities:
    required:
    - "correlated_entities"
    properties:
      correlated_entities:
        type: "array"
        items:
          $ref: "#/definitions/CustomerAndUsersWithAttributesResponseJson"
    example:
      correlated_entities:
      - users:
        - provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          user_attributes:
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          email: "felixsmith@example.com"
          username: "felixsmith"
        - provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          user_attributes:
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          email: "felixsmith@example.com"
          username: "felixsmith"
        customer:
          kyc_status: true
          highest_education_attained: "Master"
          name_suffix: "Sr"
          customer_number: "5987953"
          date_of_birth: "1100-01-01T00:00:00Z"
          face_image:
            date: "1100-01-01T00:00:00Z"
            url: "www.openbankproject"
          title: "Dr."
          mobile_phone_number: "+44 07972 444 876"
          dob_of_dependants:
          - "2000-01-23"
          - "2000-01-23"
          credit_rating:
            rating: "OBP"
            source: "OBP"
          relationship_status: "single"
          branch_id: "DERBY6"
          last_ok_date: "2023-02-05T14:15:53Z"
          dependants: 1
          bank_id: "gh.29.uk"
          credit_limit:
            amount: "0"
            currency: "EUR"
          employment_status: "worker"
          legal_name: "Eveline Tripman"
          customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          email: "felixsmith@example.com"
      - users:
        - provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          user_attributes:
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          email: "felixsmith@example.com"
          username: "felixsmith"
        - provider: "http://127.0.0.1:8080"
          user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          provider_id: "Chris"
          user_attributes:
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          - insert_date: "2024-02-05T14:15:53Z"
            user_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
            name: "BATTERY_LEVEL"
            type: "STRING"
            value: "90"
          email: "felixsmith@example.com"
          username: "felixsmith"
        customer:
          kyc_status: true
          highest_education_attained: "Master"
          name_suffix: "Sr"
          customer_number: "5987953"
          date_of_birth: "1100-01-01T00:00:00Z"
          face_image:
            date: "1100-01-01T00:00:00Z"
            url: "www.openbankproject"
          title: "Dr."
          mobile_phone_number: "+44 07972 444 876"
          dob_of_dependants:
          - "2000-01-23"
          - "2000-01-23"
          credit_rating:
            rating: "OBP"
            source: "OBP"
          relationship_status: "single"
          branch_id: "DERBY6"
          last_ok_date: "2023-02-05T14:15:53Z"
          dependants: 1
          bank_id: "gh.29.uk"
          credit_limit:
            amount: "0"
            currency: "EUR"
          employment_status: "worker"
          legal_name: "Eveline Tripman"
          customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          email: "felixsmith@example.com"
  LocationPlainJSON:
    required:
    - "latitude"
    - "longitude"
    properties:
      latitude:
        type: "number"
        format: "double"
        example: 1.532
      longitude:
        type: "number"
        format: "double"
        example: 1.535
  AtmJsonV400:
    required:
    - "accessibility_features"
    - "address"
    - "balance_inquiry_fee"
    - "bank_id"
    - "branch_identification"
    - "cash_withdrawal_international_fee"
    - "cash_withdrawal_national_fee"
    - "friday"
    - "has_deposit_capability"
    - "is_accessible"
    - "located_at"
    - "location"
    - "location_categories"
    - "meta"
    - "minimum_withdrawal"
    - "monday"
    - "more_info"
    - "name"
    - "notes"
    - "saturday"
    - "services"
    - "site_identification"
    - "site_name"
    - "sunday"
    - "supported_currencies"
    - "supported_languages"
    - "thursday"
    - "tuesday"
    - "wednesday"
    properties:
      sunday:
        $ref: "#/definitions/OpeningTimesV300"
      services:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
        example: "Atm by the Lake"
      location:
        $ref: "#/definitions/LocationJsonV140"
      tuesday:
        $ref: "#/definitions/OpeningTimesV300"
      cash_withdrawal_international_fee:
        type: "string"
        example: ""
      wednesday:
        $ref: "#/definitions/OpeningTimesV300"
      branch_identification:
        type: "string"
        example: ""
      location_categories:
        type: "array"
        items:
          type: "string"
      site_identification:
        type: "string"
        example: ""
      monday:
        $ref: "#/definitions/OpeningTimesV300"
      has_deposit_capability:
        type: "string"
        example: "true"
      balance_inquiry_fee:
        type: "string"
        example: ""
      site_name:
        type: "string"
        example: ""
      more_info:
        type: "string"
        example: "More information about this fee"
      bank_id:
        type: "string"
        example: "gh.29.uk"
      id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      meta:
        $ref: "#/definitions/MetaJsonV140"
      supported_languages:
        type: "array"
        items:
          type: "string"
      supported_currencies:
        type: "array"
        items:
          type: "string"
      accessibility_features:
        type: "array"
        items:
          type: "string"
      address:
        $ref: "#/definitions/AddressJsonV300"
      cash_withdrawal_national_fee:
        type: "string"
        example: ""
      friday:
        $ref: "#/definitions/OpeningTimesV300"
      notes:
        type: "array"
        items:
          type: "string"
      is_accessible:
        type: "string"
        example: "true"
      thursday:
        $ref: "#/definitions/OpeningTimesV300"
      saturday:
        $ref: "#/definitions/OpeningTimesV300"
      located_at:
        type: "string"
        example: ""
      minimum_withdrawal:
        type: "string"
        example: "5"
    example:
      supported_languages:
      - "supported_languages"
      - "supported_languages"
      accessibility_features:
      - "accessibility_features"
      - "accessibility_features"
      saturday:
        closing_time: "18:00"
        opening_time: "10:00"
      notes:
      - "notes"
      - "notes"
      more_info: "More information about this fee"
      balance_inquiry_fee: ""
      is_accessible: "true"
      supported_currencies:
      - "supported_currencies"
      - "supported_currencies"
      branch_identification: ""
      cash_withdrawal_national_fee: ""
      bank_id: "gh.29.uk"
      cash_withdrawal_international_fee: ""
      wednesday:
        closing_time: "18:00"
        opening_time: "10:00"
      friday:
        closing_time: "18:00"
        opening_time: "10:00"
      id: "atme-9a0f-4bfa-b30b-9003aa467f51"
      monday:
        closing_time: "18:00"
        opening_time: "10:00"
      location_categories:
      - "location_categories"
      - "location_categories"
      minimum_withdrawal: "5"
      address:
        line_1: "No 1 the Road"
        line_2: "The Place"
        country_code: "DE"
        city: "Berlin"
        postcode: "13359"
        county: ""
        state: "Brandenburg"
        line_3: "The Hill"
      site_identification: ""
      located_at: ""
      thursday:
        closing_time: "18:00"
        opening_time: "10:00"
      services:
      - "services"
      - "services"
      has_deposit_capability: "true"
      site_name: ""
      sunday:
        closing_time: "18:00"
        opening_time: "10:00"
      tuesday:
        closing_time: "18:00"
        opening_time: "10:00"
      meta:
        license:
          name: "Open Database License"
          id: "ODbL-1.0"
      name: "Atm by the Lake"
      location:
        latitude: 11.45
        longitude: 11.45
  TransactionRequestTransferToPhone:
    required:
    - "description"
    - "from"
    - "message"
    - "to"
    - "value"
    properties:
      description:
        type: "string"
        example: "String"
      to:
        $ref: "#/definitions/ToAccountTransferToPhone"
      from:
        $ref: "#/definitions/FromAccountTransfer"
      message:
        type: "string"
        example: "String"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
    example:
      description: "String"
      from:
        nickname: "String"
        mobile_phone_number: "+44 07972 444 876"
      to:
        mobile_phone_number: "+44 07972 444 876"
      message: "String"
      value:
        amount: "0"
        currency: "EUR"
  CustomerAttributeResponseJsonV300:
    required:
    - "customer_attribute_id"
    - "name"
    - "type"
    - "value"
    properties:
      customer_attribute_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      name:
        type: "string"
        example: "SPECIAL_TAX_NUMBER"
      type:
        type: "string"
        example: "STRING"
      value:
        type: "string"
        example: "123456789"
    example:
      name: "SPECIAL_TAX_NUMBER"
      type: "STRING"
      value: "123456789"
      customer_attribute_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
  TopApiJson:
    required:
    - "Implemented_by_partial_function"
    - "count"
    - "implemented_in_version"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 7076
      Implemented_by_partial_function:
        type: "string"
        example: "getBanks"
      implemented_in_version:
        type: "string"
        example: "v1.2.1"
    example:
      Implemented_by_partial_function: "getBanks"
      implemented_in_version: "v1.2.1"
      count: 7076
  TransactionRequestWithChargeJSON210:
    required:
    - "challenge"
    - "charge"
    - "details"
    - "end_date"
    - "from"
    - "id"
    - "start_date"
    - "status"
    - "transaction_ids"
    - "type"
    properties:
      challenge:
        $ref: "#/definitions/ChallengeJsonV140"
      start_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      id:
        type: "string"
        example: "4050046c-63b3-4868-8a22-14b4181d33a6"
      end_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      status:
        type: "string"
        example: "COMPLETED"
      from:
        $ref: "#/definitions/TransactionRequestAccountJsonV140"
      details:
        $ref: "#/definitions/TransactionRequestBodyAllTypes"
      charge:
        $ref: "#/definitions/TransactionRequestChargeJsonV200"
      type:
        type: "string"
        example: "SANDBOX_TAN"
      transaction_ids:
        type: "array"
        items:
          type: "string"
    example:
      end_date: "1100-01-01T00:00:00Z"
      charge:
        summary: "Rent the flat"
        value:
          amount: "0"
          currency: "EUR"
      challenge:
        challenge_type: "SANDBOX_TAN"
        allowed_attempts: 3
        id: "be1a183d-b301-4b83-b855-5eeffdd3526f"
      from:
        account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        bank_id: "gh.29.uk"
      details:
        to_sepa_credit_transfers:
          debtorAccount:
            iban: "GB33BUKB20201555555555"
          creditorName: "John Miles"
          creditorAccount:
            iban: "GB33BUKB20201555555555"
          instructedAmount:
            amount: "0"
            currency: "EUR"
        to_counterparty:
          counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        to_sandbox_tan:
          account_id: "String"
          bank_id: "String"
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        to_transfer_to_account:
          description: "String"
          to:
            bank_code: "String"
            branch_number: "String"
            name: "String"
            account:
              number: "String"
              iban: "String"
          transfer_type: "String"
          value:
            amount: "0"
            currency: "EUR"
          future_date: "20181230"
        to_simple:
          otherBranchRoutingAddress: "DERBY6"
          otherBankRoutingScheme: "BIC"
          otherBranchRoutingScheme: "BRANCH-CODE"
          otherBankRoutingAddress: "GENODEM1GLS"
          otherAccountSecondaryRoutingScheme: "IBAN"
          otherAccountRoutingAddress: "DE91 1000 0000 0123 4567 89"
          otherAccountSecondaryRoutingAddress: "DE91 1000 0000 0123 4567 89"
          otherAccountRoutingScheme: "IBAN"
        to_sepa:
          iban: "String"
        to_transfer_to_phone:
          description: "String"
          from:
            nickname: "String"
            mobile_phone_number: "+44 07972 444 876"
          to:
            mobile_phone_number: "+44 07972 444 876"
          message: "String"
          value:
            amount: "0"
            currency: "EUR"
        to_transfer_to_atm:
          description: "String"
          from:
            nickname: "String"
            mobile_phone_number: "+44 07972 444 876"
          to:
            kyc_document:
              number: "String"
              type: "String"
            date_of_birth: "20181230"
            legal_name: "Eveline Tripman"
            mobile_phone_number: "+44 07972 444 876"
          message: "String"
          value:
            amount: "0"
            currency: "EUR"
        value:
          amount: "100"
          currency: "EUR"
      id: "4050046c-63b3-4868-8a22-14b4181d33a6"
      transaction_ids:
      - "transaction_ids"
      - "transaction_ids"
      type: "SANDBOX_TAN"
      start_date: "1100-01-01T00:00:00Z"
      status: "COMPLETED"
  AccountAttributeJson:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      type:
        type: "string"
        example: "DATE_WITH_DAY"
      value:
        type: "string"
        example: "2012-04-23"
      product_instance_code:
        type: "string"
        example: "LKJL98769F"
  PhysicalCardJSON:
    required:
    - "account"
    - "allows"
    - "bank_card_number"
    - "bank_id"
    - "cancelled"
    - "collected"
    - "enabled"
    - "expires_date"
    - "issue_number"
    - "name_on_card"
    - "networks"
    - "on_hot_list"
    - "pin_reset"
    - "posted"
    - "replacement"
    - "serial_number"
    - "technology"
    - "valid_from_date"
    properties:
      allows:
        type: "array"
        items:
          type: "string"
      expires_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      networks:
        type: "array"
        items:
          type: "string"
      issue_number:
        type: "string"
        example: "1"
      replacement:
        $ref: "#/definitions/ReplacementJSON"
      enabled:
        type: "boolean"
        example: true
      collected:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      technology:
        type: "string"
        example: "String"
      cancelled:
        type: "boolean"
        example: true
      bank_id:
        type: "string"
        example: "gh.29.uk"
      pin_reset:
        type: "array"
        items:
          $ref: "#/definitions/PinResetJSON"
      serial_number:
        type: "string"
        example: "1324234"
      account:
        $ref: "#/definitions/AccountJSON"
      valid_from_date:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      bank_card_number:
        type: "string"
        example: "364435172576215"
      name_on_card:
        type: "string"
        example: "String"
      posted:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
      on_hot_list:
        type: "boolean"
        example: true
    example:
      allows:
      - "allows"
      - "allows"
      expires_date: "1100-01-01T00:00:00Z"
      bank_card_number: "364435172576215"
      collected: "1100-01-01T00:00:00Z"
      serial_number: "1324234"
      technology: "String"
      networks:
      - "networks"
      - "networks"
      enabled: true
      pin_reset:
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      - requested_date: "2024-02-05T14:15:52Z"
        reason_requested: "GOOD_SECURITY_PRACTICE"
      valid_from_date: "1100-01-01T00:00:00Z"
      posted: "1100-01-01T00:00:00Z"
      issue_number: "1"
      bank_id: "gh.29.uk"
      cancelled: true
      on_hot_list: true
      replacement:
        requested_date: "1100-01-01T00:00:00Z"
        reason_requested: "RENEW"
      account:
        views_available:
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        - can_see_bank_account_type: true
          can_see_tags: true
          can_see_other_account_iban: true
          can_delete_tag: true
          can_add_corporate_location: true
          can_see_images: true
          can_see_transaction_type: true
          can_see_other_account_kind: true
          can_edit_owner_comment: true
          can_add_physical_location: true
          can_see_bank_account_number: true
          can_see_corporate_location: true
          can_see_comments: true
          can_see_transaction_description: true
          id: "123"
          can_see_transaction_amount: true
          can_see_bank_account_bank_name: true
          can_add_url: true
          can_see_url: true
          can_see_public_alias: true
          can_see_other_account_number: true
          can_add_more_info: true
          can_delete_physical_location: true
          can_delete_where_tag: true
          can_add_comment: true
          can_see_more_info: true
          can_add_public_alias: true
          short_name: "short_name"
          can_see_bank_account_currency: true
          can_see_bank_account_swift_bic: true
          can_see_bank_account_balance: true
          can_see_open_corporates_url: true
          can_delete_comment: true
          can_see_other_account_bank_name: true
          can_add_tag: true
          description: "description"
          can_see_physical_location: true
          can_delete_image: true
          can_see_bank_account_label: true
          can_see_image_url: true
          can_see_transaction_other_bank_account: true
          hide_metadata_if_alias_used: true
          can_add_open_corporates_url: true
          alias: "None"
          can_see_bank_account_national_identifier: true
          can_see_other_account_swift_bic: true
          can_add_image: true
          can_add_where_tag: true
          can_see_owner_comment: true
          can_see_transaction_this_bank_account: true
          can_add_image_url: true
          can_see_other_account_metadata: true
          can_see_transaction_start_date: true
          can_see_private_alias: true
          can_see_transaction_finish_date: true
          can_see_bank_account_iban: true
          can_add_private_alias: true
          can_see_other_account_national_identifier: true
          is_public: true
          can_see_transaction_balance: true
          can_see_where_tag: true
          can_see_bank_account_owners: true
          can_delete_corporate_location: true
          can_see_transaction_currency: true
          can_see_transaction_metadata: true
        bank_id: "gh.29.uk"
        id: "123"
        label: "OBP"
      name_on_card: "String"
  PostHistoricalTransactionAtBankJson:
    required:
    - "charge_policy"
    - "completed"
    - "description"
    - "from_account_id"
    - "posted"
    - "to_account_id"
    - "type"
    - "value"
    properties:
      description:
        type: "string"
        example: "this is for work"
      to_account_id:
        type: "string"
        example: ""
      completed:
        type: "string"
        example: "1100-01-01T01:01:01Z"
      charge_policy:
        type: "string"
        example: "SHARED"
      from_account_id:
        type: "string"
        example: ""
      type:
        type: "string"
        example: "SANDBOX_TAN"
      value:
        $ref: "#/definitions/AmountOfMoneyJsonV121"
      posted:
        type: "string"
        example: "1100-01-01T01:01:01Z"
  KycDocumentsJSON:
    required:
    - "documents"
    properties:
      documents:
        type: "array"
        items:
          $ref: "#/definitions/KycDocumentJSON"
    example:
      documents:
      - issue_place: "PlaceholderString"
        number: "PlaceholderString"
        issue_date: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        expiry_date: "1100-01-01T00:00:00Z"
        id: "PlaceholderString"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        type: "PlaceholderString"
      - issue_place: "PlaceholderString"
        number: "PlaceholderString"
        issue_date: "1100-01-01T00:00:00Z"
        customer_number: "5987953"
        bank_id: "gh.29.uk"
        expiry_date: "1100-01-01T00:00:00Z"
        id: "PlaceholderString"
        customer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        type: "PlaceholderString"
  UserAuthContextUpdateJsonV500:
    required:
    - "consumer_id"
    - "key"
    - "status"
    - "user_auth_context_update_id"
    - "user_id"
    - "value"
    properties:
      user_auth_context_update_id:
        type: "string"
        example: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      key:
        type: "string"
        example: "CUSTOMER_NUMBER"
      status:
        type: "string"
        example: "INITIATED"
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      value:
        type: "string"
        example: "78987432"
    example:
      consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      user_auth_context_update_id: "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      value: "78987432"
      key: "CUSTOMER_NUMBER"
      status: "INITIATED"
  OpeningTimesV300:
    required:
    - "closing_time"
    - "opening_time"
    properties:
      opening_time:
        type: "string"
        example: "10:00"
      closing_time:
        type: "string"
        example: "18:00"
    example:
      closing_time: "18:00"
      opening_time: "10:00"
  PostConsentRequestJsonV500:
    required:
    - "account_access"
    - "everything"
    properties:
      phone_number:
        type: "string"
        example: "+44 07972 444 876"
      time_to_live:
        type: "integer"
        format: "int64"
        example: 3600
      email:
        type: "string"
        example: "felixsmith@example.com"
      bank_id:
        type: "string"
      account_access:
        type: "array"
        items:
          $ref: "#/definitions/AccountAccessV500"
      everything:
        type: "boolean"
        example: false
      consumer_id:
        type: "string"
        example: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      valid_from:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:53Z"
      entitlements:
        type: "array"
        items:
          $ref: "#/definitions/PostConsentEntitlementJsonV310"
  PostApiCollectionJson400:
    required:
    - "api_collection_name"
    - "is_sharable"
    properties:
      api_collection_name:
        type: "string"
        example: "Favourites"
      is_sharable:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "This an optional field. Maximum length is 2000. It can be any characters\
          \ here."
  AtmLocationCategoriesResponseJsonV400:
    required:
    - "atm_id"
    - "location_categories"
    properties:
      atm_id:
        type: "string"
        example: "atme-9a0f-4bfa-b30b-9003aa467f51"
      location_categories:
        type: "array"
        items:
          type: "string"
    example:
      location_categories:
      - "location_categories"
      - "location_categories"
      atm_id: "atme-9a0f-4bfa-b30b-9003aa467f51"
  CounterpartyJson400:
    required:
    - "bespoke"
    - "counterparty_id"
    - "created_by_user_id"
    - "currency"
    - "description"
    - "is_beneficiary"
    - "name"
    - "other_account_routing_address"
    - "other_account_routing_scheme"
    - "other_account_secondary_routing_address"
    - "other_account_secondary_routing_scheme"
    - "other_bank_routing_address"
    - "other_bank_routing_scheme"
    - "other_branch_routing_address"
    - "other_branch_routing_scheme"
    - "this_account_id"
    - "this_bank_id"
    - "this_view_id"
    properties:
      other_account_routing_address:
        type: "string"
        example: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_routing_scheme:
        type: "string"
        example: "OBP"
      created_by_user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      name:
        type: "string"
        example: "CounterpartyName"
      other_account_secondary_routing_address:
        type: "string"
        example: "DE89370400440532013000"
      is_beneficiary:
        type: "boolean"
        example: true
      description:
        type: "string"
        example: "My landlord"
      other_branch_routing_address:
        type: "string"
        example: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
      bespoke:
        type: "array"
        items:
          $ref: "#/definitions/PostCounterpartyBespokeJson"
      other_bank_routing_scheme:
        type: "string"
        example: "OBP"
      other_branch_routing_scheme:
        type: "string"
        example: "OBP"
      this_account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      this_view_id:
        type: "string"
        example: "owner"
      currency:
        type: "string"
        example: "EUR"
      other_bank_routing_address:
        type: "string"
        example: "gh.29.uk"
      this_bank_id:
        type: "string"
        example: "gh.29.uk"
      counterparty_id:
        type: "string"
        example: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      other_account_secondary_routing_scheme:
        type: "string"
        example: "IBAN"
    example:
      this_bank_id: "gh.29.uk"
      is_beneficiary: true
      other_bank_routing_scheme: "OBP"
      other_account_routing_scheme: "OBP"
      this_account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      counterparty_id: "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      other_bank_routing_address: "gh.29.uk"
      description: "My landlord"
      other_branch_routing_scheme: "OBP"
      bespoke:
      - value: "english Name"
        key: "englishName"
      - value: "english Name"
        key: "englishName"
      created_by_user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      other_branch_routing_address: "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_secondary_routing_scheme: "IBAN"
      this_view_id: "owner"
      name: "CounterpartyName"
      currency: "EUR"
      other_account_routing_address: "36f8a9e6-c2b1-407a-8bd0-421b7119307e"
      other_account_secondary_routing_address: "DE89370400440532013000"
  TopConsumersJson:
    required:
    - "top_consumers"
    properties:
      top_consumers:
        type: "array"
        items:
          $ref: "#/definitions/TopConsumerJson"
    example:
      top_consumers:
      - consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        app_name: "Api Explorer"
        developer_email: "felixsmith@example.com"
        count: 7076
      - consumer_id: "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        app_name: "Api Explorer"
        developer_email: "felixsmith@example.com"
        count: 7076
  SandboxUserImport:
    required:
    - "email"
    - "password"
    - "user_name"
    properties:
      email:
        type: "string"
        example: "user1@example.com"
      password:
        type: "string"
        example: "TESOBE520berlin123!"
      user_name:
        type: "string"
        example: "User 1"
  SandboxBankImport:
    required:
    - "full_name"
    - "id"
    - "logo"
    - "short_name"
    - "website"
    properties:
      website:
        type: "string"
        example: "http://example.com/2"
      full_name:
        type: "string"
        example: "Bank 2 Inc."
      logo:
        type: "string"
        example: "http://example.com/logo2"
      id:
        type: "string"
        example: "bank2"
      short_name:
        type: "string"
        example: "bank 2"
  SandboxTransactionImport:
    required:
    - "details"
    - "id"
    - "this_account"
    properties:
      id:
        type: "string"
        example: "blankCounterpartNameTransaction"
      this_account:
        $ref: "#/definitions/SandboxAccountIdImport"
      counterparty:
        $ref: "#/definitions/SandboxTransactionCounterparty"
      details:
        $ref: "#/definitions/SandboxAccountDetailsImport"
  SandboxTransactionCounterparty:
    properties:
      name:
        type: "string"
        example: "Acme Inc."
      account_number:
        type: "string"
        example: "12345-B"
  SandboxAccountDetailsImport:
    required:
    - "completed"
    - "description"
    - "new_balance"
    - "posted"
    - "type"
    - "value"
    properties:
      new_balance:
        type: "string"
        example: "1244.00"
      description:
        type: "string"
        example: "some description"
      completed:
        type: "string"
        example: "2012-04-07T00:00:00.001Z"
      type:
        type: "string"
        example: "SEPA"
      value:
        type: "string"
        example: "-135.33"
      posted:
        type: "string"
        example: "2012-03-07T00:00:00.001Z"
  SandboxAccountImport:
    required:
    - "IBAN"
    - "balance"
    - "bank"
    - "generate_accountants_view"
    - "generate_auditors_view"
    - "generate_public_view"
    - "id"
    - "label"
    - "number"
    - "owners"
    - "type"
    properties:
      generate_auditors_view:
        type: "boolean"
        example: true
      number:
        type: "string"
        example: "22"
      IBAN:
        type: "string"
        example: "21234567890"
      label:
        type: "string"
        example: "Account 1 at Bank 2"
      owners:
        type: "array"
        items:
          type: "string"
      balance:
        $ref: "#/definitions/SandboxBalanceImport"
      bank:
        type: "string"
        example: "bank2"
      id:
        type: "string"
        example: "account1"
      type:
        type: "string"
        example: "savings"
      generate_accountants_view:
        type: "boolean"
        example: true
      generate_public_view:
        type: "boolean"
        example: false
  SandboxLobbyImport:
    required:
    - "hours"
    properties:
      hours:
        type: "string"
        example: "M-TH 8:30-3:30, F 9-5"
  SandboxBalanceImport:
    required:
    - "amount"
    - "currency"
    properties:
      currency:
        type: "string"
        example: "EUR"
      amount:
        type: "string"
        example: "1000.00"
  SandboxCrmEventImport:
    required:
    - "actual_date"
    - "bank_id"
    - "category"
    - "channel"
    - "customer"
    - "detail"
    - "id"
    properties:
      channel:
        type: "string"
        example: "Phone"
      bank_id:
        type: "string"
        example: "bank1"
      id:
        type: "string"
        example: "KIFJA76876AS"
      customer:
        $ref: "#/definitions/SandboxCustomerImport"
      category:
        type: "string"
        example: "Call"
      detail:
        type: "string"
        example: "Check mortgage"
      actual_date:
        type: "string"
        example: "1100-01-01T01:01:01.000Z"
  SandboxAccountIdImport:
    required:
    - "bank"
    - "id"
    properties:
      id:
        type: "string"
        example: "account1"
      bank:
        type: "string"
        example: "bank1"
  SandboxProductImport:
    required:
    - "bank_id"
    - "category"
    - "code"
    - "family"
    - "meta"
    - "more_info_url"
    - "name"
    - "super_family"
    properties:
      name:
        type: "string"
        example: "product 1"
      more_info_url:
        type: "string"
        example: "www.example.com/index1"
      super_family:
        type: "string"
        example: "sup fam 1"
      code:
        type: "string"
        example: "prd1"
      bank_id:
        type: "string"
        example: "bank1"
      meta:
        $ref: "#/definitions/SandboxMetaImport"
      category:
        type: "string"
        example: "cat1"
      family:
        type: "string"
        example: "fam1"
  SandboxLocationImport:
    required:
    - "latitude"
    - "longitude"
    properties:
      latitude:
        type: "number"
        format: "double"
        example: 52.556198
      longitude:
        type: "number"
        format: "double"
        example: 13.384099
  SandboxLicenseImport:
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        example: "pddl"
      name:
        type: "string"
        example: "Open Data Commons Public Domain Dedication and License (PDDL)"
  SandboxAddressImport:
    required:
    - "city"
    - "country_code"
    - "county"
    - "line_1"
    - "line_2"
    - "line_3"
    - "post_code"
    - "state"
    properties:
      city:
        type: "string"
        example: "Ashbourne"
      line_2:
        type: "string"
        example: "Rosy Place"
      state:
        type: "string"
        example: ""
      post_code:
        type: "string"
        example: "WHY RU4"
      county:
        type: "string"
        example: "Derbyshire"
      country_code:
        type: "string"
        example: "UK"
      line_3:
        type: "string"
        example: "Sunny Village"
      line_1:
        type: "string"
        example: "5 Some Street"
  SandboxCustomerImport:
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "string"
        example: "698761728934"
  SandboxBranchImport:
    required:
    - "address"
    - "bank_id"
    - "id"
    - "location"
    - "meta"
    - "name"
    properties:
      name:
        type: "string"
        example: "Genel Müdürlük"
      location:
        $ref: "#/definitions/SandboxLocationImport"
      driveUp:
        $ref: "#/definitions/SandboxDriveUpImport"
      bank_id:
        type: "string"
        example: "bank1"
      id:
        type: "string"
        example: "branch1"
      meta:
        $ref: "#/definitions/SandboxMetaImport"
      lobby:
        $ref: "#/definitions/SandboxLobbyImport"
      address:
        $ref: "#/definitions/SandboxAddressImport"
  SandboxMetaImport:
    required:
    - "license"
    properties:
      license:
        $ref: "#/definitions/SandboxLicenseImport"
  SandboxAtmImport:
    required:
    - "address"
    - "bank_id"
    - "id"
    - "location"
    - "meta"
    - "name"
    properties:
      name:
        type: "string"
        example: "Ashbourne Atm 1"
      location:
        $ref: "#/definitions/SandboxLocationImport"
      bank_id:
        type: "string"
        example: "bank1"
      id:
        type: "string"
        example: "atm1"
      meta:
        $ref: "#/definitions/SandboxMetaImport"
      address:
        $ref: "#/definitions/SandboxAddressImport"
  SandboxDriveUpImport:
    required:
    - "hours"
    properties:
      hours:
        type: "string"
        example: "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
  SandboxDataImport:
    required:
    - "accounts"
    - "atms"
    - "banks"
    - "branches"
    - "crm_events"
    - "products"
    - "transactions"
    - "users"
    properties:
      crm_events:
        type: "array"
        items:
          $ref: "#/definitions/SandboxCrmEventImport"
      users:
        type: "array"
        items:
          $ref: "#/definitions/SandboxUserImport"
      products:
        type: "array"
        items:
          $ref: "#/definitions/SandboxProductImport"
      banks:
        type: "array"
        items:
          $ref: "#/definitions/SandboxBankImport"
      branches:
        type: "array"
        items:
          $ref: "#/definitions/SandboxBranchImport"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/SandboxTransactionImport"
      accounts:
        type: "array"
        items:
          $ref: "#/definitions/SandboxAccountImport"
      atms:
        type: "array"
        items:
          $ref: "#/definitions/SandboxAtmImport"
  FastFirehoseOwners:
    required:
    - "provider"
    - "user_id"
    - "user_name"
    properties:
      user_id:
        type: "string"
        example: "b27327a2-a822-41e5-a909-0150da688939"
      provider:
        type: "string"
        example: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
      user_name:
        type: "string"
        example: ""
    example:
      user_id: "b27327a2-a822-41e5-a909-0150da688939"
      provider: "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891"
      user_name: ""
  FastFirehoseRoutings:
    required:
    - "account_id"
    - "bank_id"
    properties:
      bank_id:
        type: "string"
        example: "bisb.com"
      account_id:
        type: "string"
        example: "c590e38e-847c-466f-9a62-f2ad67daf106"
    example:
      account_id: "c590e38e-847c-466f-9a62-f2ad67daf106"
      bank_id: "bisb.com"
  FastFirehoseAttributes:
    required:
    - "code"
    - "type"
    - "value"
    properties:
      type:
        type: "string"
        example: "INTEGER"
      code:
        type: "string"
        example: "Loan1"
      value:
        type: "string"
        example: "0"
    example:
      code: "Loan1"
      type: "INTEGER"
      value: "0"
  PaymentAccount:
    required:
    - "iban"
    properties:
      iban:
        type: "string"
        example: "GB33BUKB20201555555555"
    example:
      iban: "GB33BUKB20201555555555"
  AttributeJsonV400:
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        example: "country_iso"
      value:
        type: "string"
        example: ""
    example:
      name: "country_iso"
      value: ""
  IbanDetailsJsonV400:
    required:
    - "address"
    - "attributes"
    - "bank"
    - "bank_routings"
    - "branch"
    - "city"
    - "country"
    - "phone"
    - "postcode"
    properties:
      bank_routings:
        type: "array"
        items:
          $ref: "#/definitions/BankRoutingJsonV121"
      city:
        type: "string"
        example: "Frankfurt am Main"
      postcode:
        type: "string"
        example: "60311"
      branch:
        type: "string"
        example: ""
      country:
        type: "string"
        example: "Germany"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/AttributeJsonV400"
      bank:
        type: "string"
        example: "Societe Generale"
      address:
        type: "string"
        example: "Neue mainzer strasse 46-50"
      phone:
        type: "string"
        example: ""
    example:
      country: "Germany"
      bank: "Societe Generale"
      address: "Neue mainzer strasse 46-50"
      city: "Frankfurt am Main"
      phone: ""
      postcode: "60311"
      bank_routings:
      - address: ""
        scheme: "scheme value"
      - address: ""
        scheme: "scheme value"
      attributes:
      - name: "country_iso"
        value: ""
      - name: "country_iso"
        value: ""
      branch: ""
  When:
    required:
    - "detail"
    - "frequency"
    properties:
      frequency:
        type: "string"
        example: "YEARLY"
      detail:
        type: "string"
        example: "LAST_DAY"
    example:
      detail: "LAST_DAY"
      frequency: "YEARLY"
  PostViewJsonV400:
    required:
    - "is_system"
    - "view_id"
    properties:
      view_id:
        type: "string"
        example: "owner"
      is_system:
        type: "boolean"
        example: true
  TransactionRequestBankAccountJson:
    required:
    - "account_id"
    - "bank_id"
    - "transaction_request_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      transaction_request_id:
        type: "string"
        example: "8138a7e4-6d02-40e3-a129-0b2bf89de9f1"
    example:
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      transaction_request_id: "8138a7e4-6d02-40e3-a129-0b2bf89de9f1"
      bank_id: "gh.29.uk"
  TransactionBankAccountJson:
    required:
    - "account_id"
    - "bank_id"
    - "transaction_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      transaction_id:
        type: "string"
        example: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
    example:
      transaction_id: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      account_id: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      bank_id: "gh.29.uk"
  BalanceJsonV400:
    required:
    - "amount"
    - "currency"
    - "type"
    properties:
      type:
        type: "string"
        example: ""
      currency:
        type: "string"
        example: "EUR"
      amount:
        type: "string"
        example: "10"
    example:
      amount: "10"
      currency: "EUR"
      type: ""
  XxxId:
    required:
    - "examples"
    - "maxLength"
    - "minLength"
    - "type"
    properties:
      type:
        type: "string"
        example: "string"
      minLength:
        type: "integer"
        format: "int32"
        example: 2
      maxLength:
        type: "integer"
        format: "int32"
        example: 50
      examples:
        type: "array"
        items:
          type: "string"
    example:
      examples:
      - "examples"
      - "examples"
      minLength: 2
      type: "string"
      maxLength: 50
  Properties:
    required:
    - "xxx_id"
    properties:
      xxx_id:
        $ref: "#/definitions/XxxId"
    example:
      xxx_id:
        examples:
        - "examples"
        - "examples"
        minLength: 2
        type: "string"
        maxLength: 50
  PostConsentViewJsonV310:
    required:
    - "account_id"
    - "bank_id"
    - "view_id"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      account_id:
        type: "string"
        example: "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      view_id:
        type: "string"
        example: "owner"
  PostConsentEntitlementJsonV310:
    required:
    - "bank_id"
    - "role_name"
    properties:
      bank_id:
        type: "string"
        example: "gh.29.uk"
      role_name:
        type: "string"
        example: "CanGetCustomer"
  RefundJson:
    required:
    - "reason_code"
    - "transaction_id"
    properties:
      transaction_id:
        type: "string"
        example: "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
      reason_code:
        type: "string"
        example: "CUST"
  EndpointInfo:
    required:
    - "name"
    - "version"
    properties:
      name:
        type: "string"
        example: "getAccounts"
      version:
        type: "string"
        example: "OBPv3.0.0"
    example:
      name: "getAccounts"
      version: "OBPv3.0.0"
  FieldNameApiVersions: {}
  CurrencyJsonV510:
    required:
    - "alphanumeric_code"
    properties:
      alphanumeric_code:
        type: "string"
        example: "EUR"
    example:
      alphanumeric_code: "EUR"
  TransactionRequestReasonJsonV400:
    required:
    - "code"
    properties:
      description:
        type: "string"
        example: "SEPA payment"
      amount:
        type: "string"
        example: "100"
      code:
        type: "string"
        example: "410"
      document_number:
        type: "string"
        example: "2020/154"
      currency:
        type: "string"
        example: "EUR"
  ContractJsonV500:
    required:
    - "contract_code"
    - "product_code"
    properties:
      form_of_payment:
        type: "string"
      maturity_date:
        type: "string"
      renewal_date:
        type: "string"
      interest_rate:
        type: "string"
      instrument_status_code:
        type: "string"
      product_description:
        type: "string"
      issuance_amount:
        type: "string"
      term:
        type: "string"
      is_substituted:
        type: "string"
      opening_date:
        type: "string"
      payment_method:
        type: "string"
        example: "cache"
      product_code:
        type: "string"
        example: "787LOW"
      branch_code:
        type: "string"
      contract_code:
        type: "string"
        example: "LKJL98769F"
      instrument_status_definition:
        type: "string"
      cancellation_date:
        type: "string"
      interest_amount:
        type: "string"
    example:
      form_of_payment: "form_of_payment"
      issuance_amount: "issuance_amount"
      maturity_date: "maturity_date"
      is_substituted: "is_substituted"
      product_code: "787LOW"
      cancellation_date: "cancellation_date"
      interest_amount: "interest_amount"
      branch_code: "branch_code"
      instrument_status_code: "instrument_status_code"
      renewal_date: "renewal_date"
      contract_code: "LKJL98769F"
      instrument_status_definition: "instrument_status_definition"
      interest_rate: "interest_rate"
      term: "term"
      product_description: "product_description"
      opening_date: "opening_date"
      payment_method: "cache"
  AccountAccessV500:
    required:
    - "account_routing"
    - "view_id"
    properties:
      account_routing:
        $ref: "#/definitions/AccountRoutingJsonV121"
      view_id:
        type: "string"
        example: "owner"
  DynamicEntityFooBar:
    required:
    - "FooBar"
    - "hasPersonalEntity"
    properties:
      dynamicEntityId:
        type: "string"
      hasPersonalEntity:
        type: "boolean"
        example: true
      FooBar:
        $ref: "#/definitions/DynamicEntityDefinition"
      userId:
        type: "string"
      bankId:
        type: "string"
    example:
      bankId: "bankId"
      dynamicEntityId: "dynamicEntityId"
      hasPersonalEntity: true
      userId: "userId"
      FooBar:
        description: "description of this entity, can be markdown text."
        required:
        - "required"
        - "required"
        properties:
          number:
            description: "description of **number** field, can be markdown text."
            type: "number"
            example: 698761728
          name:
            minLength: 3
            description: "description of **name** field, can be markdown text."
            type: "number"
            maxLength: 20
            example: "James Brown"
  MethodRoutingCommons:
    required:
    - "connector_name"
    - "is_bank_id_exact_match"
    - "method_name"
    - "parameters"
    properties:
      is_bank_id_exact_match:
        type: "boolean"
        example: false
      method_name:
        type: "string"
        example: "getBank"
      connector_name:
        type: "string"
        example: "rest_vMar2019"
      method_routing_id:
        type: "string"
      bank_id_pattern:
        type: "string"
        example: "some_bankId_.*"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/MethodRoutingParam"
    example:
      method_routing_id: "method_routing_id"
      method_name: "getBank"
      is_bank_id_exact_match: false
      bank_id_pattern: "some_bankId_.*"
      connector_name: "rest_vMar2019"
      parameters:
      - value: "http://mydomain.com/xxx"
        key: "url"
      - value: "http://mydomain.com/xxx"
        key: "url"
  EmptyClassJson:
    required:
    - "jsonString"
    properties:
      jsonString:
        type: "string"
        example: "{}"
    example:
      jsonString: "{}"
  PostResetPasswordUrlJsonV400:
    required:
    - "email"
    - "user_id"
    - "username"
    properties:
      username:
        type: "string"
        example: "jobloggs"
      email:
        type: "string"
        example: "jo@gmail.com"
      user_id:
        type: "string"
        example: "74a8ebcc-10e4-4036-bef3-9835922246bf"
  PutConsentUserJsonV400:
    required:
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "ed7a7c01-db37-45cc-ba12-0ae8891c195c"
  RegulatedEntityPostJsonV510:
    required:
    - "certificate_authority_ca_owner_id"
    - "entity_address"
    - "entity_certificate_public_key"
    - "entity_code"
    - "entity_country"
    - "entity_name"
    - "entity_post_code"
    - "entity_town_city"
    - "entity_type"
    - "entity_web_site"
    - "services"
    properties:
      services:
        type: "array"
        items:
          $ref: "#/definitions/RegulatedEntityPostJsonV510_services"
      entity_code:
        type: "string"
        example: "PSD_PICY_CBC!12345"
      entity_web_site:
        type: "string"
        example: "www.example.com"
      entity_country:
        type: "string"
        example: "CY"
      entity_certificate_public_key:
        type: "string"
        example: "-----BEGIN CERTIFICATE-----MIICsjCCAZqgAwIBAgIGAYwQ62R0MA0GCSqGSIb3DQEBCwUAMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTAeFw0yMzExMjcxMzE1MTFaFw0yNTExMjYxMzE1MTFaMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9WIodZHWzKyCcf9YfWEhPURbfO6zKuMqzHN27GdqHsVVEGxP4F/J4mso+0ENcRr6ur4u81iREaVdCc40rHDHVJNEtniD8Icbz7tcsqAewIVhc/q6WXGqImJpCq7hA0m247dDsaZT0lb/MVBiMoJxDEmAE/GYYnWTEn84R35WhJsMvuQ7QmLvNg6RkChY6POCT/YKe9NKwa1NqI1U+oA5RFzAaFtytvZCE3jtp+aR0brL7qaGfgxm6B7dEpGyhg0NcVCV7xMQNq2JxZTVdAr6lcsRGaAFulakmW3aNnmK+L35Wu8uW+OxNxwUuC6f3b4FVBa276FMuUTRfu7gc+k6kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAU5CjEyAoyTn7PgFpQD48ZNPuUsEQ19gzYgJvHMzFIoZ7jKBodjO5mCzWBcR7A4mpeAsdyiNBl2sTiZscSnNqxk61jVzP5Ba1D7XtOjjr7+3iqowrThj6BY40QqhYh/6BSY9fDzVZQiHnvlo6ZUM5kUK6OavZOovKlp5DIl5sGqoP0qAJnpQ4nhB2WVVsKfPlOXc+2KSsbJ23g9l8zaTMr+X0umlvfEKqyEl1Fa2L1dO0y/KFQ+ILmxcZLpRdq1hRAjd0quq9qGC8ucXhRWDgM4hslVpau0da68g0aItWNez3mc5lB82b3dcZpFMzO41bgw7gvw10AvvTfQDqEYIuQ==-----END\
          \ CERTIFICATE-----"
      entity_type:
        type: "string"
        example: "PSD_PI"
      entity_post_code:
        type: "string"
        example: "1060"
      entity_name:
        type: "string"
        example: "EXAMPLE COMPANY LTD"
      entity_town_city:
        type: "string"
        example: "SOME CITY"
      entity_address:
        type: "string"
        example: "EXAMPLE COMPANY LTD, 5 SOME STREET"
      certificate_authority_ca_owner_id:
        type: "string"
        example: "CY_CBC"
  CardAttributeJson:
    required:
    - "name"
    - "type"
    - "value"
    properties:
      name:
        type: "string"
        example: "OVERDRAFT_START_DATE"
      type:
        type: "string"
        example: "DOUBLE"
      value:
        type: "string"
        example: "2012-04-23"
  PostConsentChallengeJsonV310:
    required:
    - "answer"
    properties:
      answer:
        type: "string"
        example: "12345678"
  PostUserInvitationAnonymousJsonV400:
    required:
    - "secret_key"
    properties:
      secret_key:
        type: "integer"
        format: "int64"
        example: 5819479115482092878
  WebUiPropsCommons:
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        example: "webui_api_explorer_url"
      value:
        type: "string"
        example: "https://apiexplorer.openbankproject.com"
      web_ui_props_id:
        type: "string"
    example:
      name: "webui_api_explorer_url"
      web_ui_props_id: "web_ui_props_id"
      value: "https://apiexplorer.openbankproject.com"
  ConsumerJwtPostJsonV510:
    required:
    - "jwt"
    properties:
      jwt:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXNjcmlwdGlvbiI6IkRlc2NyaXB0aW9uIn0.qDnzk1dGK8akdLFRl8fmJV_SeoDjRTDG_eMogCIzZ7M"
  PutConsentStatusJsonV400:
    required:
    - "status"
    properties:
      status:
        type: "string"
        example: "AUTHORISED"
  ConsumerPostJSON:
    required:
    - "app_name"
    - "app_type"
    - "clientCertificate"
    - "created"
    - "created_by_user_id"
    - "description"
    - "developer_email"
    - "enabled"
    - "redirect_url"
    properties:
      created_by_user_id:
        type: "string"
        example: "createdby"
      app_type:
        type: "string"
        example: "Test"
      description:
        type: "string"
        example: "Description"
      enabled:
        type: "boolean"
        example: true
      redirect_url:
        type: "string"
        example: "redirecturl"
      developer_email:
        type: "string"
        example: "some@email.com"
      clientCertificate:
        type: "string"
        example: "-----BEGIN CERTIFICATE-----\nclient_certificate_content\n-----END\
          \ CERTIFICATE-----"
      app_name:
        type: "string"
        example: "Test"
      created:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:56Z"
  Full:
    required:
    - "value"
    properties:
      value:
        type: "boolean"
        example: true
    example:
      value: true
  CheckSystemIntegrityJsonV510:
    required:
    - "success"
    properties:
      success:
        type: "boolean"
        example: true
      debug_info:
        type: "string"
    example:
      debug_info: "debug_info"
      success: true
  ResetPasswordUrlJsonV400:
    required:
    - "reset_password_url"
    properties:
      reset_password_url:
        type: "string"
        example: "https://apisandbox.openbankproject.com/user_mgt/reset_password/QOL1CPNJPCZ4BRMPX3Z01DPOX1HMGU3L"
    example:
      reset_password_url: "https://apisandbox.openbankproject.com/user_mgt/reset_password/QOL1CPNJPCZ4BRMPX3Z01DPOX1HMGU3L"
  CertificateInfoJsonV510:
    required:
    - "issuer_domain_name"
    - "not_after"
    - "not_before"
    - "subject_domain_name"
    properties:
      subject_domain_name:
        type: "string"
        example: "OID.2.5.4.41=VPN, EMAILADDRESS=admin@tesobe.com, CN=TESOBE CA, OU=TESOBE\
          \ Operations, O=TESOBE, L=Berlin, ST=Berlin, C=DE"
      not_before:
        type: "string"
        example: "2022-04-01T10:13:00.000Z"
      roles_info:
        type: "string"
        example: "PEM Encoded Certificate does not contain PSD2 roles."
      roles:
        type: "array"
        items:
          type: "string"
      issuer_domain_name:
        type: "string"
        example: "CN=localhost, O=TESOBE GmbH, ST=Berlin, C=DE"
      not_after:
        type: "string"
        example: "2032-04-01T10:13:00.000Z"
    example:
      not_after: "2032-04-01T10:13:00.000Z"
      not_before: "2022-04-01T10:13:00.000Z"
      roles:
      - "roles"
      - "roles"
      subject_domain_name: "OID.2.5.4.41=VPN, EMAILADDRESS=admin@tesobe.com, CN=TESOBE\
        \ CA, OU=TESOBE Operations, O=TESOBE, L=Berlin, ST=Berlin, C=DE"
      issuer_domain_name: "CN=localhost, O=TESOBE GmbH, ST=Berlin, C=DE"
      roles_info: "PEM Encoded Certificate does not contain PSD2 roles."
  ConsentChallengeJsonV310:
    required:
    - "consent_id"
    - "jwt"
    - "status"
    properties:
      consent_id:
        type: "string"
        example: "9d429899-24f5-42c8-8565-943ffa6a7945"
      jwt:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      status:
        type: "string"
        example: "AUTHORISED"
    example:
      jwt: "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
      consent_id: "9d429899-24f5-42c8-8565-943ffa6a7945"
      status: "AUTHORISED"
  JsonAuthTypeValidation:
    required:
    - "authTypes"
    - "operationId"
    properties:
      operationId:
        type: "string"
        example: "OBPv4.0.0-updateXxx"
      authTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "DirectLogin"
          - "OAuth1.0a"
          - "GatewayLogin"
          - "DAuth"
          - "OAuth2_OIDC"
          - "OAuth2_OIDC_FAPI"
          - "Anonymous"
    example:
      operationId: "OBPv4.0.0-updateXxx"
      authTypes:
      - "DirectLogin"
      - "DirectLogin"
  ResourceDocsJson:
    required:
    - "resource_docs"
    properties:
      resource_docs:
        type: "array"
        items:
          $ref: "#/definitions/ResourceDocJson"
      meta:
        $ref: "#/definitions/ResourceDocMeta"
    example:
      resource_docs:
      - request_verb: "GET"
        summary: "Test Resource Doc"
        special_instructions: ""
        description_markdown: "I am only a test Resource Doc\n\nAuthentication is\
          \ Mandatory\n\n\n**JSON response body fields:**\n\n\n"
        roles:
        - role: "CanGetCustomers"
          requires_bank_id: true
        - role: "CanGetCustomers"
          requires_bank_id: true
        description: "<p>I am only a test Resource Doc</p>\n<p>Authentication is Mandatory</p>\n\
          <p><strong>JSON response body fields:</strong></p>\n"
        typed_request_body:
          type: "object"
          properties:
            jsonString:
              type: "string"
        success_response_body: ""
        created_by_bank_id: "created_by_bank_id"
        request_url: "/dummy"
        typed_success_response_body:
          type: "object"
          properties:
            jsonString:
              type: "string"
        tags:
        - "tags"
        - "tags"
        implemented_by:
          function: "getBranches"
          version: "1_4_0"
        specified_url: ""
        error_response_bodies:
        - "error_response_bodies"
        - "error_response_bodies"
        operation_id: "OBPv1.4.0-testResourceDoc"
        example_request_body: ""
        is_featured: false
        connector_methods:
        - "connector_methods"
        - "connector_methods"
      - request_verb: "GET"
        summary: "Test Resource Doc"
        special_instructions: ""
        description_markdown: "I am only a test Resource Doc\n\nAuthentication is\
          \ Mandatory\n\n\n**JSON response body fields:**\n\n\n"
        roles:
        - role: "CanGetCustomers"
          requires_bank_id: true
        - role: "CanGetCustomers"
          requires_bank_id: true
        description: "<p>I am only a test Resource Doc</p>\n<p>Authentication is Mandatory</p>\n\
          <p><strong>JSON response body fields:</strong></p>\n"
        typed_request_body:
          type: "object"
          properties:
            jsonString:
              type: "string"
        success_response_body: ""
        created_by_bank_id: "created_by_bank_id"
        request_url: "/dummy"
        typed_success_response_body:
          type: "object"
          properties:
            jsonString:
              type: "string"
        tags:
        - "tags"
        - "tags"
        implemented_by:
          function: "getBranches"
          version: "1_4_0"
        specified_url: ""
        error_response_bodies:
        - "error_response_bodies"
        - "error_response_bodies"
        operation_id: "OBPv1.4.0-testResourceDoc"
        example_request_body: ""
        is_featured: false
        connector_methods:
        - "connector_methods"
        - "connector_methods"
      meta:
        response_date: "2024-02-05T14:15:57Z"
        count: 1
  SuggestedSessionTimeoutV510:
    required:
    - "timeout_in_seconds"
    properties:
      timeout_in_seconds:
        type: "string"
        example: "300"
    example:
      timeout_in_seconds: "300"
  RegulatedEntitiesJsonV510:
    required:
    - "entities"
    properties:
      entities:
        type: "array"
        items:
          $ref: "#/definitions/RegulatedEntityJsonV510"
    example:
      entities:
      - entity_type: "PSD_PI"
        entity_code: "PSD_PICY_CBC!12345"
        entity_post_code: "1060"
        entity_name: "EXAMPLE COMPANY LTD"
        entity_certificate_public_key: "-----BEGIN CERTIFICATE-----MIICsjCCAZqgAwIBAgIGAYwQ62R0MA0GCSqGSIb3DQEBCwUAMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTAeFw0yMzExMjcxMzE1MTFaFw0yNTExMjYxMzE1MTFaMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9WIodZHWzKyCcf9YfWEhPURbfO6zKuMqzHN27GdqHsVVEGxP4F/J4mso+0ENcRr6ur4u81iREaVdCc40rHDHVJNEtniD8Icbz7tcsqAewIVhc/q6WXGqImJpCq7hA0m247dDsaZT0lb/MVBiMoJxDEmAE/GYYnWTEn84R35WhJsMvuQ7QmLvNg6RkChY6POCT/YKe9NKwa1NqI1U+oA5RFzAaFtytvZCE3jtp+aR0brL7qaGfgxm6B7dEpGyhg0NcVCV7xMQNq2JxZTVdAr6lcsRGaAFulakmW3aNnmK+L35Wu8uW+OxNxwUuC6f3b4FVBa276FMuUTRfu7gc+k6kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAU5CjEyAoyTn7PgFpQD48ZNPuUsEQ19gzYgJvHMzFIoZ7jKBodjO5mCzWBcR7A4mpeAsdyiNBl2sTiZscSnNqxk61jVzP5Ba1D7XtOjjr7+3iqowrThj6BY40QqhYh/6BSY9fDzVZQiHnvlo6ZUM5kUK6OavZOovKlp5DIl5sGqoP0qAJnpQ4nhB2WVVsKfPlOXc+2KSsbJ23g9l8zaTMr+X0umlvfEKqyEl1Fa2L1dO0y/KFQ+ILmxcZLpRdq1hRAjd0quq9qGC8ucXhRWDgM4hslVpau0da68g0aItWNez3mc5lB82b3dcZpFMzO41bgw7gvw10AvvTfQDqEYIuQ==-----END\
          \ CERTIFICATE-----"
        entity_address: "EXAMPLE COMPANY LTD, 5 SOME STREET"
        entity_country: "CY"
        certificate_authority_ca_owner_id: "CY_CBC"
        services:
        - CY:
          - "PS_010"
          - "PS_010"
        - CY:
          - "PS_010"
          - "PS_010"
        entity_web_site: "www.example.com"
        entity_id: "0af807d7-3c39-43ef-9712-82bcfde1b9ca"
        entity_town_city: "SOME CITY"
      - entity_type: "PSD_PI"
        entity_code: "PSD_PICY_CBC!12345"
        entity_post_code: "1060"
        entity_name: "EXAMPLE COMPANY LTD"
        entity_certificate_public_key: "-----BEGIN CERTIFICATE-----MIICsjCCAZqgAwIBAgIGAYwQ62R0MA0GCSqGSIb3DQEBCwUAMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTAeFw0yMzExMjcxMzE1MTFaFw0yNTExMjYxMzE1MTFaMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9WIodZHWzKyCcf9YfWEhPURbfO6zKuMqzHN27GdqHsVVEGxP4F/J4mso+0ENcRr6ur4u81iREaVdCc40rHDHVJNEtniD8Icbz7tcsqAewIVhc/q6WXGqImJpCq7hA0m247dDsaZT0lb/MVBiMoJxDEmAE/GYYnWTEn84R35WhJsMvuQ7QmLvNg6RkChY6POCT/YKe9NKwa1NqI1U+oA5RFzAaFtytvZCE3jtp+aR0brL7qaGfgxm6B7dEpGyhg0NcVCV7xMQNq2JxZTVdAr6lcsRGaAFulakmW3aNnmK+L35Wu8uW+OxNxwUuC6f3b4FVBa276FMuUTRfu7gc+k6kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAU5CjEyAoyTn7PgFpQD48ZNPuUsEQ19gzYgJvHMzFIoZ7jKBodjO5mCzWBcR7A4mpeAsdyiNBl2sTiZscSnNqxk61jVzP5Ba1D7XtOjjr7+3iqowrThj6BY40QqhYh/6BSY9fDzVZQiHnvlo6ZUM5kUK6OavZOovKlp5DIl5sGqoP0qAJnpQ4nhB2WVVsKfPlOXc+2KSsbJ23g9l8zaTMr+X0umlvfEKqyEl1Fa2L1dO0y/KFQ+ILmxcZLpRdq1hRAjd0quq9qGC8ucXhRWDgM4hslVpau0da68g0aItWNez3mc5lB82b3dcZpFMzO41bgw7gvw10AvvTfQDqEYIuQ==-----END\
          \ CERTIFICATE-----"
        entity_address: "EXAMPLE COMPANY LTD, 5 SOME STREET"
        entity_country: "CY"
        certificate_authority_ca_owner_id: "CY_CBC"
        services:
        - CY:
          - "PS_010"
          - "PS_010"
        - CY:
          - "PS_010"
          - "PS_010"
        entity_web_site: "www.example.com"
        entity_id: "0af807d7-3c39-43ef-9712-82bcfde1b9ca"
        entity_town_city: "SOME CITY"
  WaitingForGodotJsonV510:
    required:
    - "sleep_in_milliseconds"
    properties:
      sleep_in_milliseconds:
        type: "integer"
        format: "int64"
        example: 50
    example:
      sleep_in_milliseconds: 50
  ConsumerJsonV510:
    required:
    - "app_name"
    - "app_type"
    - "certificate_pem"
    - "company"
    - "consumer_id"
    - "consumer_key"
    - "consumer_secret"
    - "created"
    - "created_by_user"
    - "description"
    - "developer_email"
    - "enabled"
    - "redirect_url"
    properties:
      app_type:
        type: "string"
        example: "Web"
      consumer_secret:
        type: "string"
        example: "d0d7b08c-f0ec-4e57-ac99-7d9eafe99225"
      description:
        type: "string"
        example: "Account Management"
      certificate_pem:
        type: "string"
        example: "-----BEGIN CERTIFICATE-----\nMIIFIjCCBAqgAwIBAgIIX3qsz7QQxngwDQYJKoZIhvcNAQELBQAwgZ8xCzAJBgNV\r\
          \nBAYTAkRFMQ8wDQYDVQQIEwZCZXJsaW4xDzANBgNVBAcTBkJlcmxpbjEPMA0GA1UE\r\nChMGVEVTT0JFMRowGAYDVQQLExFURVNPQkUgT3BlcmF0aW9uczESMBAGA1UEAxMJ\r\
          \nVEVTT0JFIENBMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkB0ZXNvYmUuY29tMQwwCgYD\r\nVQQpEwNWUE4wHhcNMjMwNzE3MDg0MDAwWhcNMjQwNzE3MDg0MDAwWjCBizELMAkG\r\
          \nA1UEBhMCREUxDzANBgNVBAgTBkJlcmxpbjEPMA0GA1UEBxMGQmVybGluMRQwEgYD\r\nVQQKEwtUZXNvYmUgR21iSDEPMA0GA1UECxMGc3lzb3BzMRIwEAYDVQQDEwlsb2Nh\r\
          \nbGhvc3QxHzAdBgkqhkiG9w0BCQEWEGFkbWluQHRlc29iZS5jb20wggEiMA0GCSqG\r\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwxGuWUN1H0d0IeYPYWdLA0I/5BXx4DLO6\r\
          \nzfi1GGJlF8BIXRN0VTJckIY9C3J1RnXDs6p6ufA01iHe1PQdL6VzfcaC3j+jUSgV\r\n1z9ybEUPyUwq3PCCxqoVI9n8yh+O6FDn3dvu/9Q2NtBpJHUBDCLf7OO9TgsFU2sE\r\
          \nMys+Hw5DuuX5n5OQ2VIwH+qlMTQnd+yw5y8FKHqAZT5hE60lF/x6sQnwi58hLGRW\r\nSqo/548c2ZpoeWtnyY1I6PyR7zUYGuhruLY8gVFfLE+610u/lj2wYTXMxntpV+tV\r\
          \nralLFRMhvbqZXW/EpuDb/pEbCnLDNDxq5NarLVDzcHs7VhT9MPChAgMBAAGjggFy\r\nMIIBbjATBgNVHSUEDDAKBggrBgEFBQcDAjAaBgNVHREEEzARgglsb2NhbGhvc3SH\r\
          \nBH8AAAEwggEGBggrBgEFBQcBAwSB+TCB9jAIBgYEAI5GAQEwOAYGBACORgEFMC4w\r\nLBYhaHR0cHM6Ly9leGFtcGxlLm9yZy9wa2lkaXNjbG9zdXJlEwdleGFtcGxlMIGI\r\
          \nBgYEAIGYJwIwfjBMMBEGBwQAgZgnAQMMBlBTUF9BSTARBgcEAIGYJwEBDAZQU1Bf\r\nQVMwEQYHBACBmCcBAgwGUFNQX1BJMBEGBwQAgZgnAQQMBlBTUF9JQwwlRHVtbXkg\r\
          \nRmluYW5jaWFsIFN1cGVydmlzaW9uIEF1dGhvcml0eQwHWFgtREZTQTAlBgYEAI5G\r\nAQYwGwYHBACORgEGAQYHBACORgEGAgYHBACORgEGAzARBglghkgBhvhCAQEEBAMC\r\
          \nB4AwHgYJYIZIAYb4QgENBBEWD3hjYSBjZXJ0aWZpY2F0ZTANBgkqhkiG9w0BAQsF\r\nAAOCAQEAKTS7exS9A7rWJLRzWrlHoTu68Avm5g9Dz1GKjgt8rnvj3D21SE14Rf5p\r\
          \n0JWHYH4SiCdnh8Tx+IA7o0TmPJ1JRfAXR3i/5R7TJi/HrnqL+V7SIx2Cuq/hkZEU\r\nAhVs07nnvHURcrlQGwcfn4TbgpCURpCPpYZlNsYySb6BS6I4qFaadHGqMTyEkphV\r\
          \nwfXyB3brmzxj9V4Qgp0t+s/uFuFirWyIayRc9nSSC7vuNVYvib2Kim4y8kvuWpA4\r\nZ51+fFOmBqCqpmwfAADNgDsLJiA/741eBflVd/ZUeAzgOjMCMIaDGlwiwZlePKT7\r\
          \n553GtfsGxZMf05oqfUrQEQfJaU+/+Q==\n-----END CERTIFICATE-----\n"
      created_by_user:
        $ref: "#/definitions/ResourceUserJSON"
      enabled:
        type: "boolean"
        example: true
      consumer_key:
        type: "string"
        example: "d0d7b08c-f0ec-4e57-ac99-7d9eafe99225"
      certificate_info:
        $ref: "#/definitions/CertificateInfoJsonV510"
      redirect_url:
        type: "string"
        example: "www.openbankproject.com"
      company:
        type: "string"
        example: "Tesobe GmbH"
      developer_email:
        type: "string"
        example: "felixsmith@example.com"
      consumer_id:
        type: "string"
        example: "d0d7b08c-f0ec-4e57-ac99-7d9eafe99225"
      app_name:
        type: "string"
        example: "SOFI"
      created:
        type: "string"
        format: "date"
        example: "1100-01-01T00:00:00Z"
    example:
      app_type: "Web"
      consumer_secret: "d0d7b08c-f0ec-4e57-ac99-7d9eafe99225"
      certificate_pem: "-----BEGIN CERTIFICATE-----\nMIIFIjCCBAqgAwIBAgIIX3qsz7QQxngwDQYJKoZIhvcNAQELBQAwgZ8xCzAJBgNV\r\
        \nBAYTAkRFMQ8wDQYDVQQIEwZCZXJsaW4xDzANBgNVBAcTBkJlcmxpbjEPMA0GA1UE\r\nChMGVEVTT0JFMRowGAYDVQQLExFURVNPQkUgT3BlcmF0aW9uczESMBAGA1UEAxMJ\r\
        \nVEVTT0JFIENBMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkB0ZXNvYmUuY29tMQwwCgYD\r\nVQQpEwNWUE4wHhcNMjMwNzE3MDg0MDAwWhcNMjQwNzE3MDg0MDAwWjCBizELMAkG\r\
        \nA1UEBhMCREUxDzANBgNVBAgTBkJlcmxpbjEPMA0GA1UEBxMGQmVybGluMRQwEgYD\r\nVQQKEwtUZXNvYmUgR21iSDEPMA0GA1UECxMGc3lzb3BzMRIwEAYDVQQDEwlsb2Nh\r\
        \nbGhvc3QxHzAdBgkqhkiG9w0BCQEWEGFkbWluQHRlc29iZS5jb20wggEiMA0GCSqG\r\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwxGuWUN1H0d0IeYPYWdLA0I/5BXx4DLO6\r\
        \nzfi1GGJlF8BIXRN0VTJckIY9C3J1RnXDs6p6ufA01iHe1PQdL6VzfcaC3j+jUSgV\r\n1z9ybEUPyUwq3PCCxqoVI9n8yh+O6FDn3dvu/9Q2NtBpJHUBDCLf7OO9TgsFU2sE\r\
        \nMys+Hw5DuuX5n5OQ2VIwH+qlMTQnd+yw5y8FKHqAZT5hE60lF/x6sQnwi58hLGRW\r\nSqo/548c2ZpoeWtnyY1I6PyR7zUYGuhruLY8gVFfLE+610u/lj2wYTXMxntpV+tV\r\
        \nralLFRMhvbqZXW/EpuDb/pEbCnLDNDxq5NarLVDzcHs7VhT9MPChAgMBAAGjggFy\r\nMIIBbjATBgNVHSUEDDAKBggrBgEFBQcDAjAaBgNVHREEEzARgglsb2NhbGhvc3SH\r\
        \nBH8AAAEwggEGBggrBgEFBQcBAwSB+TCB9jAIBgYEAI5GAQEwOAYGBACORgEFMC4w\r\nLBYhaHR0cHM6Ly9leGFtcGxlLm9yZy9wa2lkaXNjbG9zdXJlEwdleGFtcGxlMIGI\r\
        \nBgYEAIGYJwIwfjBMMBEGBwQAgZgnAQMMBlBTUF9BSTARBgcEAIGYJwEBDAZQU1Bf\r\nQVMwEQYHBACBmCcBAgwGUFNQX1BJMBEGBwQAgZgnAQQMBlBTUF9JQwwlRHVtbXkg\r\
        \nRmluYW5jaWFsIFN1cGVydmlzaW9uIEF1dGhvcml0eQwHWFgtREZTQTAlBgYEAI5G\r\nAQYwGwYHBACORgEGAQYHBACORgEGAgYHBACORgEGAzARBglghkgBhvhCAQEEBAMC\r\
        \nB4AwHgYJYIZIAYb4QgENBBEWD3hjYSBjZXJ0aWZpY2F0ZTANBgkqhkiG9w0BAQsF\r\nAAOCAQEAKTS7exS9A7rWJLRzWrlHoTu68Avm5g9Dz1GKjgt8rnvj3D21SE14Rf5p\r\
        \n0JWHYH4SiCdnh8Tx+IA7o0TmPJ1JRfAXR3i/5R7TJi/HrnqL+V7SIx2Cuq/hkZEU\r\nAhVs07nnvHURcrlQGwcfn4TbgpCURpCPpYZlNsYySb6BS6I4qFaadHGqMTyEkphV\r\
        \nwfXyB3brmzxj9V4Qgp0t+s/uFuFirWyIayRc9nSSC7vuNVYvib2Kim4y8kvuWpA4\r\nZ51+fFOmBqCqpmwfAADNgDsLJiA/741eBflVd/ZUeAzgOjMCMIaDGlwiwZlePKT7\r\
        \n553GtfsGxZMf05oqfUrQEQfJaU+/+Q==\n-----END CERTIFICATE-----\n"
      created: "1100-01-01T00:00:00Z"
      description: "Account Management"
      enabled: true
      created_by_user:
        provider: "http://127.0.0.1:8080"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        provider_id: "Chris"
        email: "felixsmith@example.com"
        username: "felixsmith"
      certificate_info:
        not_after: "2032-04-01T10:13:00.000Z"
        not_before: "2022-04-01T10:13:00.000Z"
        roles:
        - "roles"
        - "roles"
        subject_domain_name: "OID.2.5.4.41=VPN, EMAILADDRESS=admin@tesobe.com, CN=TESOBE\
          \ CA, OU=TESOBE Operations, O=TESOBE, L=Berlin, ST=Berlin, C=DE"
        issuer_domain_name: "CN=localhost, O=TESOBE GmbH, ST=Berlin, C=DE"
        roles_info: "PEM Encoded Certificate does not contain PSD2 roles."
      consumer_key: "d0d7b08c-f0ec-4e57-ac99-7d9eafe99225"
      consumer_id: "d0d7b08c-f0ec-4e57-ac99-7d9eafe99225"
      app_name: "SOFI"
      developer_email: "felixsmith@example.com"
      company: "Tesobe GmbH"
      redirect_url: "www.openbankproject.com"
  DynamicEntityStringTypeExample:
    required:
    - "description"
    - "example"
    - "maxLength"
    - "minLength"
    - "type"
    properties:
      description:
        type: "string"
        example: "description of **name** field, can be markdown text."
      minLength:
        type: "integer"
        format: "int32"
        example: 3
      type:
        type: "string"
        enum:
        - "number"
        - "integer"
        - "boolean"
        - "string"
        - "DATE_WITH_DAY"
      example:
        type: "string"
        example: "James Brown"
      maxLength:
        type: "integer"
        format: "int32"
        example: 20
    example:
      minLength: 3
      description: "description of **name** field, can be markdown text."
      type: "number"
      maxLength: 20
      example: "James Brown"
  DynamicEntityIntTypeExample:
    required:
    - "description"
    - "example"
    - "type"
    properties:
      type:
        type: "string"
        enum:
        - "number"
        - "integer"
        - "boolean"
        - "string"
        - "DATE_WITH_DAY"
      example:
        type: "integer"
        format: "int32"
        example: 698761728
      description:
        type: "string"
        example: "description of **number** field, can be markdown text."
    example:
      description: "description of **number** field, can be markdown text."
      type: "number"
      example: 698761728
  DynamicEntityFullBarFields:
    required:
    - "name"
    - "number"
    properties:
      name:
        $ref: "#/definitions/DynamicEntityStringTypeExample"
      number:
        $ref: "#/definitions/DynamicEntityIntTypeExample"
    example:
      number:
        description: "description of **number** field, can be markdown text."
        type: "number"
        example: 698761728
      name:
        minLength: 3
        description: "description of **name** field, can be markdown text."
        type: "number"
        maxLength: 20
        example: "James Brown"
  DynamicEntityDefinition:
    required:
    - "description"
    - "properties"
    - "required"
    properties:
      description:
        type: "string"
        example: "description of this entity, can be markdown text."
      required:
        type: "array"
        items:
          type: "string"
      properties:
        $ref: "#/definitions/DynamicEntityFullBarFields"
    example:
      description: "description of this entity, can be markdown text."
      required:
      - "required"
      - "required"
      properties:
        number:
          description: "description of **number** field, can be markdown text."
          type: "number"
          example: 698761728
        name:
          minLength: 3
          description: "description of **name** field, can be markdown text."
          type: "number"
          maxLength: 20
          example: "James Brown"
  MethodRoutingParam:
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        example: "url"
      value:
        type: "string"
        example: "http://mydomain.com/xxx"
    example:
      value: "http://mydomain.com/xxx"
      key: "url"
  ApiRoleCommons:
    required:
    - "requires_bank_id"
    - "role"
    properties:
      role:
        type: "string"
        example: "CanGetCustomers"
      requires_bank_id:
        type: "boolean"
        example: true
    example:
      role: "CanGetCustomers"
      requires_bank_id: true
  ResourceDocJson:
    required:
    - "connector_methods"
    - "description"
    - "description_markdown"
    - "error_response_bodies"
    - "example_request_body"
    - "implemented_by"
    - "is_featured"
    - "operation_id"
    - "request_url"
    - "request_verb"
    - "special_instructions"
    - "specified_url"
    - "success_response_body"
    - "summary"
    - "tags"
    - "typed_request_body"
    - "typed_success_response_body"
    properties:
      error_response_bodies:
        type: "array"
        items:
          type: "string"
      request_verb:
        type: "string"
        example: "GET"
      request_url:
        type: "string"
        example: "/dummy"
      description:
        type: "string"
        example: "<p>I am only a test Resource Doc</p>\n<p>Authentication is Mandatory</p>\n\
          <p><strong>JSON response body fields:</strong></p>\n"
      tags:
        type: "array"
        items:
          type: "string"
      success_response_body:
        $ref: "#/definitions/JObject"
      created_by_bank_id:
        type: "string"
      connector_methods:
        type: "array"
        items:
          type: "string"
      example_request_body:
        $ref: "#/definitions/JObject"
      typed_success_response_body:
        $ref: "#/definitions/ResourceDocJson_typed_success_response_body"
      special_instructions:
        type: "string"
        example: ""
      is_featured:
        type: "boolean"
        example: false
      roles:
        type: "array"
        items:
          $ref: "#/definitions/ApiRoleCommons"
      operation_id:
        type: "string"
        example: "OBPv1.4.0-testResourceDoc"
      implemented_by:
        $ref: "#/definitions/ImplementedByJson"
      specified_url:
        type: "string"
        example: ""
      description_markdown:
        type: "string"
        example: "I am only a test Resource Doc\n\nAuthentication is Mandatory\n\n\
          \n**JSON response body fields:**\n\n\n"
      typed_request_body:
        $ref: "#/definitions/ResourceDocJson_typed_success_response_body"
      summary:
        type: "string"
        example: "Test Resource Doc"
    example:
      request_verb: "GET"
      summary: "Test Resource Doc"
      special_instructions: ""
      description_markdown: "I am only a test Resource Doc\n\nAuthentication is Mandatory\n\
        \n\n**JSON response body fields:**\n\n\n"
      roles:
      - role: "CanGetCustomers"
        requires_bank_id: true
      - role: "CanGetCustomers"
        requires_bank_id: true
      description: "<p>I am only a test Resource Doc</p>\n<p>Authentication is Mandatory</p>\n\
        <p><strong>JSON response body fields:</strong></p>\n"
      typed_request_body:
        type: "object"
        properties:
          jsonString:
            type: "string"
      success_response_body: ""
      created_by_bank_id: "created_by_bank_id"
      request_url: "/dummy"
      typed_success_response_body:
        type: "object"
        properties:
          jsonString:
            type: "string"
      tags:
      - "tags"
      - "tags"
      implemented_by:
        function: "getBranches"
        version: "1_4_0"
      specified_url: ""
      error_response_bodies:
      - "error_response_bodies"
      - "error_response_bodies"
      operation_id: "OBPv1.4.0-testResourceDoc"
      example_request_body: ""
      is_featured: false
      connector_methods:
      - "connector_methods"
      - "connector_methods"
  RegulatedEntityJsonV510:
    required:
    - "certificate_authority_ca_owner_id"
    - "entity_address"
    - "entity_certificate_public_key"
    - "entity_code"
    - "entity_country"
    - "entity_id"
    - "entity_name"
    - "entity_post_code"
    - "entity_town_city"
    - "entity_type"
    - "entity_web_site"
    - "services"
    properties:
      services:
        type: "array"
        items:
          $ref: "#/definitions/RegulatedEntityPostJsonV510_services"
      entity_code:
        type: "string"
        example: "PSD_PICY_CBC!12345"
      entity_web_site:
        type: "string"
        example: "www.example.com"
      entity_country:
        type: "string"
        example: "CY"
      entity_certificate_public_key:
        type: "string"
        example: "-----BEGIN CERTIFICATE-----MIICsjCCAZqgAwIBAgIGAYwQ62R0MA0GCSqGSIb3DQEBCwUAMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTAeFw0yMzExMjcxMzE1MTFaFw0yNTExMjYxMzE1MTFaMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9WIodZHWzKyCcf9YfWEhPURbfO6zKuMqzHN27GdqHsVVEGxP4F/J4mso+0ENcRr6ur4u81iREaVdCc40rHDHVJNEtniD8Icbz7tcsqAewIVhc/q6WXGqImJpCq7hA0m247dDsaZT0lb/MVBiMoJxDEmAE/GYYnWTEn84R35WhJsMvuQ7QmLvNg6RkChY6POCT/YKe9NKwa1NqI1U+oA5RFzAaFtytvZCE3jtp+aR0brL7qaGfgxm6B7dEpGyhg0NcVCV7xMQNq2JxZTVdAr6lcsRGaAFulakmW3aNnmK+L35Wu8uW+OxNxwUuC6f3b4FVBa276FMuUTRfu7gc+k6kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAU5CjEyAoyTn7PgFpQD48ZNPuUsEQ19gzYgJvHMzFIoZ7jKBodjO5mCzWBcR7A4mpeAsdyiNBl2sTiZscSnNqxk61jVzP5Ba1D7XtOjjr7+3iqowrThj6BY40QqhYh/6BSY9fDzVZQiHnvlo6ZUM5kUK6OavZOovKlp5DIl5sGqoP0qAJnpQ4nhB2WVVsKfPlOXc+2KSsbJ23g9l8zaTMr+X0umlvfEKqyEl1Fa2L1dO0y/KFQ+ILmxcZLpRdq1hRAjd0quq9qGC8ucXhRWDgM4hslVpau0da68g0aItWNez3mc5lB82b3dcZpFMzO41bgw7gvw10AvvTfQDqEYIuQ==-----END\
          \ CERTIFICATE-----"
      entity_type:
        type: "string"
        example: "PSD_PI"
      entity_post_code:
        type: "string"
        example: "1060"
      entity_name:
        type: "string"
        example: "EXAMPLE COMPANY LTD"
      entity_town_city:
        type: "string"
        example: "SOME CITY"
      entity_address:
        type: "string"
        example: "EXAMPLE COMPANY LTD, 5 SOME STREET"
      entity_id:
        type: "string"
        example: "0af807d7-3c39-43ef-9712-82bcfde1b9ca"
      certificate_authority_ca_owner_id:
        type: "string"
        example: "CY_CBC"
    example:
      entity_type: "PSD_PI"
      entity_code: "PSD_PICY_CBC!12345"
      entity_post_code: "1060"
      entity_name: "EXAMPLE COMPANY LTD"
      entity_certificate_public_key: "-----BEGIN CERTIFICATE-----MIICsjCCAZqgAwIBAgIGAYwQ62R0MA0GCSqGSIb3DQEBCwUAMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTAeFw0yMzExMjcxMzE1MTFaFw0yNTExMjYxMzE1MTFaMBoxGDAWBgNVBAMMD2FwcC5leGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9WIodZHWzKyCcf9YfWEhPURbfO6zKuMqzHN27GdqHsVVEGxP4F/J4mso+0ENcRr6ur4u81iREaVdCc40rHDHVJNEtniD8Icbz7tcsqAewIVhc/q6WXGqImJpCq7hA0m247dDsaZT0lb/MVBiMoJxDEmAE/GYYnWTEn84R35WhJsMvuQ7QmLvNg6RkChY6POCT/YKe9NKwa1NqI1U+oA5RFzAaFtytvZCE3jtp+aR0brL7qaGfgxm6B7dEpGyhg0NcVCV7xMQNq2JxZTVdAr6lcsRGaAFulakmW3aNnmK+L35Wu8uW+OxNxwUuC6f3b4FVBa276FMuUTRfu7gc+k6kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAU5CjEyAoyTn7PgFpQD48ZNPuUsEQ19gzYgJvHMzFIoZ7jKBodjO5mCzWBcR7A4mpeAsdyiNBl2sTiZscSnNqxk61jVzP5Ba1D7XtOjjr7+3iqowrThj6BY40QqhYh/6BSY9fDzVZQiHnvlo6ZUM5kUK6OavZOovKlp5DIl5sGqoP0qAJnpQ4nhB2WVVsKfPlOXc+2KSsbJ23g9l8zaTMr+X0umlvfEKqyEl1Fa2L1dO0y/KFQ+ILmxcZLpRdq1hRAjd0quq9qGC8ucXhRWDgM4hslVpau0da68g0aItWNez3mc5lB82b3dcZpFMzO41bgw7gvw10AvvTfQDqEYIuQ==-----END\
        \ CERTIFICATE-----"
      entity_address: "EXAMPLE COMPANY LTD, 5 SOME STREET"
      entity_country: "CY"
      certificate_authority_ca_owner_id: "CY_CBC"
      services:
      - CY:
        - "PS_010"
        - "PS_010"
      - CY:
        - "PS_010"
        - "PS_010"
      entity_web_site: "www.example.com"
      entity_id: "0af807d7-3c39-43ef-9712-82bcfde1b9ca"
      entity_town_city: "SOME CITY"
  ResourceDocMeta:
    required:
    - "count"
    - "response_date"
    properties:
      response_date:
        type: "string"
        format: "date"
        example: "2024-02-05T14:15:57Z"
      count:
        type: "integer"
        format: "int32"
        example: 1
    example:
      response_date: "2024-02-05T14:15:57Z"
      count: 1
  RequestRootJsonClass:
    required:
    - "age"
    - "hobby"
    - "name"
    properties:
      name:
        type: "string"
        example: "ACCOUNT_MANAGEMENT_FEE"
      age:
        type: "integer"
        format: "int64"
        example: 18
      hobby:
        type: "array"
        items:
          type: "string"
    example:
      name: "ACCOUNT_MANAGEMENT_FEE"
      age: 18
      hobby:
      - "hobby"
      - "hobby"
  inline_response_200_scanned_api_versions:
    type: "object"
    required:
    - "API_VERSION"
    - "apiShortVersion"
    - "apiStandard"
    - "urlPrefix"
    properties:
      urlPrefix:
        type: "string"
        example: "obp"
      apiStandard:
        type: "string"
        example: "obp"
      apiShortVersion:
        type: "string"
        example: "v3.1.0"
      API_VERSION:
        type: "string"
        example: "v3.1.0"
    example:
      apiStandard: "obp"
      urlPrefix: "obp"
      apiShortVersion: "v3.1.0"
      API_VERSION: "v3.1.0"
  inline_response_200:
    type: "object"
    required:
    - "scanned_api_versions"
    properties:
      scanned_api_versions:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_scanned_api_versions"
    example:
      scanned_api_versions:
      - apiStandard: "obp"
        urlPrefix: "obp"
        apiShortVersion: "v3.1.0"
        API_VERSION: "v3.1.0"
      - apiStandard: "obp"
        urlPrefix: "obp"
        apiShortVersion: "v3.1.0"
        API_VERSION: "v3.1.0"
  inline_response_200_1:
    type: "object"
    required:
    - "authentication_types_validations"
    properties:
      authentication_types_validations:
        type: "array"
        items:
          $ref: "#/definitions/JsonAuthTypeValidation"
    example:
      authentication_types_validations:
      - operationId: "OBPv4.0.0-updateXxx"
        authTypes:
        - "DirectLogin"
        - "DirectLogin"
      - operationId: "OBPv4.0.0-updateXxx"
        authTypes:
        - "DirectLogin"
        - "DirectLogin"
  inline_response_200_2:
    type: "object"
    required:
    - "json_schema_validations"
    properties:
      json_schema_validations:
        type: "array"
        items:
          $ref: "#/definitions/JsonValidationV400"
    example:
      json_schema_validations:
      - json_schema:
          $schema: "http://json-schema.org/draft-07/schema"
          description: "The demo json-schema"
          additionalProperties: true
          title: "The demo schema"
          type: "object"
          properties:
            xxx_id:
              examples:
              - "examples"
              - "examples"
              minLength: 2
              type: "string"
              maxLength: 50
          required:
          - "required"
          - "required"
        operation_id: "OBPv4.0.0-createXxx"
      - json_schema:
          $schema: "http://json-schema.org/draft-07/schema"
          description: "The demo json-schema"
          additionalProperties: true
          title: "The demo schema"
          type: "object"
          properties:
            xxx_id:
              examples:
              - "examples"
              - "examples"
              minLength: 2
              type: "string"
              maxLength: 50
          required:
          - "required"
          - "required"
        operation_id: "OBPv4.0.0-createXxx"
  inline_response_200_3_swagger_string:
    type: "object"
    required:
    - "swagger"
    properties:
      swagger:
        type: "string"
        example: "2.0"
    example:
      swagger: "2.0"
  inline_response_200_3_dynamic_endpoints:
    type: "object"
    required:
    - "dynamic_endpoint_id"
    - "swagger_string"
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      dynamic_endpoint_id:
        type: "string"
        example: "dynamic-endpoint-id"
      swagger_string:
        $ref: "#/definitions/inline_response_200_3_swagger_string"
    example:
      swagger_string:
        swagger: "2.0"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      dynamic_endpoint_id: "dynamic-endpoint-id"
  inline_response_200_3:
    type: "object"
    required:
    - "dynamic_endpoints"
    properties:
      dynamic_endpoints:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_3_dynamic_endpoints"
    example:
      dynamic_endpoints:
      - swagger_string:
          swagger: "2.0"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        dynamic_endpoint_id: "dynamic-endpoint-id"
      - swagger_string:
          swagger: "2.0"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        dynamic_endpoint_id: "dynamic-endpoint-id"
  body:
    type: "object"
    required:
    - "swagger"
    properties:
      swagger:
        type: "string"
        example: "2.0"
    example:
      swagger: "2.0"
  inline_response_201:
    type: "object"
    required:
    - "dynamic_endpoint_id"
    - "swagger_string"
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      dynamic_endpoint_id:
        type: "string"
        example: "dynamic-endpoint-id"
      swagger_string:
        $ref: "#/definitions/body"
    example:
      swagger_string:
        swagger: "2.0"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      dynamic_endpoint_id: "dynamic-endpoint-id"
  inline_response_200_4:
    type: "object"
    required:
    - "dynamic_entities"
    properties:
      dynamic_entities:
        type: "array"
        items:
          $ref: "#/definitions/DynamicEntityFooBar"
    example:
      dynamic_entities:
      - bankId: "bankId"
        dynamicEntityId: "dynamicEntityId"
        hasPersonalEntity: true
        userId: "userId"
        FooBar:
          description: "description of this entity, can be markdown text."
          required:
          - "required"
          - "required"
          properties:
            number:
              description: "description of **number** field, can be markdown text."
              type: "number"
              example: 698761728
            name:
              minLength: 3
              description: "description of **name** field, can be markdown text."
              type: "number"
              maxLength: 20
              example: "James Brown"
      - bankId: "bankId"
        dynamicEntityId: "dynamicEntityId"
        hasPersonalEntity: true
        userId: "userId"
        FooBar:
          description: "description of this entity, can be markdown text."
          required:
          - "required"
          - "required"
          properties:
            number:
              description: "description of **number** field, can be markdown text."
              type: "number"
              example: 698761728
            name:
              minLength: 3
              description: "description of **name** field, can be markdown text."
              type: "number"
              maxLength: 20
              example: "James Brown"
  inline_response_200_5:
    type: "object"
    required:
    - "dynamic-message-docs"
    properties:
      dynamic-message-docs:
        type: "array"
        items:
          $ref: "#/definitions/JsonDynamicMessageDoc"
    example:
      dynamic-message-docs:
      - process: "obp.getBank"
        message_format: ""
        example_outbound_message: "{}"
        dynamic_message_doc_id: ""
        inbound_topic: ""
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        example_inbound_message: "{}"
        outbound_avro_schema: ""
        bank_id: "gh.29.uk"
        method_body: "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29"
        programming_lang: "Scala"
        outbound_topic: ""
        adapter_implementation: ""
        inbound_avro_schema: ""
      - process: "obp.getBank"
        message_format: ""
        example_outbound_message: "{}"
        dynamic_message_doc_id: ""
        inbound_topic: ""
        description: "This an optional field. Maximum length is 2000. It can be any\
          \ characters here."
        example_inbound_message: "{}"
        outbound_avro_schema: ""
        bank_id: "gh.29.uk"
        method_body: "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29"
        programming_lang: "Scala"
        outbound_topic: ""
        adapter_implementation: ""
        inbound_avro_schema: ""
  inline_response_200_6:
    type: "object"
    required:
    - "dynamic-resource-docs"
    properties:
      dynamic-resource-docs:
        type: "array"
        items:
          $ref: "#/definitions/JsonDynamicResourceDoc"
    example:
      dynamic-resource-docs:
      - dynamic_resource_doc_id: "vce035ca-9a0f-4bfa-b30b-9003aa467f51"
        request_verb: "POST"
        summary: "Create My User"
        roles: "CanCreateMyUser"
        description: "Create one User"
        success_response_body:
          my_user_id: "some_id_value"
          name: "Jhon"
          _optional_fields_:
          - "hobby"
          - "hobby"
          age: 12
          hobby:
          - "coding"
          - "coding"
        request_url: "/my_user/MY_USER_ID"
        tags: "Create-My-User"
        bank_id: "gh.29.uk"
        method_body: "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D"
        partial_function_name: "createUser"
        error_response_bodies: "OBP-50000: Unknown Error.,OBP-20001: User not logged\
          \ in. Authentication is required!,OBP-20006: User is missing one or more\
          \ roles: ,OBP-10001: Incorrect json format."
        example_request_body:
          name: "Jhon"
          _optional_fields_:
          - "hobby"
          - "hobby"
          age: 12
          hobby:
          - "coding"
          - "coding"
      - dynamic_resource_doc_id: "vce035ca-9a0f-4bfa-b30b-9003aa467f51"
        request_verb: "POST"
        summary: "Create My User"
        roles: "CanCreateMyUser"
        description: "Create one User"
        success_response_body:
          my_user_id: "some_id_value"
          name: "Jhon"
          _optional_fields_:
          - "hobby"
          - "hobby"
          age: 12
          hobby:
          - "coding"
          - "coding"
        request_url: "/my_user/MY_USER_ID"
        tags: "Create-My-User"
        bank_id: "gh.29.uk"
        method_body: "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D"
        partial_function_name: "createUser"
        error_response_bodies: "OBP-50000: Unknown Error.,OBP-20001: User not logged\
          \ in. Authentication is required!,OBP-20006: User is missing one or more\
          \ roles: ,OBP-10001: Incorrect json format."
        example_request_body:
          name: "Jhon"
          _optional_fields_:
          - "hobby"
          - "hobby"
          age: 12
          hobby:
          - "coding"
          - "coding"
  inline_response_200_7_response_mapping_name:
    type: "object"
    required:
    - "entity"
    - "field"
    - "query"
    properties:
      entity:
        type: "string"
        example: "FooBar"
      field:
        type: "string"
        example: "name"
      query:
        type: "string"
        example: "number"
    example:
      field: "name"
      query: "number"
      entity: "FooBar"
  inline_response_200_7_response_mapping_balance:
    type: "object"
    required:
    - "entity"
    - "field"
    - "query"
    properties:
      entity:
        type: "string"
        example: "FashionBrand"
      field:
        type: "string"
        example: "number"
      query:
        type: "string"
        example: "number"
    example:
      field: "number"
      query: "number"
      entity: "FashionBrand"
  inline_response_200_7_response_mapping:
    type: "object"
    required:
    - "balance"
    - "name"
    properties:
      name:
        $ref: "#/definitions/inline_response_200_7_response_mapping_name"
      balance:
        $ref: "#/definitions/inline_response_200_7_response_mapping_balance"
    example:
      balance:
        field: "number"
        query: "number"
        entity: "FashionBrand"
      name:
        field: "name"
        query: "number"
        entity: "FooBar"
  inline_response_200_7_endpointmappings:
    type: "object"
    required:
    - "endpoint_mapping_id"
    - "operation_id"
    - "request_mapping"
    - "response_mapping"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping:
        type: "object"
        properties: {}
      response_mapping:
        $ref: "#/definitions/inline_response_200_7_response_mapping"
      endpoint_mapping_id:
        type: "string"
        example: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
    example:
      endpoint_mapping_id: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      operation_id: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping: "{}"
      response_mapping:
        balance:
          field: "number"
          query: "number"
          entity: "FashionBrand"
        name:
          field: "name"
          query: "number"
          entity: "FooBar"
  inline_response_200_7:
    type: "object"
    required:
    - "endpoint-mappings"
    properties:
      endpoint-mappings:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_7_endpointmappings"
    example:
      endpoint-mappings:
      - endpoint_mapping_id: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
        operation_id: "OBPv4.0.0-dynamicEndpoint_POST_account"
        request_mapping: "{}"
        response_mapping:
          balance:
            field: "number"
            query: "number"
            entity: "FashionBrand"
          name:
            field: "name"
            query: "number"
            entity: "FooBar"
      - endpoint_mapping_id: "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
        operation_id: "OBPv4.0.0-dynamicEndpoint_POST_account"
        request_mapping: "{}"
        response_mapping:
          balance:
            field: "number"
            query: "number"
            entity: "FashionBrand"
          name:
            field: "name"
            query: "number"
            entity: "FooBar"
  body_1:
    type: "object"
    required:
    - "operation_id"
    - "request_mapping"
    - "response_mapping"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping:
        type: "object"
        properties: {}
      response_mapping:
        $ref: "#/definitions/inline_response_200_7_response_mapping"
    example:
      operation_id: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping: "{}"
      response_mapping:
        balance:
          field: "number"
          query: "number"
          entity: "FashionBrand"
        name:
          field: "name"
          query: "number"
          entity: "FooBar"
  body_2:
    type: "object"
    required:
    - "operation_id"
    - "request_mapping"
    - "response_mapping"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping:
        type: "object"
        properties: {}
      response_mapping:
        $ref: "#/definitions/inline_response_200_7_response_mapping"
  inline_response_200_8:
    type: "object"
    required:
    - "connectors_methods"
    properties:
      connectors_methods:
        type: "array"
        items:
          $ref: "#/definitions/JsonConnectorMethod"
    example:
      connectors_methods:
      - connector_method_id: "ace0352a-9a0f-4bfa-b30b-9003aa467f51"
        method_name: "getBank"
        method_body: "package%20code.bankconnectors%3B%0A%0Aimport%20com.openbankproject.commons.model.*%3B%0Aimport%20java.util.function.Function%3B%0Aimport%20java.util.function.Supplier%3B%0A%0A%2F**%0A%20*%20This%20is%20a%20java%20dynamic%20function%20template.%0A%20*%20Must%20copy%20the%20whole%20content%20of%20the%20file%20as%20%22dynamic%20method%20body%22.%0A%20*%20Currently%2C%20support%20Java%201.8%20version%20language%20features%0A%20*%2F%0Apublic%20class%20DynamicJavaConnector%20implements%20Supplier%3CFunction%3CObject%5B%5D%2C%20Object%3E%3E%20%7B%0A%20%20%20%20private%20Object%20apply(Object%5B%5D%20args)%20%7B%0A%20%20%20%20%20%20%20BankId%20bankId%20%3D%20(BankId)%20args%5B0%5D%3B%0A%0A%20%20%20%20%20%20%20Bank%20bank%20%3D%20new%20BankCommons(bankId%2C%20%22The%20Java%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22The%20Royal%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%2Flogo.gif%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22OBP%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Swift%20bic%20value%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20return%20bank%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%40Override%0A%20%20%20%20public%20Function%3CObject%5B%5D%2C%20Object%3E%20get()%20%7B%0A%20%20%20%20%20%20%20%20return%20this%3A%3Aapply%3B%0A%20%20%20%20%7D%0A%7D%0A"
        programming_lang: "Java"
      - connector_method_id: "ace0352a-9a0f-4bfa-b30b-9003aa467f51"
        method_name: "getBank"
        method_body: "package%20code.bankconnectors%3B%0A%0Aimport%20com.openbankproject.commons.model.*%3B%0Aimport%20java.util.function.Function%3B%0Aimport%20java.util.function.Supplier%3B%0A%0A%2F**%0A%20*%20This%20is%20a%20java%20dynamic%20function%20template.%0A%20*%20Must%20copy%20the%20whole%20content%20of%20the%20file%20as%20%22dynamic%20method%20body%22.%0A%20*%20Currently%2C%20support%20Java%201.8%20version%20language%20features%0A%20*%2F%0Apublic%20class%20DynamicJavaConnector%20implements%20Supplier%3CFunction%3CObject%5B%5D%2C%20Object%3E%3E%20%7B%0A%20%20%20%20private%20Object%20apply(Object%5B%5D%20args)%20%7B%0A%20%20%20%20%20%20%20BankId%20bankId%20%3D%20(BankId)%20args%5B0%5D%3B%0A%0A%20%20%20%20%20%20%20Bank%20bank%20%3D%20new%20BankCommons(bankId%2C%20%22The%20Java%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22The%20Royal%20Bank%20of%20Scotland%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%2Flogo.gif%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22http%3A%2F%2Fwww.red-bank-shoreditch.com%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22OBP%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Swift%20bic%20value%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22Java%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20return%20bank%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%40Override%0A%20%20%20%20public%20Function%3CObject%5B%5D%2C%20Object%3E%20get()%20%7B%0A%20%20%20%20%20%20%20%20return%20this%3A%3Aapply%3B%0A%20%20%20%20%7D%0A%7D%0A"
        programming_lang: "Java"
  inline_response_200_9:
    type: "object"
    required:
    - "dynamic_endpoints"
    properties:
      dynamic_endpoints:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_201"
    example:
      dynamic_endpoints:
      - swagger_string:
          swagger: "2.0"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        dynamic_endpoint_id: "dynamic-endpoint-id"
      - swagger_string:
          swagger: "2.0"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        dynamic_endpoint_id: "dynamic-endpoint-id"
  body_3:
    type: "object"
    required:
    - "swagger"
    properties:
      swagger:
        type: "string"
        example: "2.0"
    example:
      swagger: "2.0"
  inline_response_201_1:
    type: "object"
    required:
    - "dynamic_endpoint_id"
    - "swagger_string"
    - "user_id"
    properties:
      user_id:
        type: "string"
        example: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      dynamic_endpoint_id:
        type: "string"
        example: "dynamic-endpoint-id"
      swagger_string:
        $ref: "#/definitions/body_3"
    example:
      swagger_string:
        swagger: "2.0"
      user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      dynamic_endpoint_id: "dynamic-endpoint-id"
  body_4:
    type: "object"
    required:
    - "operation_id"
    - "request_mapping"
    - "response_mapping"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping:
        type: "object"
        properties: {}
      response_mapping:
        $ref: "#/definitions/inline_response_200_7_response_mapping"
    example:
      operation_id: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping: "{}"
      response_mapping:
        balance:
          field: "number"
          query: "number"
          entity: "FashionBrand"
        name:
          field: "name"
          query: "number"
          entity: "FooBar"
  body_5:
    type: "object"
    required:
    - "operation_id"
    - "request_mapping"
    - "response_mapping"
    properties:
      operation_id:
        type: "string"
        example: "OBPv4.0.0-dynamicEndpoint_POST_account"
      request_mapping:
        type: "object"
        properties: {}
      response_mapping:
        $ref: "#/definitions/inline_response_200_7_response_mapping"
  inline_response_200_10:
    type: "object"
    required:
    - "method_routings"
    properties:
      method_routings:
        type: "array"
        items:
          $ref: "#/definitions/MethodRoutingCommons"
    example:
      method_routings:
      - method_routing_id: "method_routing_id"
        method_name: "getBank"
        is_bank_id_exact_match: false
        bank_id_pattern: "some_bankId_.*"
        connector_name: "rest_vMar2019"
        parameters:
        - value: "http://mydomain.com/xxx"
          key: "url"
        - value: "http://mydomain.com/xxx"
          key: "url"
      - method_routing_id: "method_routing_id"
        method_name: "getBank"
        is_bank_id_exact_match: false
        bank_id_pattern: "some_bankId_.*"
        connector_name: "rest_vMar2019"
        parameters:
        - value: "http://mydomain.com/xxx"
          key: "url"
        - value: "http://mydomain.com/xxx"
          key: "url"
  inline_response_200_11:
    type: "object"
    required:
    - "webui_props"
    properties:
      webui_props:
        type: "array"
        items:
          $ref: "#/definitions/WebUiPropsCommons"
    example:
      webui_props:
      - name: "webui_api_explorer_url"
        web_ui_props_id: "web_ui_props_id"
        value: "https://apiexplorer.openbankproject.com"
      - name: "webui_api_explorer_url"
        web_ui_props_id: "web_ui_props_id"
        value: "https://apiexplorer.openbankproject.com"
  inline_response_200_12:
    type: "object"
    required:
    - "dynamic_endpoints"
    properties:
      dynamic_endpoints:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_201_1"
    example:
      dynamic_endpoints:
      - swagger_string:
          swagger: "2.0"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        dynamic_endpoint_id: "dynamic-endpoint-id"
      - swagger_string:
          swagger: "2.0"
        user_id: "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        dynamic_endpoint_id: "dynamic-endpoint-id"
  inline_response_200_13_covid_api_days:
    type: "object"
    required:
    - "covidAPIDaysId"
    - "name"
    - "number"
    properties:
      covidAPIDaysId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      covidAPIDaysId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name: "James Brown"
  inline_response_200_13_covid_api_days_list:
    type: "object"
    required:
    - "covid_api_days"
    properties:
      covid_api_days:
        $ref: "#/definitions/inline_response_200_13_covid_api_days"
    example:
      covid_api_days:
        number: 698761728
        covidAPIDaysId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        name: "James Brown"
  inline_response_200_13:
    type: "object"
    required:
    - "covid_api_days_list"
    properties:
      covid_api_days_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_13_covid_api_days_list"
    example:
      covid_api_days_list:
      - covid_api_days:
          number: 698761728
          covidAPIDaysId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
      - covid_api_days:
          number: 698761728
          covidAPIDaysId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
  body_6:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_7:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_8:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_14_fish_port:
    type: "object"
    required:
    - "fish"
    - "fishPortId"
    - "number"
    properties:
      fishPortId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      fish:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: "6987233228"
    example:
      number: "6987233228"
      fish: "James Brown"
      fishPortId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_14_fish_port_list:
    type: "object"
    required:
    - "fish_port"
    properties:
      fish_port:
        $ref: "#/definitions/inline_response_200_14_fish_port"
    example:
      fish_port:
        number: "6987233228"
        fish: "James Brown"
        fishPortId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_14:
    type: "object"
    required:
    - "fish_port_list"
    properties:
      fish_port_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_14_fish_port_list"
    example:
      fish_port_list:
      - fish_port:
          number: "6987233228"
          fish: "James Brown"
          fishPortId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - fish_port:
          number: "6987233228"
          fish: "James Brown"
          fishPortId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_9:
    type: "object"
    required:
    - "fish"
    - "number"
    properties:
      fish:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: "6987233228"
  body_10:
    type: "object"
    required:
    - "fish"
    - "number"
    properties:
      fish:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: "6987233228"
  body_11:
    type: "object"
    required:
    - "fish"
    - "number"
    properties:
      fish:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: "6987233228"
  inline_response_200_15_foo_bar:
    type: "object"
    required:
    - "fooBarId"
    - "name"
    - "number"
    properties:
      fooBarId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      name: "James Brown"
      fooBarId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_15_foo_bar_list:
    type: "object"
    required:
    - "foo_bar"
    properties:
      foo_bar:
        $ref: "#/definitions/inline_response_200_15_foo_bar"
    example:
      foo_bar:
        number: 698761728
        name: "James Brown"
        fooBarId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_15:
    type: "object"
    required:
    - "foo_bar_list"
    properties:
      foo_bar_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_15_foo_bar_list"
    example:
      foo_bar_list:
      - foo_bar:
          number: 698761728
          name: "James Brown"
          fooBarId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - foo_bar:
          number: 698761728
          name: "James Brown"
          fooBarId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_12:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_13:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_14:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_16_simon_covid:
    type: "object"
    required:
    - "name"
    - "number"
    - "simonCovidId"
    properties:
      simonCovidId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      simonCovidId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name: "James Brown"
  inline_response_200_16_simon_covid_list:
    type: "object"
    required:
    - "simon_covid"
    properties:
      simon_covid:
        $ref: "#/definitions/inline_response_200_16_simon_covid"
    example:
      simon_covid:
        number: 698761728
        simonCovidId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        name: "James Brown"
  inline_response_200_16:
    type: "object"
    required:
    - "simon_covid_list"
    properties:
      simon_covid_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_16_simon_covid_list"
    example:
      simon_covid_list:
      - simon_covid:
          number: 698761728
          simonCovidId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
      - simon_covid:
          number: 698761728
          simonCovidId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
  body_15:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_16:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_17:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_201_2:
    type: "object"
    required:
    - "balance"
    - "name"
    properties:
      name:
        type: "string"
        example: "family account"
      balance:
        type: "integer"
        format: "int32"
        example: 1
    example:
      balance: 1
      name: "family account"
  inline_response_200_17_dentity1:
    type: "object"
    required:
    - "d-Entity1Id"
    - "name"
    - "number"
    properties:
      d-Entity1Id:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      name: "James Brown"
      d-Entity1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_17_dentity1_list:
    type: "object"
    required:
    - "bank-id"
    - "d-entity1"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      d-entity1:
        $ref: "#/definitions/inline_response_200_17_dentity1"
    example:
      bank-id: "gh.29.uk"
      d-entity1:
        number: 698761728
        name: "James Brown"
        d-Entity1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_17:
    type: "object"
    required:
    - "bank-id"
    - "d-entity1_list"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      d-entity1_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_17_dentity1_list"
    example:
      bank-id: "gh.29.uk"
      d-entity1_list:
      - bank-id: "gh.29.uk"
        d-entity1:
          number: 698761728
          name: "James Brown"
          d-Entity1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - bank-id: "gh.29.uk"
        d-entity1:
          number: 698761728
          name: "James Brown"
          d-Entity1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_18:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_19:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_20:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_18_insurance_policy:
    type: "object"
    required:
    - "insurancePolicyId"
    - "name"
    - "number"
    properties:
      insurancePolicyId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      name: "James Brown"
      insurancePolicyId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_18_insurance_policy_list:
    type: "object"
    required:
    - "bank-id"
    - "insurance_policy"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      insurance_policy:
        $ref: "#/definitions/inline_response_200_18_insurance_policy"
    example:
      bank-id: "gh.29.uk"
      insurance_policy:
        number: 698761728
        name: "James Brown"
        insurancePolicyId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_18:
    type: "object"
    required:
    - "bank-id"
    - "insurance_policy_list"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      insurance_policy_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_18_insurance_policy_list"
    example:
      bank-id: "gh.29.uk"
      insurance_policy_list:
      - bank-id: "gh.29.uk"
        insurance_policy:
          number: 698761728
          name: "James Brown"
          insurancePolicyId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - bank-id: "gh.29.uk"
        insurance_policy:
          number: 698761728
          name: "James Brown"
          insurancePolicyId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_21:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_22:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_23:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_19_insurance_premium:
    type: "object"
    required:
    - "insurancePremiumId"
    - "name"
    - "number"
    properties:
      insurancePremiumId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      name: "James Brown"
      insurancePremiumId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_19_insurance_premium_list:
    type: "object"
    required:
    - "bank-id"
    - "insurance_premium"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      insurance_premium:
        $ref: "#/definitions/inline_response_200_19_insurance_premium"
    example:
      bank-id: "gh.29.uk"
      insurance_premium:
        number: 698761728
        name: "James Brown"
        insurancePremiumId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_19:
    type: "object"
    required:
    - "bank-id"
    - "insurance_premium_list"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      insurance_premium_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_19_insurance_premium_list"
    example:
      bank-id: "gh.29.uk"
      insurance_premium_list:
      - bank-id: "gh.29.uk"
        insurance_premium:
          number: 698761728
          name: "James Brown"
          insurancePremiumId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - bank-id: "gh.29.uk"
        insurance_premium:
          number: 698761728
          name: "James Brown"
          insurancePremiumId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_24:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_25:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_26:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_20_march_hare:
    type: "object"
    required:
    - "marchHareId"
    - "name"
    - "number"
    properties:
      marchHareId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      marchHareId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name: "James Brown"
  inline_response_200_20_march_hare_list:
    type: "object"
    required:
    - "bank-id"
    - "march_hare"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      march_hare:
        $ref: "#/definitions/inline_response_200_20_march_hare"
    example:
      bank-id: "gh.29.uk"
      march_hare:
        number: 698761728
        marchHareId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        name: "James Brown"
  inline_response_200_20:
    type: "object"
    required:
    - "bank-id"
    - "march_hare_list"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      march_hare_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_20_march_hare_list"
    example:
      march_hare_list:
      - bank-id: "gh.29.uk"
        march_hare:
          number: 698761728
          marchHareId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
      - bank-id: "gh.29.uk"
        march_hare:
          number: 698761728
          marchHareId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
      bank-id: "gh.29.uk"
  body_27:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_28:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_29:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_21_odometer:
    type: "object"
    required:
    - "name"
    - "number"
    - "odometerId"
    properties:
      odometerId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      odometerId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name: "James Brown"
  inline_response_200_21_odometer_list:
    type: "object"
    required:
    - "bank-id"
    - "odometer"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      odometer:
        $ref: "#/definitions/inline_response_200_21_odometer"
    example:
      bank-id: "gh.29.uk"
      odometer:
        number: 698761728
        odometerId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        name: "James Brown"
  inline_response_200_21:
    type: "object"
    required:
    - "bank-id"
    - "odometer_list"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      odometer_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_21_odometer_list"
    example:
      bank-id: "gh.29.uk"
      odometer_list:
      - bank-id: "gh.29.uk"
        odometer:
          number: 698761728
          odometerId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
      - bank-id: "gh.29.uk"
        odometer:
          number: 698761728
          odometerId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
  body_30:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_31:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_32:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_22_obp_activity:
    type: "object"
    required:
    - "created_date"
    - "name"
    - "obpActivityId"
    - "username"
    properties:
      obpActivityId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      username:
        type: "string"
        example: "James Brown"
      created_date:
        type: "string"
        example: "698761728"
    example:
      name: "James Brown"
      obpActivityId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      created_date: "698761728"
      username: "James Brown"
  inline_response_200_22_obp_activity_list:
    type: "object"
    required:
    - "bank-id"
    - "obp_activity"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      obp_activity:
        $ref: "#/definitions/inline_response_200_22_obp_activity"
    example:
      bank-id: "gh.29.uk"
      obp_activity:
        name: "James Brown"
        obpActivityId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        created_date: "698761728"
        username: "James Brown"
  inline_response_200_22:
    type: "object"
    required:
    - "bank-id"
    - "obp_activity_list"
    properties:
      bank-id:
        type: "string"
        example: "gh.29.uk"
      obp_activity_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_22_obp_activity_list"
    example:
      bank-id: "gh.29.uk"
      obp_activity_list:
      - bank-id: "gh.29.uk"
        obp_activity:
          name: "James Brown"
          obpActivityId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          created_date: "698761728"
          username: "James Brown"
      - bank-id: "gh.29.uk"
        obp_activity:
          name: "James Brown"
          obpActivityId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          created_date: "698761728"
          username: "James Brown"
  body_33:
    type: "object"
    required:
    - "created_date"
    - "name"
    - "username"
    properties:
      name:
        type: "string"
        example: "James Brown"
      username:
        type: "string"
        example: "James Brown"
      created_date:
        type: "string"
        example: "698761728"
  body_34:
    type: "object"
    required:
    - "created_date"
    - "name"
    - "username"
    properties:
      name:
        type: "string"
        example: "James Brown"
      username:
        type: "string"
        example: "James Brown"
      created_date:
        type: "string"
        example: "698761728"
  body_35:
    type: "object"
    required:
    - "created_date"
    - "name"
    - "username"
    properties:
      name:
        type: "string"
        example: "James Brown"
      username:
        type: "string"
        example: "James Brown"
      created_date:
        type: "string"
        example: "698761728"
  inline_response_200_23_customer_cars:
    type: "object"
    required:
    - "customer_carsId"
    - "customer_identifier"
    - "manufacturer"
    properties:
      customer_carsId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      customer_identifier:
        type: "string"
        example: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
      manufacturer:
        type: "string"
        example: "BMW"
    example:
      customer_identifier: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
      customer_carsId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      manufacturer: "BMW"
  inline_response_200_23_customer_cars_list:
    type: "object"
    required:
    - "customer_cars"
    properties:
      customer_cars:
        $ref: "#/definitions/inline_response_200_23_customer_cars"
    example:
      customer_cars:
        customer_identifier: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
        customer_carsId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        manufacturer: "BMW"
  inline_response_200_23:
    type: "object"
    required:
    - "customer_cars_list"
    properties:
      customer_cars_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_23_customer_cars_list"
    example:
      customer_cars_list:
      - customer_cars:
          customer_identifier: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
          customer_carsId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          manufacturer: "BMW"
      - customer_cars:
          customer_identifier: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
          customer_carsId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          manufacturer: "BMW"
  body_36:
    type: "object"
    required:
    - "customer_identifier"
    - "manufacturer"
    properties:
      customer_identifier:
        type: "string"
        example: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
      manufacturer:
        type: "string"
        example: "BMW"
  body_37:
    type: "object"
    required:
    - "customer_identifier"
    - "manufacturer"
    properties:
      customer_identifier:
        type: "string"
        example: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
      manufacturer:
        type: "string"
        example: "BMW"
  body_38:
    type: "object"
    required:
    - "customer_identifier"
    - "manufacturer"
    properties:
      customer_identifier:
        type: "string"
        example: "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"
      manufacturer:
        type: "string"
        example: "BMW"
  inline_response_200_24_test_daniel707:
    type: "object"
    required:
    - "name"
    - "number"
    - "test_daniel707Id"
    properties:
      test_daniel707Id:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      name: "James Brown"
      test_daniel707Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_24_test_daniel707_list:
    type: "object"
    required:
    - "test_daniel707"
    properties:
      test_daniel707:
        $ref: "#/definitions/inline_response_200_24_test_daniel707"
    example:
      test_daniel707:
        number: 698761728
        name: "James Brown"
        test_daniel707Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_24:
    type: "object"
    required:
    - "test_daniel707_list"
    properties:
      test_daniel707_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_24_test_daniel707_list"
    example:
      test_daniel707_list:
      - test_daniel707:
          number: 698761728
          name: "James Brown"
          test_daniel707Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - test_daniel707:
          number: 698761728
          name: "James Brown"
          test_daniel707Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_39:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_40:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_41:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_25_sustrans:
    type: "object"
    required:
    - "name"
    - "number"
    - "sustransId"
    properties:
      sustransId:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      sustransId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name: "James Brown"
  inline_response_200_25_sustrans_list:
    type: "object"
    required:
    - "sustrans"
    properties:
      sustrans:
        $ref: "#/definitions/inline_response_200_25_sustrans"
    example:
      sustrans:
        number: 698761728
        sustransId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
        name: "James Brown"
  inline_response_200_25:
    type: "object"
    required:
    - "sustrans_list"
    properties:
      sustrans_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_25_sustrans_list"
    example:
      sustrans_list:
      - sustrans:
          number: 698761728
          sustransId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
      - sustrans:
          number: 698761728
          sustransId: "d8839721-ad8f-45dd-9f78-2080414b93f9"
          name: "James Brown"
  body_42:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_43:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_44:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  inline_response_200_26_test1:
    type: "object"
    required:
    - "name"
    - "number"
    - "test1Id"
    properties:
      test1Id:
        type: "string"
        example: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
    example:
      number: 698761728
      name: "James Brown"
      test1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_26_test1_list:
    type: "object"
    required:
    - "test1"
    properties:
      test1:
        $ref: "#/definitions/inline_response_200_26_test1"
    example:
      test1:
        number: 698761728
        name: "James Brown"
        test1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  inline_response_200_26:
    type: "object"
    required:
    - "test1_list"
    properties:
      test1_list:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_26_test1_list"
    example:
      test1_list:
      - test1:
          number: 698761728
          name: "James Brown"
          test1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
      - test1:
          number: 698761728
          name: "James Brown"
          test1Id: "d8839721-ad8f-45dd-9f78-2080414b93f9"
  body_45:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_46:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_47:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_48:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_49:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  body_50:
    type: "object"
    required:
    - "name"
    - "number"
    properties:
      name:
        type: "string"
        example: "James Brown"
      number:
        type: "integer"
        format: "int32"
        example: 698761728
  MessageDocJson_outboundAvroSchema:
    type: "object"
    required:
    - "jsonString"
    properties:
      jsonString:
        type: "string"
        example: "{}"
    example:
      jsonString: "{}"
  MetricJsonV510_response_body:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 401
      message:
        type: "string"
        example: "OBP-20001: User not logged in. Authentication is required!"
    example:
      code: 401
      message: "OBP-20001: User not logged in. Authentication is required!"
  JsonDynamicResourceDoc_example_request_body:
    type: "object"
    required:
    - "_optional_fields_"
    - "age"
    - "hobby"
    - "name"
    properties:
      name:
        type: "string"
        example: "Jhon"
      age:
        type: "integer"
        format: "int32"
        example: 12
      hobby:
        type: "array"
        items:
          type: "string"
          example: "coding"
      _optional_fields_:
        type: "array"
        items:
          type: "string"
          example: "hobby"
    example:
      name: "Jhon"
      _optional_fields_:
      - "hobby"
      - "hobby"
      age: 12
      hobby:
      - "coding"
      - "coding"
  JsonDynamicResourceDoc_success_response_body:
    type: "object"
    required:
    - "_optional_fields_"
    - "age"
    - "hobby"
    - "my_user_id"
    - "name"
    properties:
      my_user_id:
        type: "string"
        example: "some_id_value"
      name:
        type: "string"
        example: "Jhon"
      age:
        type: "integer"
        format: "int32"
        example: 12
      hobby:
        type: "array"
        items:
          type: "string"
          example: "coding"
      _optional_fields_:
        type: "array"
        items:
          type: "string"
          example: "hobby"
    example:
      my_user_id: "some_id_value"
      name: "Jhon"
      _optional_fields_:
      - "hobby"
      - "hobby"
      age: 12
      hobby:
      - "coding"
      - "coding"
  ConsentRequestResponseJson_payload_account_routing:
    type: "object"
    required:
    - "address"
    - "scheme"
    properties:
      scheme:
        type: "string"
        example: "AccountNumber"
      address:
        type: "string"
        example: "4930396"
    example:
      address: "4930396"
      scheme: "AccountNumber"
  ConsentRequestResponseJson_payload_account_access:
    type: "object"
    required:
    - "account_routing"
    - "view_id"
    properties:
      account_routing:
        $ref: "#/definitions/ConsentRequestResponseJson_payload_account_routing"
      view_id:
        type: "string"
        example: "owner"
    example:
      view_id: "owner"
      account_routing:
        address: "4930396"
        scheme: "AccountNumber"
  ConsentRequestResponseJson_payload:
    type: "object"
    required:
    - "account_access"
    - "everything"
    - "phone_number"
    - "time_to_live"
    - "valid_from"
    properties:
      everything:
        type: "boolean"
        example: false
      account_access:
        type: "array"
        items:
          $ref: "#/definitions/ConsentRequestResponseJson_payload_account_access"
      phone_number:
        type: "string"
        example: "+44 07972 444 876"
      valid_from:
        type: "string"
        example: "2022-06-14T12:42:00Z"
      time_to_live:
        type: "integer"
        format: "int32"
        example: 3600
    example:
      time_to_live: 3600
      valid_from: "2022-06-14T12:42:00Z"
      phone_number: "+44 07972 444 876"
      everything: false
      account_access:
      - view_id: "owner"
        account_routing:
          address: "4930396"
          scheme: "AccountNumber"
      - view_id: "owner"
        account_routing:
          address: "4930396"
          scheme: "AccountNumber"
  RegulatedEntityPostJsonV510_services:
    type: "object"
    required:
    - "CY"
    properties:
      CY:
        type: "array"
        items:
          type: "string"
          example: "PS_010"
    example:
      CY:
      - "PS_010"
      - "PS_010"
  ResourceDocJson_typed_success_response_body_properties_jsonString:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        example: "string"
    example:
      type: "string"
  ResourceDocJson_typed_success_response_body_properties:
    type: "object"
    required:
    - "jsonString"
    properties:
      jsonString:
        $ref: "#/definitions/ResourceDocJson_typed_success_response_body_properties_jsonString"
    example:
      jsonString:
        type: "string"
  ResourceDocJson_typed_success_response_body:
    type: "object"
    required:
    - "properties"
    - "type"
    properties:
      type:
        type: "string"
        example: "object"
      properties:
        $ref: "#/definitions/ResourceDocJson_typed_success_response_body_properties"
    example:
      type: "object"
      properties:
        jsonString:
          type: "string"
